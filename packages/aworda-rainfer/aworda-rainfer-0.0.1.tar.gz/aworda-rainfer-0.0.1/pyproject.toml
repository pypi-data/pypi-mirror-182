[tool.poetry]
name = "aworda-rainfer"
version = "0.0.1"
description = "Modified from Ariadne & Another elegant Python QQ Bot framework for mirai and mirai-api-http v2."
authors = [
    "LinNian <crynian@outlook.com>",
    "BlueGlassBlock <blueglassblock@outlook.com>",
    "GreyElaina <GreyElaina@outlook.com>"
]
packages = [{ include = "aworda", from = "src" }]
readme = "README.md"
repository = "https://github.com/AwordaProject/Rainfer"
documentation = "https://graia.rtfd.io/"
homepage = "https://github.com/AwordaProject/Rainfer"
keywords = ["graia", "bot", "qq", "framework", "mirai"]
classifiers = [
    "Topic :: Communications :: Chat",
    "Framework :: Robot Framework :: Library",
    "Framework :: AsyncIO",
    "Typing :: Typed",
    "Development Status :: 4 - Beta",
    "Operating System :: OS Independent",
]

[[tool.poetry.source]]
name = "tuna-tsinghua"
default = false
url = "https://mirrors.tuna.tsinghua.edu.cn/pypi/web/simple/"

[[tool.poetry.source]]
name = "aliyun"
default = false
url = "https://mirrors.aliyun.com/pypi/simple/"

[tool.poetry.dependencies]
python = "^3.8"
graia-broadcast = "^0.16.1"
aiohttp = "^3.7.4"
pydantic = "^1.8.2"
yarl = "^1.7"
loguru = "^0.6"
typing-extensions = "^4.0"
graia-scheduler = { version = "^0.0", optional = true }
graia-saya = { version = "^0.0"}
fastapi = { version = ">=0.74.1, <1.0.0", optional = true }
uvicorn = { extras = ["standard"], version = "^0.17.5", optional = true }
prompt-toolkit = { version = "^3.0.24", optional = true }

[tool.poetry.extras]
graia = ["graia-saya", "graia-scheduler"]
server = ["uvicorn", "fastapi"]
standard = [
    "graia-saya",
    "graia-scheduler",
    "prompt-toolkit"
]
full = [
    "graia-saya",
    "graia-scheduler",
    "uvicorn",
    "fastapi",
    "prompt-toolkit"
]

[tool.poetry.dev-dependencies]
black = ">=22.1.0"
isort = ">=5.9.3"
pytest = "^7.1"
coverage = "^6.2"
flake8 = "^4.0"
pytest-asyncio = "^0.18.3"
devtools = ">= 0.8"
pre-commit = "^2.16"
objgraph = { version = ">= 3.5", optional = true }
pydeps = { version = "^1.10", optional = true }
yappi = { version = "^1.3.3", optional = true }
mkdocstrings = { extras = ["python"], version = "^0.18.0" }
mkdocs-material = "^8.2.1"
mkdocs-gen-files = "^0.3.4"
mkdocs-section-index = "^0.3.3"
mkdocs-literate-nav = "^0.4.1"

[tool.isort]
profile = "black"

[tool.black]
line-length = 110
target-version = ['py39']

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.coverage.run]
branch = true
omit = ["*/test/*"]

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_lines = [
    # standard pragma
    "pragma: no cover",
    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",
    "if (typing\\.)?TYPE_CHECKING( is True)?:",
    "\\.\\.\\.",
    "pass",
    # Don't complain about abstract methods, they aren't run:
    "@(abc\\.)?abstractmethod",
    # Don't complain overload method / functions
    "@(typing\\.)?overload"
]

[tool.pyright]
ignore = [
    "docs/**",
    "**/site-packages/**/*.py",
    "**/test*/**/*.py",
    "**/adapter/**",
    "**/temp/**/*.py"
]
