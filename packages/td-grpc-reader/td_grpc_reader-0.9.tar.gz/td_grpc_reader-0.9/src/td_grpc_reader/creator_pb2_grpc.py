# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from .creator_pb2 import TableName as creator__pb2_TableName
from .creator_pb2 import Resultset as creator__pb2_Resultset


class TeradataReaderStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetDataFromTD = channel.unary_stream(
                '/TeradataReader/GetDataFromTD',
                request_serializer=creator__pb2_TableName.SerializeToString,
                response_deserializer=creator__pb2_Resultset.FromString,
                )


class TeradataReaderServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetDataFromTD(self, request, context):
        """(Method definitions not shown)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TeradataReaderServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetDataFromTD': grpc.unary_stream_rpc_method_handler(
                    servicer.GetDataFromTD,
                    request_deserializer=creator__pb2.TableName.FromString,
                    response_serializer=creator__pb2.Resultset.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'TeradataReader', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TeradataReader(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetDataFromTD(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/TeradataReader/GetDataFromTD',
            creator__pb2_TableName.SerializeToString,
            creator__pb2_Resultset.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
