Metadata-Version: 2.1
Name: mlsteam-model-sdk
Version: 0.0.1
Summary: MLSteam Model SDK
License: MIT
Keywords: sdk
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: bravado (==11.0.2)
Requires-Dist: click
Requires-Dist: pythemis
Provides-Extra: dev
Requires-Dist: build ; extra == 'dev'
Requires-Dist: bump2version ; extra == 'dev'
Requires-Dist: myst-parser ; extra == 'dev'
Requires-Dist: sphinx ; extra == 'dev'
Requires-Dist: sphinx-rtd-theme ; extra == 'dev'
Requires-Dist: twine ; extra == 'dev'

# mlsteam-model-sdk
SDK for accessing MLSteam models

## Setup

```bash
pip3 install .
```
> If there is an error running the above command saying *'A "pyproject.toml" file was found, but editable mode currently requires a setup.py based build.'*, this is due to a *Setuptools's* [limitation](https://github.com/pypa/setuptools/issues/2816) and a *pip's* [limitation](https://github.com/pypa/pip/pull/8212) for supporting PEP 660 in their early versions. Upgrade *pip >= 21.3.1* and *Setuptool >= 64.0.0* will solve this problem: `pip install -U pip` and `pip install -U setuptools`.

To process encrypted model versions, install the *Themis development package* according to the official [instrunctions](https://docs.cossacklabs.com/themis/languages/python/installation/). Debian/Ubuntu users have a handy installation method:

```bash
# for users that already have administrator privileges
mlsteam-model-cli install-themisdev

# for those that need privilege lifting
sudo mlsteam-model-cli install-themisdev
```

## Usage

A minimum example for downloading a model version:

> This example assumes the program is running in an MLSteam system.
> If it is not the case, you may need to setup *API_TOKEN* with
> `mlsteam-model-cli init --api_token=YOUR_API_TOKEN`

```python
from mlsteam_model_sdk.sdk.model import Model

sdk_model = Model()
sdk_model.download_model_version(project_name='project_owner/project_name',
                                 model_name='model_name',
                                 version_name='version_name')
```

> By default, the model version will be downloaded at `$HOME/.mlsteam-model-sdk/models/download/`.

This loads a model version and makes prediction:

```python
mv = sdk_model.load_model_version(model_name='model_name',
                                  version_name='version_name')
outputs = mv.predict(inputs)
```
