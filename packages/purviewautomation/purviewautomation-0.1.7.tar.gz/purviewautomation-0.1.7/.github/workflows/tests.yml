name: Tests

on:
  push:
    branches:
      - main

jobs:
  create-purview-account:
    runs-on: ubuntu-latest
    steps:
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          enable-AzPSSession: true

      - name: create-purview-account
        uses: azure/powershell@v1
        with:
          azPSVersion: latest
          inlineScript: |
            [string] $RG_NAME = "${{ secrets.RG_NAME }}"
            [string] $LOCATION = "${{ secrets.PURVIEW_LOCATION }}"
            [string] $PURVIEW_ACCOUNT_NAME = "${{ secrets.PURVIEW_ACCOUNT_NAME }}"
            [string] $MANAGED_RG_NAME = "${{ secrets.PURVIEW_MANAGED_RG_NAME }}"
            az config set extension.use_dynamic_install=yes_without_prompt
            az purview account create --account-name $PURVIEW_ACCOUNT_NAME --resource-group $RG_NAME --location $LOCATION --managed-group-name $MANAGED_RG_NAME --output none
            az purview account wait --account-name $PURVIEW_ACCOUNT_NAME --resource-group $RG_NAME --created --output none

  run-python-tests:
    needs: create-purview-account
    runs-on: ${{ matrix.os }}
    env:
      purviewautomation-tenant-id: ${{ secrets.TENANT_ID }}
      purviewautomation-sp-client-id: ${{ secrets.SP_CLIENT_ID }}
      purviewautomation-sp-secret: ${{ secrets.SP_SECRET }}
      purview-account-name: ${{ secrets.PURVIEW_ACCOUNT_NAME }}
      less-access-sp-client-id: ${{ secrets.SP_LESS_ACCESS_PURVIEW_CLIENT_ID }}
      less-access-sp-secret: ${{ secrets.SP_LESS_ACCESS_PURVIEW_SECRET}}
    strategy:
      max-parallel: 1
      matrix:
        os: [ubuntu-latest] # add windows-latest and macos later
        python-version: ['3.8', '3.9', '3.10', '3.11']
      fail-fast: true

    steps:
      - uses: actions/checkout@v3

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4.3.0
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
          cache-dependency-path: pyproject.toml

      - uses: actions/cache@v3
        id: cache
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ runner.os }}-python-${{ env.pythonLocation }}-${{ hashFiles('pyproject.toml') }}-test-v01

      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: pip install -e .[doc,test]

      - run: mkdir coverage

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          enable-AzPSSession: false

      - name: Run tests
        run: coverage run -m pytest
        env:
          COVERAGE_FILE: coverage/.coverage.${{ runner.os }}-py${{ matrix.python-version }}
          CONTEXT: ${{ runner.os }}-py${{ matrix.python-version }}

      - name: Store coverage files
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: coverage

  coverage-combine:
    needs: [create-purview-account, run-python-tests]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4.3.0
        with:
          python-version: '3.8'

      - name: Get coverage files
        uses: actions/download-artifact@v3
        with:
          name: coverage
          path: coverage

      - run: pip install coverage[toml]

      - run: ls -la coverage
      - run: coverage combine coverage
      - run: coverage report
      - run: coverage html --show-contexts --title "purviewautomation coverage for ${{ github.sha }}"

      - name: Store coverage html
        uses: actions/upload-artifact@v3
        with:
          name: coverage-html
          path: htmlcov

  delete-purview-account:
    needs: [create-purview-account, run-python-tests]
    if: always() # Always deletes Purview even if the test job fails
    runs-on: ubuntu-latest
    steps:
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          enable-AzPSSession: true
      - name: Delete Purview Account
        uses: azure/powershell@v1
        with:
          azPSVersion: latest
          inlineScript: |
            [string] $RG_NAME = "${{ secrets.RG_NAME }}"
            [string] $PURVIEW_ACCOUNT_NAME = "${{ secrets.PURVIEW_ACCOUNT_NAME }}"
            az config set extension.use_dynamic_install=yes_without_prompt
            az purview account delete --account-name $PURVIEW_ACCOUNT_NAME --resource-group $RG_NAME --yes --output none
            az purview account wait --account-name $PURVIEW_ACCOUNT_NAME --resource-group $RG_NAME --deleted --output none

  check:
    if: always()

    needs:
    - create-purview-account
    - run-python-tests
    - coverage-combine
    - delete-purview-account

    runs-on: ubuntu-latest

    steps:
    - name: Decide whether the needed jobs succeeded or failed
      uses: re-actors/alls-green@release/v1
      with:
        jobs: ${{ toJSON(needs) }}



