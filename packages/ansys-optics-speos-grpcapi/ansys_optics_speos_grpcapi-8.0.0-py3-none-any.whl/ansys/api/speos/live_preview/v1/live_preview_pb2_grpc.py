# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from ansys.api.speos.live_preview.v1 import live_preview_pb2 as ansys_dot_api_dot_speos_dot_live__preview_dot_v1_dot_live__preview__pb2


class LivePreviewsManagerStub(object):
    """Service for live previews manager
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Create = channel.unary_unary(
                '/ansys.api.speos.live_preview.v1.LivePreviewsManager/Create',
                request_serializer=ansys_dot_api_dot_speos_dot_live__preview_dot_v1_dot_live__preview__pb2.Create_Request.SerializeToString,
                response_deserializer=ansys_dot_api_dot_speos_dot_live__preview_dot_v1_dot_live__preview__pb2.Create_Response.FromString,
                )
        self.Delete = channel.unary_unary(
                '/ansys.api.speos.live_preview.v1.LivePreviewsManager/Delete',
                request_serializer=ansys_dot_api_dot_speos_dot_live__preview_dot_v1_dot_live__preview__pb2.Delete_Request.SerializeToString,
                response_deserializer=ansys_dot_api_dot_speos_dot_live__preview_dot_v1_dot_live__preview__pb2.Delete_Response.FromString,
                )
        self.List = channel.unary_unary(
                '/ansys.api.speos.live_preview.v1.LivePreviewsManager/List',
                request_serializer=ansys_dot_api_dot_speos_dot_live__preview_dot_v1_dot_live__preview__pb2.List_Request.SerializeToString,
                response_deserializer=ansys_dot_api_dot_speos_dot_live__preview_dot_v1_dot_live__preview__pb2.List_Response.FromString,
                )


class LivePreviewsManagerServicer(object):
    """Service for live previews manager
    """

    def Create(self, request, context):
        """! @brief LivePreview creation from a SpeosJob
        	@param[in] job_guid: The SpeosJob's guid from the SpeosJobsManager.
        	@returns guid: The LivePreview's guid from the LivePreviewsManager.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Delete(self, request, context):
        """! @brief LivePreview Deletion
        	@param[in] guid: LivePreview's guid in the LivePreviewsManager.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def List(self, request, context):
        """! @brief List all LivePreviews in LivePreviewsManager
        	@returns guids: list of all LivePreviews guids in LivePreviewsManager.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_LivePreviewsManagerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Create': grpc.unary_unary_rpc_method_handler(
                    servicer.Create,
                    request_deserializer=ansys_dot_api_dot_speos_dot_live__preview_dot_v1_dot_live__preview__pb2.Create_Request.FromString,
                    response_serializer=ansys_dot_api_dot_speos_dot_live__preview_dot_v1_dot_live__preview__pb2.Create_Response.SerializeToString,
            ),
            'Delete': grpc.unary_unary_rpc_method_handler(
                    servicer.Delete,
                    request_deserializer=ansys_dot_api_dot_speos_dot_live__preview_dot_v1_dot_live__preview__pb2.Delete_Request.FromString,
                    response_serializer=ansys_dot_api_dot_speos_dot_live__preview_dot_v1_dot_live__preview__pb2.Delete_Response.SerializeToString,
            ),
            'List': grpc.unary_unary_rpc_method_handler(
                    servicer.List,
                    request_deserializer=ansys_dot_api_dot_speos_dot_live__preview_dot_v1_dot_live__preview__pb2.List_Request.FromString,
                    response_serializer=ansys_dot_api_dot_speos_dot_live__preview_dot_v1_dot_live__preview__pb2.List_Response.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ansys.api.speos.live_preview.v1.LivePreviewsManager', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class LivePreviewsManager(object):
    """Service for live previews manager
    """

    @staticmethod
    def Create(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ansys.api.speos.live_preview.v1.LivePreviewsManager/Create',
            ansys_dot_api_dot_speos_dot_live__preview_dot_v1_dot_live__preview__pb2.Create_Request.SerializeToString,
            ansys_dot_api_dot_speos_dot_live__preview_dot_v1_dot_live__preview__pb2.Create_Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ansys.api.speos.live_preview.v1.LivePreviewsManager/Delete',
            ansys_dot_api_dot_speos_dot_live__preview_dot_v1_dot_live__preview__pb2.Delete_Request.SerializeToString,
            ansys_dot_api_dot_speos_dot_live__preview_dot_v1_dot_live__preview__pb2.Delete_Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def List(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ansys.api.speos.live_preview.v1.LivePreviewsManager/List',
            ansys_dot_api_dot_speos_dot_live__preview_dot_v1_dot_live__preview__pb2.List_Request.SerializeToString,
            ansys_dot_api_dot_speos_dot_live__preview_dot_v1_dot_live__preview__pb2.List_Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class LivePreviewStub(object):
    """Service to handle a live preview
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.InitPreview = channel.unary_unary(
                '/ansys.api.speos.live_preview.v1.LivePreview/InitPreview',
                request_serializer=ansys_dot_api_dot_speos_dot_live__preview_dot_v1_dot_live__preview__pb2.InitPreview_Request.SerializeToString,
                response_deserializer=ansys_dot_api_dot_speos_dot_live__preview_dot_v1_dot_live__preview__pb2.InitPreview_Response.FromString,
                )
        self.GetPreviews = channel.unary_stream(
                '/ansys.api.speos.live_preview.v1.LivePreview/GetPreviews',
                request_serializer=ansys_dot_api_dot_speos_dot_live__preview_dot_v1_dot_live__preview__pb2.GetPreviews_Request.SerializeToString,
                response_deserializer=ansys_dot_api_dot_speos_dot_live__preview_dot_v1_dot_live__preview__pb2.Preview.FromString,
                )
        self.Stop = channel.unary_unary(
                '/ansys.api.speos.live_preview.v1.LivePreview/Stop',
                request_serializer=ansys_dot_api_dot_speos_dot_live__preview_dot_v1_dot_live__preview__pb2.Stop_Request.SerializeToString,
                response_deserializer=ansys_dot_api_dot_speos_dot_live__preview_dot_v1_dot_live__preview__pb2.Stop_Response.FromString,
                )


class LivePreviewServicer(object):
    """Service to handle a live preview
    """

    def InitPreview(self, request, context):
        """! @brief Live preview initialization
        	@param[in] guid: The LivePreview's guid from the LivePreviewsManager.
        	@param[in] sensor_id: Sensor id considered for the preview.
        	@returns PreviewInformation like nb_of_layers available, image_dimensions.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPreviews(self, request, context):
        """! @brief Retrieve previews
        	@param[in] guid: The LivePreview's guid from the LivePreviewsManager.
        	@param[in] layer_id: layer id wished for the preview. If not precised, the preview will consider all layers.
        	@returns Preview binary. (Image serialized as string).
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Stop(self, request, context):
        """! @brief Stop the live preview
        	@param[in] guid: The LivePreview's guid from the LivePreviewsManager.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_LivePreviewServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'InitPreview': grpc.unary_unary_rpc_method_handler(
                    servicer.InitPreview,
                    request_deserializer=ansys_dot_api_dot_speos_dot_live__preview_dot_v1_dot_live__preview__pb2.InitPreview_Request.FromString,
                    response_serializer=ansys_dot_api_dot_speos_dot_live__preview_dot_v1_dot_live__preview__pb2.InitPreview_Response.SerializeToString,
            ),
            'GetPreviews': grpc.unary_stream_rpc_method_handler(
                    servicer.GetPreviews,
                    request_deserializer=ansys_dot_api_dot_speos_dot_live__preview_dot_v1_dot_live__preview__pb2.GetPreviews_Request.FromString,
                    response_serializer=ansys_dot_api_dot_speos_dot_live__preview_dot_v1_dot_live__preview__pb2.Preview.SerializeToString,
            ),
            'Stop': grpc.unary_unary_rpc_method_handler(
                    servicer.Stop,
                    request_deserializer=ansys_dot_api_dot_speos_dot_live__preview_dot_v1_dot_live__preview__pb2.Stop_Request.FromString,
                    response_serializer=ansys_dot_api_dot_speos_dot_live__preview_dot_v1_dot_live__preview__pb2.Stop_Response.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ansys.api.speos.live_preview.v1.LivePreview', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class LivePreview(object):
    """Service to handle a live preview
    """

    @staticmethod
    def InitPreview(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ansys.api.speos.live_preview.v1.LivePreview/InitPreview',
            ansys_dot_api_dot_speos_dot_live__preview_dot_v1_dot_live__preview__pb2.InitPreview_Request.SerializeToString,
            ansys_dot_api_dot_speos_dot_live__preview_dot_v1_dot_live__preview__pb2.InitPreview_Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPreviews(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/ansys.api.speos.live_preview.v1.LivePreview/GetPreviews',
            ansys_dot_api_dot_speos_dot_live__preview_dot_v1_dot_live__preview__pb2.GetPreviews_Request.SerializeToString,
            ansys_dot_api_dot_speos_dot_live__preview_dot_v1_dot_live__preview__pb2.Preview.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Stop(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ansys.api.speos.live_preview.v1.LivePreview/Stop',
            ansys_dot_api_dot_speos_dot_live__preview_dot_v1_dot_live__preview__pb2.Stop_Request.SerializeToString,
            ansys_dot_api_dot_speos_dot_live__preview_dot_v1_dot_live__preview__pb2.Stop_Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
