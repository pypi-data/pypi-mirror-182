# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/01_download.ipynb.

# %% auto 0
__all__ = ['Model', 'Downloader']

# %% ../nbs/01_download.ipynb 4
import logging
import json
import os
import pandas as pd
from pathlib import Path

from numerapi import NumerAPI

# %% ../nbs/01_download.ipynb 5
from abc import ABC, ABCMeta, abstractmethod

# %% ../nbs/01_download.ipynb 6
class Model(object, metaclass=ABCMeta):
    __metaclass__ = ABCMeta

    @abstractmethod
    def __init__(self, model_name: str):
        self.model_name = model_name

    @abstractmethod
    def submit_predictions(self):
        pass

# %% ../nbs/01_download.ipynb 7
class Downloader(object):
    """
    Download data (v4) from numerai tournament

    ...

    Methods
    -------
    download_data()
        Download all v4 data from numerai
    """
    def __init__(self, data_path: Path):
        """
        Parameters
        ----------
        data_path : pathlib.Path
            Base path for data folder
        """
        self.numerAPI = NumerAPI()
        self.current_round = self.numerAPI.get_current_round()
        self.data_path = data_path

    def download_data(self):
        """
        Download all v4 data from numerai

        Specifically it downloads train.parquet, features.json, etc
        """
        logging.info(
            f"Started downloading data to {self.data_path} for round: {self.current_round}")

        self.numerAPI.download_dataset(
            "v4/train.parquet", f"{self.data_path}/train.parquet")
        self.numerAPI.download_dataset(
            "v4/features.json", f"{self.data_path}/features.json")

        self.numerAPI.download_dataset(
            "v4/live.parquet", f"{self.data_path}/live_{self.current_round}.parquet")
        self.numerAPI.download_dataset("v4/live_example_preds.parquet",
                                   f"{self.data_path}/live_example_preds_{self.current_round}.parquet")

        self.numerAPI.download_dataset(
            "v4/validation.parquet", f"{self.data_path}/validation_{self.current_round}.parquet")
        self.numerAPI.download_dataset("v4/validation_example_preds.parquet",
                                   f"{self.data_path}/validation_example_preds_{self.current_round}.parquet")

        logging.info("Finished data download")
