#### autoflake ################################################################
[[".pre-commit-config.yaml".repos]]
repo = "https://github.com/myint/autoflake"

[[".pre-commit-config.yaml".repos.hooks]]
id = "autoflake"
args = [
  "--in-place",
  "--remove-all-unused-imports",
  "--remove-duplicate-keys",
  "--remove-unused-variables",
]

#### black ####################################################################
["pyproject.toml".tool.black]
line-length = 80
skip-magic-trailing-comma = true

[[".pre-commit-config.yaml".repos]]
repo = "https://github.com/psf/black"

[[".pre-commit-config.yaml".repos.hooks]]
id = "black"

[[".pre-commit-config.yaml".repos.hooks]]
id = "black-jupyter"

#### bump2version #############################################################
[[".pre-commit-config.yaml".repos]]
repo = "https://github.com/dycw/pre-commit-hooks"

[[".pre-commit-config.yaml".repos.hooks]]
id = "run-bump2version"
args = ["--setup-cfg"]

#### coverage #################################################################
["pyproject.toml".tool.coverage.run]
branch = true
data_file = ".coverage/data"
parallel = true

["pyproject.toml".tool.coverage.report]
exclude_lines = ["# pragma: no cover", "@overload"]
fail_under = 100.0
skip_covered = true
skip_empty = true

["pyproject.toml".tool.coverage.html]
directory = ".coverage/html"

#### files ####################################################################
[nitpick.files.present]
"pyproject.toml" = ""
"setup.cfg" = ""

[nitpick.files.absent]
".bumpversion.cfg" = ""
".flake8" = ""
".isort.cfg" = ""
"MANIFEST.in" = ""
"setup.py" = ""

#### flake8 ###################################################################
["setup.cfg".flake8]
extend-ignore = "ANN101,ANN102,B008,U101"
# ANN101: flake8-annotations: Missing type annotation for self in method
# ANN102: flake8-annotations: Missing type annotation for cls in method
# B008: flake8-bugbear: Do not perform function calls in argument defaults
# U101: flake8-unused-arguments: Unused argument '_.'
max-line-length = 88
per-file-ignores = "test_*.py:S101"
show-source = true
unused-arguments-ignore-variadic-names = true

[[".pre-commit-config.yaml".repos]]
repo = "https://github.com/pycqa/flake8"

[[".pre-commit-config.yaml".repos.hooks]]
id = "flake8"
additional_dependencies = [
  "flake8-absolute-import",
  "flake8-annotations",
  "flake8-bandit",
  "flake8-bugbear",
  "flake8-comprehensions",
  "flake8-debugger",
  # "flake8-eradicate",
  "flake8-executable",
  "flake8-no-pep420",
  "flake8-pie",
  "flake8-print",
  "flake8-simplify",
  "flake8-unused-arguments",
]

#### hatch ####################################################################
["pyproject.toml".build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

["pyproject.toml".tool.hatch.build]
sources = ["src"]

#### isort ####################################################################
["pyproject.toml".tool.isort]
atomic = true
case_sensitive = true
float_to_top = true
force_single_line = true
line_length = 80
lines_after_imports = 2
profile = "black"
remove_redundant_aliases = true
skip_gitignore = true

[[".pre-commit-config.yaml".repos]]
repo = "https://github.com/pycqa/isort"

[[".pre-commit-config.yaml".repos.hooks]]
id = "isort"

#### nitpick ##################################################################
[[".pre-commit-config.yaml".repos]]
repo = "https://github.com/andreoliwa/nitpick"

[[".pre-commit-config.yaml".repos.hooks]]
id = "nitpick-check"

#### project ##################################################################
["pyproject.toml".project]
dynamic = ["version"]
readme = "README.md"

#### pre-commit hooks #########################################################
[[".pre-commit-config.yaml".repos]]
repo = "https://github.com/pre-commit/pre-commit-hooks"

[[".pre-commit-config.yaml".repos.hooks]]
id = "check-executables-have-shebangs"

[[".pre-commit-config.yaml".repos.hooks]]
id = "check-merge-conflict"

[[".pre-commit-config.yaml".repos.hooks]]
id = "check-shebang-scripts-are-executable"

[[".pre-commit-config.yaml".repos.hooks]]
id = "check-symlinks"

[[".pre-commit-config.yaml".repos.hooks]]
id = "destroyed-symlinks"

[[".pre-commit-config.yaml".repos.hooks]]
id = "detect-private-key"

[[".pre-commit-config.yaml".repos.hooks]]
id = "end-of-file-fixer"

[[".pre-commit-config.yaml".repos.hooks]]
id = "mixed-line-ending"
args = ["--fix=lf"]

[[".pre-commit-config.yaml".repos.hooks]]
id = "no-commit-to-branch"

[[".pre-commit-config.yaml".repos.hooks]]
id = "trailing-whitespace"

#### prettier #################################################################
[[".pre-commit-config.yaml".repos]]
repo = "https://github.com/pre-commit/mirrors-prettier"

[[".pre-commit-config.yaml".repos.hooks]]
id = "prettier"

#### pyright ##################################################################
["pyproject.toml".tool.pyright]
include = ["src"]
executionEnvironments = [{ root = "src" }]
typeCheckingMode = "strict"
reportMissingTypeStubs = false
reportMissingTypeArgument = false
reportPrivateUsage = false
reportPrivateImportUsage = false
reportUnknownArgumentType = false
reportUnknownMemberType = false
reportUnknownParameterType = false
reportUnknownVariableType = false
reportUntypedBaseClass = false
reportImplicitStringConcatenation = "error"
reportMissingSuperCall = "error"
reportPropertyTypeMismatch = "error"
reportUnnecessaryTypeIgnoreComment = "error"
reportUnusedCallResult = "error"

[[".pre-commit-config.yaml".repos]]
repo = "local"

[[".pre-commit-config.yaml".repos.hooks]]
id = "pyright"
name = "pyright"
entry = "pyright"
language = "system"
types = ["python"]

#### pytest ###################################################################
["pyproject.toml".tool.pytest.ini_options]
addopts = [
  "-rsxX",
  "--color=auto",
  "--cov-config=pyproject.toml",
  "--cov-report=html",
  "--strict-markers",
  "--tb=native"
]
filterwarnings = ["error"]
minversion = "7.0"
testpaths = ["src/tests"]
xfail_strict = true

#### shellcheck ###############################################################
[[".pre-commit-config.yaml".repos]]
repo = "https://github.com/shellcheck-py/shellcheck-py"

[[".pre-commit-config.yaml".repos.hooks]]
id = "shellcheck"

#### yesqa ####################################################################
[[".pre-commit-config.yaml".repos]]
repo = "https://github.com/asottile/yesqa"

[[".pre-commit-config.yaml".repos.hooks]]
id = "yesqa"
additional_dependencies = [
  "flake8-absolute-import",
  "flake8-annotations",
  "flake8-bandit",
  "flake8-bugbear",
  "flake8-comprehensions",
  "flake8-debugger",
  # "flake8-eradicate",
  "flake8-executable",
  "flake8-no-pep420",
  "flake8-pie",
  "flake8-print",
  "flake8-simplify",
  "flake8-unused-arguments",
]
