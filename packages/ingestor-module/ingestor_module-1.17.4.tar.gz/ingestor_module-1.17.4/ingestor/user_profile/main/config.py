from ingestor.common.constants import (
    ATTRIBUTE1,
    ACTOR_NAME,
    DIRECTOR_NAME,
    RATING,
    LOCAL_CONNECTION_URI,
    TAGS,
    CATEGORY,
    SUBCATEGORY,
    ACTORS,
    DIRECTORS,
    CATEGORY_ID,
    SUBCATEGORY_ID,
    DURATION,
    TOD,
    VALUE,
)

KMEANS_FEATURE = "kmeans"
MINIBATCH_KMEANS_FEATURE = "minibatch_kmeans"
WARDS_HIERARCHICAL_FEATURE = "wards_hierarchical"
KMEDOIDS_FEATURE = "kmedoids"
DBSCAN_FEATURE = "dbscan"
OPTICS_FEATURE = "optics"
BIRCH_FEATURE = "birch"
BIRCH_ENSEMBLE_FEATURE = "birch_ensemble"
S3_PAYTV_PREFIX = "paytv_"
S3_NONPAYTV_PREFIX = "nonpaytv_"
IS_PAYTV_PROPERTY_LABEL = "is_paytv"

CLUSTERING_METHODS = [
    KMEANS_FEATURE,
    MINIBATCH_KMEANS_FEATURE,
    WARDS_HIERARCHICAL_FEATURE,
    KMEDOIDS_FEATURE,
    DBSCAN_FEATURE,
    OPTICS_FEATURE,
    BIRCH_FEATURE,
    BIRCH_ENSEMBLE_FEATURE,
]

S3_BUCKET_NAME = "visionplus"
S3_OBJECT_NAME = "data/database/user_profile/"
GRAPH_DB_CONNECTION_STRING = LOCAL_CONNECTION_URI

TO_READ_FROM_S3_PREFERENCES = {
    RATING: ["HAS_RATING_PREFERENCE", RATING],
    ATTRIBUTE1: ["HAS_ATTRIBUTE1_PREFERENCE", ATTRIBUTE1],
    CATEGORY: ["HAS_CATEGORY_PREFERENCE", CATEGORY_ID],
    SUBCATEGORY: ["HAS_SUBCATEGORY_PREFERENCE", SUBCATEGORY_ID],
    ACTORS: ["HAS_ACTOR_PREFERENCE", ACTOR_NAME],
    DIRECTORS: ["HAS_DIRECTOR_PREFERENCE", DIRECTOR_NAME],
    TAGS: ["HAS_TAGS_PREFERENCE", TAGS],
    DURATION: ["HAS_DURATION_PREFERENCE", VALUE],
    TOD: ["HAS_TOD_PREFERENCE", VALUE],
}

TO_READ_FROM_S3_CLUSTERING_LABELS = {
    KMEANS_FEATURE: ["HAS_KMEANS_CLUSTER", KMEANS_FEATURE],
    MINIBATCH_KMEANS_FEATURE: ["HAS_MINIBATCH_CLUSTER", MINIBATCH_KMEANS_FEATURE],
    WARDS_HIERARCHICAL_FEATURE: ["HAS_WARDS_CLUSTER", WARDS_HIERARCHICAL_FEATURE],
    KMEDOIDS_FEATURE: ["HAS_KMEDOIDS_CLUSTER", KMEDOIDS_FEATURE],
    DBSCAN_FEATURE: ["HAS_DBSCAN_CLUSTER", DBSCAN_FEATURE],
    BIRCH_FEATURE: ["HAS_BIRCH_CLUSTER", BIRCH_FEATURE],
    BIRCH_ENSEMBLE_FEATURE: ["HAS_ENSEMBLE_CLUSTER", BIRCH_ENSEMBLE_FEATURE],
}

HAS_PAYTV_PROVIDER = "HAS_PAYTV_PROVIDER"
DURATION_BINS = [10, 20, 30, 60, 70, 90, 120]
TOD_MAPPING = {1: "night", 2: "morning", 3: "noon", 4: "evening"}
