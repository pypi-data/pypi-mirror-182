# Generated by Lapidary.
# All manual changes will be lost!

from __future__ import annotations

import typing
import lapidary.runtime
import pydantic
import lapidary.runtime.absent
import uhubspot.components.schemas.object_type


class GetAssociations(pydantic.BaseModel):
    p_fromObjectId: typing.Annotated[
        typing.Union[
            str,
            lapidary.runtime.absent.Absent,
        ],
        pydantic.Field(
            alias="fromObjectId",
            in_=lapidary.runtime.ParamPlacement.path,
        ),
    ] = lapidary.runtime.absent.ABSENT

    p_fromObjectType: typing.Annotated[
        typing.Union[
            uhubspot.components.schemas.object_type.objectType,
            lapidary.runtime.absent.Absent,
        ],
        pydantic.Field(
            alias="fromObjectType",
            in_=lapidary.runtime.ParamPlacement.path,
        ),
    ] = lapidary.runtime.absent.ABSENT

    p_toObjectType: typing.Annotated[
        typing.Union[
            uhubspot.components.schemas.object_type.objectType,
            lapidary.runtime.absent.Absent,
        ],
        pydantic.Field(
            alias="toObjectType",
            in_=lapidary.runtime.ParamPlacement.path,
        ),
    ] = lapidary.runtime.absent.ABSENT

    class Config(pydantic.BaseConfig):
        allow_population_by_field_name = True


GetAssociations.update_forward_refs()
