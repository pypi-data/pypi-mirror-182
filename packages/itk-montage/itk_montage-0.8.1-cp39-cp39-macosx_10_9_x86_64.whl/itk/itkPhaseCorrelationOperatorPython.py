# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _MontagePython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkPhaseCorrelationOperatorPython
else:
    import _itkPhaseCorrelationOperatorPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkPhaseCorrelationOperatorPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkPhaseCorrelationOperatorPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.itkImageRegionPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.itkPointPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.itkCovariantVectorPython
import itk.vnl_matrix_fixedPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkImageToImageFilterBPython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.itkImageToImageFilterCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython

def itkPhaseCorrelationOperatorD2_New():
    return itkPhaseCorrelationOperatorD2.New()

class itkPhaseCorrelationOperatorD2(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD2ICD2):
    r"""Proxy of C++ itkPhaseCorrelationOperatorD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPhaseCorrelationOperatorPython.itkPhaseCorrelationOperatorD2___New_orig__)
    Clone = _swig_new_instance_method(_itkPhaseCorrelationOperatorPython.itkPhaseCorrelationOperatorD2_Clone)
    SetFixedImage = _swig_new_instance_method(_itkPhaseCorrelationOperatorPython.itkPhaseCorrelationOperatorD2_SetFixedImage)
    SetMovingImage = _swig_new_instance_method(_itkPhaseCorrelationOperatorPython.itkPhaseCorrelationOperatorD2_SetMovingImage)
    __swig_destroy__ = _itkPhaseCorrelationOperatorPython.delete_itkPhaseCorrelationOperatorD2
    cast = _swig_new_static_method(_itkPhaseCorrelationOperatorPython.itkPhaseCorrelationOperatorD2_cast)

    def New(*args, **kargs):
        """New() -> itkPhaseCorrelationOperatorD2

        Create a new object of the class itkPhaseCorrelationOperatorD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPhaseCorrelationOperatorD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPhaseCorrelationOperatorD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPhaseCorrelationOperatorD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPhaseCorrelationOperatorD2 in _itkPhaseCorrelationOperatorPython:
_itkPhaseCorrelationOperatorPython.itkPhaseCorrelationOperatorD2_swigregister(itkPhaseCorrelationOperatorD2)
itkPhaseCorrelationOperatorD2___New_orig__ = _itkPhaseCorrelationOperatorPython.itkPhaseCorrelationOperatorD2___New_orig__
itkPhaseCorrelationOperatorD2_cast = _itkPhaseCorrelationOperatorPython.itkPhaseCorrelationOperatorD2_cast


def itkPhaseCorrelationOperatorD3_New():
    return itkPhaseCorrelationOperatorD3.New()

class itkPhaseCorrelationOperatorD3(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD3ICD3):
    r"""Proxy of C++ itkPhaseCorrelationOperatorD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPhaseCorrelationOperatorPython.itkPhaseCorrelationOperatorD3___New_orig__)
    Clone = _swig_new_instance_method(_itkPhaseCorrelationOperatorPython.itkPhaseCorrelationOperatorD3_Clone)
    SetFixedImage = _swig_new_instance_method(_itkPhaseCorrelationOperatorPython.itkPhaseCorrelationOperatorD3_SetFixedImage)
    SetMovingImage = _swig_new_instance_method(_itkPhaseCorrelationOperatorPython.itkPhaseCorrelationOperatorD3_SetMovingImage)
    __swig_destroy__ = _itkPhaseCorrelationOperatorPython.delete_itkPhaseCorrelationOperatorD3
    cast = _swig_new_static_method(_itkPhaseCorrelationOperatorPython.itkPhaseCorrelationOperatorD3_cast)

    def New(*args, **kargs):
        """New() -> itkPhaseCorrelationOperatorD3

        Create a new object of the class itkPhaseCorrelationOperatorD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPhaseCorrelationOperatorD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPhaseCorrelationOperatorD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPhaseCorrelationOperatorD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPhaseCorrelationOperatorD3 in _itkPhaseCorrelationOperatorPython:
_itkPhaseCorrelationOperatorPython.itkPhaseCorrelationOperatorD3_swigregister(itkPhaseCorrelationOperatorD3)
itkPhaseCorrelationOperatorD3___New_orig__ = _itkPhaseCorrelationOperatorPython.itkPhaseCorrelationOperatorD3___New_orig__
itkPhaseCorrelationOperatorD3_cast = _itkPhaseCorrelationOperatorPython.itkPhaseCorrelationOperatorD3_cast


def itkPhaseCorrelationOperatorD4_New():
    return itkPhaseCorrelationOperatorD4.New()

class itkPhaseCorrelationOperatorD4(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD4ICD4):
    r"""Proxy of C++ itkPhaseCorrelationOperatorD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPhaseCorrelationOperatorPython.itkPhaseCorrelationOperatorD4___New_orig__)
    Clone = _swig_new_instance_method(_itkPhaseCorrelationOperatorPython.itkPhaseCorrelationOperatorD4_Clone)
    SetFixedImage = _swig_new_instance_method(_itkPhaseCorrelationOperatorPython.itkPhaseCorrelationOperatorD4_SetFixedImage)
    SetMovingImage = _swig_new_instance_method(_itkPhaseCorrelationOperatorPython.itkPhaseCorrelationOperatorD4_SetMovingImage)
    __swig_destroy__ = _itkPhaseCorrelationOperatorPython.delete_itkPhaseCorrelationOperatorD4
    cast = _swig_new_static_method(_itkPhaseCorrelationOperatorPython.itkPhaseCorrelationOperatorD4_cast)

    def New(*args, **kargs):
        """New() -> itkPhaseCorrelationOperatorD4

        Create a new object of the class itkPhaseCorrelationOperatorD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPhaseCorrelationOperatorD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPhaseCorrelationOperatorD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPhaseCorrelationOperatorD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPhaseCorrelationOperatorD4 in _itkPhaseCorrelationOperatorPython:
_itkPhaseCorrelationOperatorPython.itkPhaseCorrelationOperatorD4_swigregister(itkPhaseCorrelationOperatorD4)
itkPhaseCorrelationOperatorD4___New_orig__ = _itkPhaseCorrelationOperatorPython.itkPhaseCorrelationOperatorD4___New_orig__
itkPhaseCorrelationOperatorD4_cast = _itkPhaseCorrelationOperatorPython.itkPhaseCorrelationOperatorD4_cast


def itkPhaseCorrelationOperatorF2_New():
    return itkPhaseCorrelationOperatorF2.New()

class itkPhaseCorrelationOperatorF2(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF2ICF2):
    r"""Proxy of C++ itkPhaseCorrelationOperatorF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPhaseCorrelationOperatorPython.itkPhaseCorrelationOperatorF2___New_orig__)
    Clone = _swig_new_instance_method(_itkPhaseCorrelationOperatorPython.itkPhaseCorrelationOperatorF2_Clone)
    SetFixedImage = _swig_new_instance_method(_itkPhaseCorrelationOperatorPython.itkPhaseCorrelationOperatorF2_SetFixedImage)
    SetMovingImage = _swig_new_instance_method(_itkPhaseCorrelationOperatorPython.itkPhaseCorrelationOperatorF2_SetMovingImage)
    __swig_destroy__ = _itkPhaseCorrelationOperatorPython.delete_itkPhaseCorrelationOperatorF2
    cast = _swig_new_static_method(_itkPhaseCorrelationOperatorPython.itkPhaseCorrelationOperatorF2_cast)

    def New(*args, **kargs):
        """New() -> itkPhaseCorrelationOperatorF2

        Create a new object of the class itkPhaseCorrelationOperatorF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPhaseCorrelationOperatorF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPhaseCorrelationOperatorF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPhaseCorrelationOperatorF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPhaseCorrelationOperatorF2 in _itkPhaseCorrelationOperatorPython:
_itkPhaseCorrelationOperatorPython.itkPhaseCorrelationOperatorF2_swigregister(itkPhaseCorrelationOperatorF2)
itkPhaseCorrelationOperatorF2___New_orig__ = _itkPhaseCorrelationOperatorPython.itkPhaseCorrelationOperatorF2___New_orig__
itkPhaseCorrelationOperatorF2_cast = _itkPhaseCorrelationOperatorPython.itkPhaseCorrelationOperatorF2_cast


def itkPhaseCorrelationOperatorF3_New():
    return itkPhaseCorrelationOperatorF3.New()

class itkPhaseCorrelationOperatorF3(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF3ICF3):
    r"""Proxy of C++ itkPhaseCorrelationOperatorF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPhaseCorrelationOperatorPython.itkPhaseCorrelationOperatorF3___New_orig__)
    Clone = _swig_new_instance_method(_itkPhaseCorrelationOperatorPython.itkPhaseCorrelationOperatorF3_Clone)
    SetFixedImage = _swig_new_instance_method(_itkPhaseCorrelationOperatorPython.itkPhaseCorrelationOperatorF3_SetFixedImage)
    SetMovingImage = _swig_new_instance_method(_itkPhaseCorrelationOperatorPython.itkPhaseCorrelationOperatorF3_SetMovingImage)
    __swig_destroy__ = _itkPhaseCorrelationOperatorPython.delete_itkPhaseCorrelationOperatorF3
    cast = _swig_new_static_method(_itkPhaseCorrelationOperatorPython.itkPhaseCorrelationOperatorF3_cast)

    def New(*args, **kargs):
        """New() -> itkPhaseCorrelationOperatorF3

        Create a new object of the class itkPhaseCorrelationOperatorF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPhaseCorrelationOperatorF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPhaseCorrelationOperatorF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPhaseCorrelationOperatorF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPhaseCorrelationOperatorF3 in _itkPhaseCorrelationOperatorPython:
_itkPhaseCorrelationOperatorPython.itkPhaseCorrelationOperatorF3_swigregister(itkPhaseCorrelationOperatorF3)
itkPhaseCorrelationOperatorF3___New_orig__ = _itkPhaseCorrelationOperatorPython.itkPhaseCorrelationOperatorF3___New_orig__
itkPhaseCorrelationOperatorF3_cast = _itkPhaseCorrelationOperatorPython.itkPhaseCorrelationOperatorF3_cast


def itkPhaseCorrelationOperatorF4_New():
    return itkPhaseCorrelationOperatorF4.New()

class itkPhaseCorrelationOperatorF4(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF4ICF4):
    r"""Proxy of C++ itkPhaseCorrelationOperatorF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPhaseCorrelationOperatorPython.itkPhaseCorrelationOperatorF4___New_orig__)
    Clone = _swig_new_instance_method(_itkPhaseCorrelationOperatorPython.itkPhaseCorrelationOperatorF4_Clone)
    SetFixedImage = _swig_new_instance_method(_itkPhaseCorrelationOperatorPython.itkPhaseCorrelationOperatorF4_SetFixedImage)
    SetMovingImage = _swig_new_instance_method(_itkPhaseCorrelationOperatorPython.itkPhaseCorrelationOperatorF4_SetMovingImage)
    __swig_destroy__ = _itkPhaseCorrelationOperatorPython.delete_itkPhaseCorrelationOperatorF4
    cast = _swig_new_static_method(_itkPhaseCorrelationOperatorPython.itkPhaseCorrelationOperatorF4_cast)

    def New(*args, **kargs):
        """New() -> itkPhaseCorrelationOperatorF4

        Create a new object of the class itkPhaseCorrelationOperatorF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPhaseCorrelationOperatorF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPhaseCorrelationOperatorF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPhaseCorrelationOperatorF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPhaseCorrelationOperatorF4 in _itkPhaseCorrelationOperatorPython:
_itkPhaseCorrelationOperatorPython.itkPhaseCorrelationOperatorF4_swigregister(itkPhaseCorrelationOperatorF4)
itkPhaseCorrelationOperatorF4___New_orig__ = _itkPhaseCorrelationOperatorPython.itkPhaseCorrelationOperatorF4___New_orig__
itkPhaseCorrelationOperatorF4_cast = _itkPhaseCorrelationOperatorPython.itkPhaseCorrelationOperatorF4_cast


from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def phase_correlation_operator(*args: itkt.ImageLike,  fixed_image: itkt.Image=..., moving_image: itkt.Image=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for PhaseCorrelationOperator"""
    import itk

    kwarg_typehints = { 'fixed_image':fixed_image,'moving_image':moving_image }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)

    instance = itk.PhaseCorrelationOperator.New(*args, **kwargs)
    return instance.__internal_call__()

def phase_correlation_operator_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.Montage.PhaseCorrelationOperator
    phase_correlation_operator.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    phase_correlation_operator.__doc__ = filter_object.__doc__




