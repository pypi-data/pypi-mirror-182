# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _MontagePython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkTileMergeImageFilterPython
else:
    import _itkTileMergeImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkTileMergeImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkTileMergeImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.itkImagePython
import itk.itkMatrixPython
import itk.itkPointPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_matrixPython
import itk.vnl_vector_refPython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.ITKCommonBasePython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkTileMontagePython
import itk.itkTranslationTransformPython
import itk.itkOptimizerParametersPython
import itk.itkArrayPython
import itk.itkArray2DPython
import itk.itkTransformBasePython
import itk.itkDiffusionTensor3DPython
import itk.itkVariableLengthVectorPython
import itk.itkPhaseCorrelationImageRegistrationMethodPython
import itk.itkPhaseCorrelationOperatorPython
import itk.itkImageToImageFilterBPython
import itk.itkVectorImagePython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkImageToImageFilterCommonPython
import itk.itkPhaseCorrelationOptimizerPython
import itk.itkContinuousIndexPython

def itkTileMergeImageFilterID2_New():
    return itkTileMergeImageFilterID2.New()

class itkTileMergeImageFilterID2(itk.itkTileMontagePython.itkTileMontageID2F):
    r"""Proxy of C++ itkTileMergeImageFilterID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterID2___New_orig__)
    Clone = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterID2_Clone)
    SetMontage = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterID2_SetMontage)
    GetOutput = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterID2_GetOutput)
    SetMontageSize = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterID2_SetMontageSize)
    SetInputTile = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterID2_SetInputTile)
    SetTileTransform = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterID2_SetTileTransform)
    SetBackground = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterID2_SetBackground)
    GetBackground = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterID2_GetBackground)
    SetCropToFill = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterID2_SetCropToFill)
    GetCropToFill = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterID2_GetCropToFill)
    CropToFillOn = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterID2_CropToFillOn)
    CropToFillOff = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterID2_CropToFillOff)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterID2
    cast = _swig_new_static_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterID2_cast)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterID2

        Create a new object of the class itkTileMergeImageFilterID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterID2 in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterID2_swigregister(itkTileMergeImageFilterID2)
itkTileMergeImageFilterID2___New_orig__ = _itkTileMergeImageFilterPython.itkTileMergeImageFilterID2___New_orig__
itkTileMergeImageFilterID2_cast = _itkTileMergeImageFilterPython.itkTileMergeImageFilterID2_cast


def itkTileMergeImageFilterID3_New():
    return itkTileMergeImageFilterID3.New()

class itkTileMergeImageFilterID3(itk.itkTileMontagePython.itkTileMontageID3F):
    r"""Proxy of C++ itkTileMergeImageFilterID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterID3___New_orig__)
    Clone = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterID3_Clone)
    SetMontage = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterID3_SetMontage)
    GetOutput = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterID3_GetOutput)
    SetMontageSize = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterID3_SetMontageSize)
    SetInputTile = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterID3_SetInputTile)
    SetTileTransform = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterID3_SetTileTransform)
    SetBackground = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterID3_SetBackground)
    GetBackground = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterID3_GetBackground)
    SetCropToFill = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterID3_SetCropToFill)
    GetCropToFill = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterID3_GetCropToFill)
    CropToFillOn = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterID3_CropToFillOn)
    CropToFillOff = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterID3_CropToFillOff)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterID3
    cast = _swig_new_static_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterID3_cast)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterID3

        Create a new object of the class itkTileMergeImageFilterID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterID3 in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterID3_swigregister(itkTileMergeImageFilterID3)
itkTileMergeImageFilterID3___New_orig__ = _itkTileMergeImageFilterPython.itkTileMergeImageFilterID3___New_orig__
itkTileMergeImageFilterID3_cast = _itkTileMergeImageFilterPython.itkTileMergeImageFilterID3_cast


def itkTileMergeImageFilterID4_New():
    return itkTileMergeImageFilterID4.New()

class itkTileMergeImageFilterID4(itk.itkTileMontagePython.itkTileMontageID4F):
    r"""Proxy of C++ itkTileMergeImageFilterID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterID4___New_orig__)
    Clone = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterID4_Clone)
    SetMontage = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterID4_SetMontage)
    GetOutput = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterID4_GetOutput)
    SetMontageSize = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterID4_SetMontageSize)
    SetInputTile = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterID4_SetInputTile)
    SetTileTransform = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterID4_SetTileTransform)
    SetBackground = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterID4_SetBackground)
    GetBackground = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterID4_GetBackground)
    SetCropToFill = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterID4_SetCropToFill)
    GetCropToFill = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterID4_GetCropToFill)
    CropToFillOn = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterID4_CropToFillOn)
    CropToFillOff = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterID4_CropToFillOff)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterID4
    cast = _swig_new_static_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterID4_cast)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterID4

        Create a new object of the class itkTileMergeImageFilterID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterID4 in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterID4_swigregister(itkTileMergeImageFilterID4)
itkTileMergeImageFilterID4___New_orig__ = _itkTileMergeImageFilterPython.itkTileMergeImageFilterID4___New_orig__
itkTileMergeImageFilterID4_cast = _itkTileMergeImageFilterPython.itkTileMergeImageFilterID4_cast


def itkTileMergeImageFilterIF2_New():
    return itkTileMergeImageFilterIF2.New()

class itkTileMergeImageFilterIF2(itk.itkTileMontagePython.itkTileMontageIF2F):
    r"""Proxy of C++ itkTileMergeImageFilterIF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIF2___New_orig__)
    Clone = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIF2_Clone)
    SetMontage = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIF2_SetMontage)
    GetOutput = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIF2_GetOutput)
    SetMontageSize = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIF2_SetMontageSize)
    SetInputTile = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIF2_SetInputTile)
    SetTileTransform = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIF2_SetTileTransform)
    SetBackground = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIF2_SetBackground)
    GetBackground = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIF2_GetBackground)
    SetCropToFill = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIF2_SetCropToFill)
    GetCropToFill = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIF2_GetCropToFill)
    CropToFillOn = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIF2_CropToFillOn)
    CropToFillOff = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIF2_CropToFillOff)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterIF2
    cast = _swig_new_static_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIF2_cast)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterIF2

        Create a new object of the class itkTileMergeImageFilterIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterIF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterIF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterIF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterIF2 in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterIF2_swigregister(itkTileMergeImageFilterIF2)
itkTileMergeImageFilterIF2___New_orig__ = _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF2___New_orig__
itkTileMergeImageFilterIF2_cast = _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF2_cast


def itkTileMergeImageFilterIF3_New():
    return itkTileMergeImageFilterIF3.New()

class itkTileMergeImageFilterIF3(itk.itkTileMontagePython.itkTileMontageIF3F):
    r"""Proxy of C++ itkTileMergeImageFilterIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIF3___New_orig__)
    Clone = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIF3_Clone)
    SetMontage = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIF3_SetMontage)
    GetOutput = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIF3_GetOutput)
    SetMontageSize = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIF3_SetMontageSize)
    SetInputTile = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIF3_SetInputTile)
    SetTileTransform = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIF3_SetTileTransform)
    SetBackground = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIF3_SetBackground)
    GetBackground = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIF3_GetBackground)
    SetCropToFill = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIF3_SetCropToFill)
    GetCropToFill = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIF3_GetCropToFill)
    CropToFillOn = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIF3_CropToFillOn)
    CropToFillOff = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIF3_CropToFillOff)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterIF3
    cast = _swig_new_static_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIF3_cast)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterIF3

        Create a new object of the class itkTileMergeImageFilterIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterIF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterIF3 in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterIF3_swigregister(itkTileMergeImageFilterIF3)
itkTileMergeImageFilterIF3___New_orig__ = _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF3___New_orig__
itkTileMergeImageFilterIF3_cast = _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF3_cast


def itkTileMergeImageFilterIF4_New():
    return itkTileMergeImageFilterIF4.New()

class itkTileMergeImageFilterIF4(itk.itkTileMontagePython.itkTileMontageIF4F):
    r"""Proxy of C++ itkTileMergeImageFilterIF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIF4___New_orig__)
    Clone = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIF4_Clone)
    SetMontage = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIF4_SetMontage)
    GetOutput = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIF4_GetOutput)
    SetMontageSize = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIF4_SetMontageSize)
    SetInputTile = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIF4_SetInputTile)
    SetTileTransform = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIF4_SetTileTransform)
    SetBackground = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIF4_SetBackground)
    GetBackground = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIF4_GetBackground)
    SetCropToFill = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIF4_SetCropToFill)
    GetCropToFill = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIF4_GetCropToFill)
    CropToFillOn = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIF4_CropToFillOn)
    CropToFillOff = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIF4_CropToFillOff)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterIF4
    cast = _swig_new_static_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIF4_cast)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterIF4

        Create a new object of the class itkTileMergeImageFilterIF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterIF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterIF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterIF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterIF4 in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterIF4_swigregister(itkTileMergeImageFilterIF4)
itkTileMergeImageFilterIF4___New_orig__ = _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF4___New_orig__
itkTileMergeImageFilterIF4_cast = _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF4_cast


def itkTileMergeImageFilterIRGBAUC2_New():
    return itkTileMergeImageFilterIRGBAUC2.New()

class itkTileMergeImageFilterIRGBAUC2(itk.itkTileMontagePython.itkTileMontageIUC2F):
    r"""Proxy of C++ itkTileMergeImageFilterIRGBAUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC2_Clone)
    SetMontage = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC2_SetMontage)
    GetOutput = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC2_GetOutput)
    SetMontageSize = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC2_SetMontageSize)
    SetInputTile = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC2_SetInputTile)
    SetTileTransform = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC2_SetTileTransform)
    SetBackground = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC2_SetBackground)
    GetBackground = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC2_GetBackground)
    SetCropToFill = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC2_SetCropToFill)
    GetCropToFill = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC2_GetCropToFill)
    CropToFillOn = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC2_CropToFillOn)
    CropToFillOff = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC2_CropToFillOff)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterIRGBAUC2
    cast = _swig_new_static_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC2_cast)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterIRGBAUC2

        Create a new object of the class itkTileMergeImageFilterIRGBAUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterIRGBAUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterIRGBAUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterIRGBAUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterIRGBAUC2 in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC2_swigregister(itkTileMergeImageFilterIRGBAUC2)
itkTileMergeImageFilterIRGBAUC2___New_orig__ = _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC2___New_orig__
itkTileMergeImageFilterIRGBAUC2_cast = _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC2_cast


def itkTileMergeImageFilterIRGBAUC3_New():
    return itkTileMergeImageFilterIRGBAUC3.New()

class itkTileMergeImageFilterIRGBAUC3(itk.itkTileMontagePython.itkTileMontageIUC3F):
    r"""Proxy of C++ itkTileMergeImageFilterIRGBAUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC3_Clone)
    SetMontage = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC3_SetMontage)
    GetOutput = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC3_GetOutput)
    SetMontageSize = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC3_SetMontageSize)
    SetInputTile = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC3_SetInputTile)
    SetTileTransform = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC3_SetTileTransform)
    SetBackground = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC3_SetBackground)
    GetBackground = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC3_GetBackground)
    SetCropToFill = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC3_SetCropToFill)
    GetCropToFill = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC3_GetCropToFill)
    CropToFillOn = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC3_CropToFillOn)
    CropToFillOff = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC3_CropToFillOff)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterIRGBAUC3
    cast = _swig_new_static_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC3_cast)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterIRGBAUC3

        Create a new object of the class itkTileMergeImageFilterIRGBAUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterIRGBAUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterIRGBAUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterIRGBAUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterIRGBAUC3 in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC3_swigregister(itkTileMergeImageFilterIRGBAUC3)
itkTileMergeImageFilterIRGBAUC3___New_orig__ = _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC3___New_orig__
itkTileMergeImageFilterIRGBAUC3_cast = _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC3_cast


def itkTileMergeImageFilterIRGBAUC4_New():
    return itkTileMergeImageFilterIRGBAUC4.New()

class itkTileMergeImageFilterIRGBAUC4(itk.itkTileMontagePython.itkTileMontageIUC4F):
    r"""Proxy of C++ itkTileMergeImageFilterIRGBAUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC4___New_orig__)
    Clone = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC4_Clone)
    SetMontage = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC4_SetMontage)
    GetOutput = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC4_GetOutput)
    SetMontageSize = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC4_SetMontageSize)
    SetInputTile = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC4_SetInputTile)
    SetTileTransform = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC4_SetTileTransform)
    SetBackground = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC4_SetBackground)
    GetBackground = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC4_GetBackground)
    SetCropToFill = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC4_SetCropToFill)
    GetCropToFill = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC4_GetCropToFill)
    CropToFillOn = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC4_CropToFillOn)
    CropToFillOff = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC4_CropToFillOff)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterIRGBAUC4
    cast = _swig_new_static_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC4_cast)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterIRGBAUC4

        Create a new object of the class itkTileMergeImageFilterIRGBAUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterIRGBAUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterIRGBAUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterIRGBAUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterIRGBAUC4 in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC4_swigregister(itkTileMergeImageFilterIRGBAUC4)
itkTileMergeImageFilterIRGBAUC4___New_orig__ = _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC4___New_orig__
itkTileMergeImageFilterIRGBAUC4_cast = _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC4_cast


def itkTileMergeImageFilterIRGBUC2_New():
    return itkTileMergeImageFilterIRGBUC2.New()

class itkTileMergeImageFilterIRGBUC2(itk.itkTileMontagePython.itkTileMontageIUC2F):
    r"""Proxy of C++ itkTileMergeImageFilterIRGBUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC2_Clone)
    SetMontage = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC2_SetMontage)
    GetOutput = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC2_GetOutput)
    SetMontageSize = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC2_SetMontageSize)
    SetInputTile = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC2_SetInputTile)
    SetTileTransform = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC2_SetTileTransform)
    SetBackground = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC2_SetBackground)
    GetBackground = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC2_GetBackground)
    SetCropToFill = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC2_SetCropToFill)
    GetCropToFill = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC2_GetCropToFill)
    CropToFillOn = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC2_CropToFillOn)
    CropToFillOff = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC2_CropToFillOff)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterIRGBUC2
    cast = _swig_new_static_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC2_cast)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterIRGBUC2

        Create a new object of the class itkTileMergeImageFilterIRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterIRGBUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterIRGBUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterIRGBUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterIRGBUC2 in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC2_swigregister(itkTileMergeImageFilterIRGBUC2)
itkTileMergeImageFilterIRGBUC2___New_orig__ = _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC2___New_orig__
itkTileMergeImageFilterIRGBUC2_cast = _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC2_cast


def itkTileMergeImageFilterIRGBUC3_New():
    return itkTileMergeImageFilterIRGBUC3.New()

class itkTileMergeImageFilterIRGBUC3(itk.itkTileMontagePython.itkTileMontageIUC3F):
    r"""Proxy of C++ itkTileMergeImageFilterIRGBUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC3_Clone)
    SetMontage = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC3_SetMontage)
    GetOutput = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC3_GetOutput)
    SetMontageSize = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC3_SetMontageSize)
    SetInputTile = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC3_SetInputTile)
    SetTileTransform = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC3_SetTileTransform)
    SetBackground = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC3_SetBackground)
    GetBackground = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC3_GetBackground)
    SetCropToFill = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC3_SetCropToFill)
    GetCropToFill = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC3_GetCropToFill)
    CropToFillOn = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC3_CropToFillOn)
    CropToFillOff = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC3_CropToFillOff)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterIRGBUC3
    cast = _swig_new_static_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC3_cast)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterIRGBUC3

        Create a new object of the class itkTileMergeImageFilterIRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterIRGBUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterIRGBUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterIRGBUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterIRGBUC3 in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC3_swigregister(itkTileMergeImageFilterIRGBUC3)
itkTileMergeImageFilterIRGBUC3___New_orig__ = _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC3___New_orig__
itkTileMergeImageFilterIRGBUC3_cast = _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC3_cast


def itkTileMergeImageFilterIRGBUC4_New():
    return itkTileMergeImageFilterIRGBUC4.New()

class itkTileMergeImageFilterIRGBUC4(itk.itkTileMontagePython.itkTileMontageIUC4F):
    r"""Proxy of C++ itkTileMergeImageFilterIRGBUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC4___New_orig__)
    Clone = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC4_Clone)
    SetMontage = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC4_SetMontage)
    GetOutput = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC4_GetOutput)
    SetMontageSize = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC4_SetMontageSize)
    SetInputTile = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC4_SetInputTile)
    SetTileTransform = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC4_SetTileTransform)
    SetBackground = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC4_SetBackground)
    GetBackground = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC4_GetBackground)
    SetCropToFill = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC4_SetCropToFill)
    GetCropToFill = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC4_GetCropToFill)
    CropToFillOn = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC4_CropToFillOn)
    CropToFillOff = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC4_CropToFillOff)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterIRGBUC4
    cast = _swig_new_static_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC4_cast)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterIRGBUC4

        Create a new object of the class itkTileMergeImageFilterIRGBUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterIRGBUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterIRGBUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterIRGBUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterIRGBUC4 in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC4_swigregister(itkTileMergeImageFilterIRGBUC4)
itkTileMergeImageFilterIRGBUC4___New_orig__ = _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC4___New_orig__
itkTileMergeImageFilterIRGBUC4_cast = _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC4_cast


def itkTileMergeImageFilterISS2_New():
    return itkTileMergeImageFilterISS2.New()

class itkTileMergeImageFilterISS2(itk.itkTileMontagePython.itkTileMontageISS2F):
    r"""Proxy of C++ itkTileMergeImageFilterISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterISS2_Clone)
    SetMontage = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterISS2_SetMontage)
    GetOutput = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterISS2_GetOutput)
    SetMontageSize = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterISS2_SetMontageSize)
    SetInputTile = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterISS2_SetInputTile)
    SetTileTransform = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterISS2_SetTileTransform)
    SetBackground = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterISS2_SetBackground)
    GetBackground = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterISS2_GetBackground)
    SetCropToFill = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterISS2_SetCropToFill)
    GetCropToFill = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterISS2_GetCropToFill)
    CropToFillOn = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterISS2_CropToFillOn)
    CropToFillOff = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterISS2_CropToFillOff)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterISS2
    cast = _swig_new_static_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterISS2_cast)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterISS2

        Create a new object of the class itkTileMergeImageFilterISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterISS2 in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterISS2_swigregister(itkTileMergeImageFilterISS2)
itkTileMergeImageFilterISS2___New_orig__ = _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS2___New_orig__
itkTileMergeImageFilterISS2_cast = _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS2_cast


def itkTileMergeImageFilterISS3_New():
    return itkTileMergeImageFilterISS3.New()

class itkTileMergeImageFilterISS3(itk.itkTileMontagePython.itkTileMontageISS3F):
    r"""Proxy of C++ itkTileMergeImageFilterISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterISS3_Clone)
    SetMontage = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterISS3_SetMontage)
    GetOutput = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterISS3_GetOutput)
    SetMontageSize = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterISS3_SetMontageSize)
    SetInputTile = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterISS3_SetInputTile)
    SetTileTransform = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterISS3_SetTileTransform)
    SetBackground = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterISS3_SetBackground)
    GetBackground = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterISS3_GetBackground)
    SetCropToFill = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterISS3_SetCropToFill)
    GetCropToFill = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterISS3_GetCropToFill)
    CropToFillOn = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterISS3_CropToFillOn)
    CropToFillOff = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterISS3_CropToFillOff)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterISS3
    cast = _swig_new_static_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterISS3_cast)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterISS3

        Create a new object of the class itkTileMergeImageFilterISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterISS3 in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterISS3_swigregister(itkTileMergeImageFilterISS3)
itkTileMergeImageFilterISS3___New_orig__ = _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS3___New_orig__
itkTileMergeImageFilterISS3_cast = _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS3_cast


def itkTileMergeImageFilterISS4_New():
    return itkTileMergeImageFilterISS4.New()

class itkTileMergeImageFilterISS4(itk.itkTileMontagePython.itkTileMontageISS4F):
    r"""Proxy of C++ itkTileMergeImageFilterISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterISS4___New_orig__)
    Clone = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterISS4_Clone)
    SetMontage = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterISS4_SetMontage)
    GetOutput = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterISS4_GetOutput)
    SetMontageSize = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterISS4_SetMontageSize)
    SetInputTile = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterISS4_SetInputTile)
    SetTileTransform = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterISS4_SetTileTransform)
    SetBackground = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterISS4_SetBackground)
    GetBackground = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterISS4_GetBackground)
    SetCropToFill = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterISS4_SetCropToFill)
    GetCropToFill = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterISS4_GetCropToFill)
    CropToFillOn = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterISS4_CropToFillOn)
    CropToFillOff = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterISS4_CropToFillOff)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterISS4
    cast = _swig_new_static_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterISS4_cast)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterISS4

        Create a new object of the class itkTileMergeImageFilterISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterISS4 in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterISS4_swigregister(itkTileMergeImageFilterISS4)
itkTileMergeImageFilterISS4___New_orig__ = _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS4___New_orig__
itkTileMergeImageFilterISS4_cast = _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS4_cast


def itkTileMergeImageFilterIUC2_New():
    return itkTileMergeImageFilterIUC2.New()

class itkTileMergeImageFilterIUC2(itk.itkTileMontagePython.itkTileMontageIUC2F):
    r"""Proxy of C++ itkTileMergeImageFilterIUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC2_Clone)
    SetMontage = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC2_SetMontage)
    GetOutput = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC2_GetOutput)
    SetMontageSize = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC2_SetMontageSize)
    SetInputTile = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC2_SetInputTile)
    SetTileTransform = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC2_SetTileTransform)
    SetBackground = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC2_SetBackground)
    GetBackground = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC2_GetBackground)
    SetCropToFill = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC2_SetCropToFill)
    GetCropToFill = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC2_GetCropToFill)
    CropToFillOn = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC2_CropToFillOn)
    CropToFillOff = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC2_CropToFillOff)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterIUC2
    cast = _swig_new_static_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC2_cast)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterIUC2

        Create a new object of the class itkTileMergeImageFilterIUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterIUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterIUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterIUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterIUC2 in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC2_swigregister(itkTileMergeImageFilterIUC2)
itkTileMergeImageFilterIUC2___New_orig__ = _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC2___New_orig__
itkTileMergeImageFilterIUC2_cast = _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC2_cast


def itkTileMergeImageFilterIUC3_New():
    return itkTileMergeImageFilterIUC3.New()

class itkTileMergeImageFilterIUC3(itk.itkTileMontagePython.itkTileMontageIUC3F):
    r"""Proxy of C++ itkTileMergeImageFilterIUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC3_Clone)
    SetMontage = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC3_SetMontage)
    GetOutput = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC3_GetOutput)
    SetMontageSize = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC3_SetMontageSize)
    SetInputTile = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC3_SetInputTile)
    SetTileTransform = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC3_SetTileTransform)
    SetBackground = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC3_SetBackground)
    GetBackground = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC3_GetBackground)
    SetCropToFill = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC3_SetCropToFill)
    GetCropToFill = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC3_GetCropToFill)
    CropToFillOn = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC3_CropToFillOn)
    CropToFillOff = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC3_CropToFillOff)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterIUC3
    cast = _swig_new_static_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC3_cast)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterIUC3

        Create a new object of the class itkTileMergeImageFilterIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterIUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterIUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterIUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterIUC3 in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC3_swigregister(itkTileMergeImageFilterIUC3)
itkTileMergeImageFilterIUC3___New_orig__ = _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC3___New_orig__
itkTileMergeImageFilterIUC3_cast = _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC3_cast


def itkTileMergeImageFilterIUC4_New():
    return itkTileMergeImageFilterIUC4.New()

class itkTileMergeImageFilterIUC4(itk.itkTileMontagePython.itkTileMontageIUC4F):
    r"""Proxy of C++ itkTileMergeImageFilterIUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC4___New_orig__)
    Clone = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC4_Clone)
    SetMontage = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC4_SetMontage)
    GetOutput = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC4_GetOutput)
    SetMontageSize = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC4_SetMontageSize)
    SetInputTile = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC4_SetInputTile)
    SetTileTransform = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC4_SetTileTransform)
    SetBackground = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC4_SetBackground)
    GetBackground = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC4_GetBackground)
    SetCropToFill = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC4_SetCropToFill)
    GetCropToFill = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC4_GetCropToFill)
    CropToFillOn = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC4_CropToFillOn)
    CropToFillOff = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC4_CropToFillOff)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterIUC4
    cast = _swig_new_static_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC4_cast)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterIUC4

        Create a new object of the class itkTileMergeImageFilterIUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterIUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterIUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterIUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterIUC4 in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC4_swigregister(itkTileMergeImageFilterIUC4)
itkTileMergeImageFilterIUC4___New_orig__ = _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC4___New_orig__
itkTileMergeImageFilterIUC4_cast = _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC4_cast


def itkTileMergeImageFilterIUS2_New():
    return itkTileMergeImageFilterIUS2.New()

class itkTileMergeImageFilterIUS2(itk.itkTileMontagePython.itkTileMontageIUS2F):
    r"""Proxy of C++ itkTileMergeImageFilterIUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS2_Clone)
    SetMontage = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS2_SetMontage)
    GetOutput = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS2_GetOutput)
    SetMontageSize = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS2_SetMontageSize)
    SetInputTile = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS2_SetInputTile)
    SetTileTransform = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS2_SetTileTransform)
    SetBackground = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS2_SetBackground)
    GetBackground = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS2_GetBackground)
    SetCropToFill = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS2_SetCropToFill)
    GetCropToFill = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS2_GetCropToFill)
    CropToFillOn = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS2_CropToFillOn)
    CropToFillOff = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS2_CropToFillOff)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterIUS2
    cast = _swig_new_static_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS2_cast)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterIUS2

        Create a new object of the class itkTileMergeImageFilterIUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterIUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterIUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterIUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterIUS2 in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS2_swigregister(itkTileMergeImageFilterIUS2)
itkTileMergeImageFilterIUS2___New_orig__ = _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS2___New_orig__
itkTileMergeImageFilterIUS2_cast = _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS2_cast


def itkTileMergeImageFilterIUS3_New():
    return itkTileMergeImageFilterIUS3.New()

class itkTileMergeImageFilterIUS3(itk.itkTileMontagePython.itkTileMontageIUS3F):
    r"""Proxy of C++ itkTileMergeImageFilterIUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS3_Clone)
    SetMontage = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS3_SetMontage)
    GetOutput = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS3_GetOutput)
    SetMontageSize = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS3_SetMontageSize)
    SetInputTile = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS3_SetInputTile)
    SetTileTransform = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS3_SetTileTransform)
    SetBackground = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS3_SetBackground)
    GetBackground = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS3_GetBackground)
    SetCropToFill = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS3_SetCropToFill)
    GetCropToFill = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS3_GetCropToFill)
    CropToFillOn = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS3_CropToFillOn)
    CropToFillOff = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS3_CropToFillOff)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterIUS3
    cast = _swig_new_static_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS3_cast)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterIUS3

        Create a new object of the class itkTileMergeImageFilterIUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterIUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterIUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterIUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterIUS3 in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS3_swigregister(itkTileMergeImageFilterIUS3)
itkTileMergeImageFilterIUS3___New_orig__ = _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS3___New_orig__
itkTileMergeImageFilterIUS3_cast = _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS3_cast


def itkTileMergeImageFilterIUS4_New():
    return itkTileMergeImageFilterIUS4.New()

class itkTileMergeImageFilterIUS4(itk.itkTileMontagePython.itkTileMontageIUS4F):
    r"""Proxy of C++ itkTileMergeImageFilterIUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS4___New_orig__)
    Clone = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS4_Clone)
    SetMontage = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS4_SetMontage)
    GetOutput = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS4_GetOutput)
    SetMontageSize = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS4_SetMontageSize)
    SetInputTile = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS4_SetInputTile)
    SetTileTransform = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS4_SetTileTransform)
    SetBackground = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS4_SetBackground)
    GetBackground = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS4_GetBackground)
    SetCropToFill = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS4_SetCropToFill)
    GetCropToFill = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS4_GetCropToFill)
    CropToFillOn = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS4_CropToFillOn)
    CropToFillOff = _swig_new_instance_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS4_CropToFillOff)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterIUS4
    cast = _swig_new_static_method(_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS4_cast)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterIUS4

        Create a new object of the class itkTileMergeImageFilterIUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterIUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterIUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterIUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterIUS4 in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS4_swigregister(itkTileMergeImageFilterIUS4)
itkTileMergeImageFilterIUS4___New_orig__ = _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS4___New_orig__
itkTileMergeImageFilterIUS4_cast = _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS4_cast


from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def tile_merge_image_filter(*args,  montage=..., release_data_flag: bool=..., release_data_before_update_flag: bool=..., montage_size: Union[Sequence[int], Sequence[int]]=..., input_tile: Union[Sequence[int], int, Sequence[int]]=..., tile_transform: Sequence[int]=..., background: float=..., crop_to_fill: bool=..., origin_adjustment: Sequence[float]=..., forced_spacing: Sequence[float]=..., absolute_threshold: float=..., relative_threshold: float=..., position_tolerance: int=..., crop_to_overlap: bool=..., obligatory_padding: Sequence[int]=..., padding_method=..., peak_interpolation_method=...,**kwargs):
    """Functional interface for TileMergeImageFilter"""
    import itk

    kwarg_typehints = { 'montage':montage,'release_data_flag':release_data_flag,'release_data_before_update_flag':release_data_before_update_flag,'montage_size':montage_size,'input_tile':input_tile,'tile_transform':tile_transform,'background':background,'crop_to_fill':crop_to_fill,'origin_adjustment':origin_adjustment,'forced_spacing':forced_spacing,'absolute_threshold':absolute_threshold,'relative_threshold':relative_threshold,'position_tolerance':position_tolerance,'crop_to_overlap':crop_to_overlap,'obligatory_padding':obligatory_padding,'padding_method':padding_method,'peak_interpolation_method':peak_interpolation_method }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)

    instance = itk.TileMergeImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def tile_merge_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.Montage.TileMergeImageFilter
    tile_merge_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    tile_merge_image_filter.__doc__ = filter_object.__doc__




