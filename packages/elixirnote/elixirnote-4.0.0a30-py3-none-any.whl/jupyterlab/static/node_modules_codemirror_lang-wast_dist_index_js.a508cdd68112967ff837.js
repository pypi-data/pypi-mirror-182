"use strict";
(self["webpackChunk_jupyterlab_application_top"] = self["webpackChunk_jupyterlab_application_top"] || []).push([["node_modules_codemirror_lang-wast_dist_index_js"],{

/***/ "../../node_modules/@codemirror/lang-wast/dist/index.js":
/*!**************************************************************!*\
  !*** ../../node_modules/@codemirror/lang-wast/dist/index.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "wast": () => (/* binding */ wast),
/* harmony export */   "wastLanguage": () => (/* binding */ wastLanguage)
/* harmony export */ });
/* harmony import */ var _codemirror_language__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @codemirror/language */ "../../node_modules/@codemirror/language/dist/index.js");
/* harmony import */ var _lezer_highlight__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @lezer/highlight */ "../../node_modules/@lezer/highlight/dist/index.js");
/* harmony import */ var _lezer_lr__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @lezer/lr */ "../../node_modules/@lezer/lr/dist/index.js");




// This file was generated by lezer-generator. You probably shouldn't edit it.
const spec_Keyword = {__proto__:null,anyref:34, dataref:34, eqref:34, externref:34, i31ref:34, funcref:34, i8:34, i16:34, i32:34, i64:34, f32:34, f64:34};
const parser = /*@__PURE__*/_lezer_lr__WEBPACK_IMPORTED_MODULE_1__.LRParser.deserialize({
  version: 14,
  states: "!^Q]QPOOOqQPO'#CbOOQO'#Cd'#CdOOQO'#Cl'#ClOOQO'#Ch'#ChQ]QPOOOOQO,58|,58|OxQPO,58|OOQO-E6f-E6fOOQO1G.h1G.h",
  stateData: "!P~O_OSPOSQOS~OTPOVROXROYROZROaQO~OSUO~P]OSXO~P]O",
  goto: "xaPPPPPPbPbPPPhPPPrXROPTVQTOQVPTWTVXSOPTV",
  nodeNames: "âš  LineComment BlockComment Module ) ( App Identifier Type Keyword Number String",
  maxTerm: 17,
  nodeProps: [
    ["openedBy", 4,"("],
    ["closedBy", 5,")"],
    ["group", -6,6,7,8,9,10,11,"Expression"]
  ],
  skippedNodes: [0,1,2],
  repeatNodeCount: 1,
  tokenData: "/Q~R^XY}YZ}]^}pq}rs!Stu!qxy&Vyz'S{|'X}!O'X!Q!R'b!R![)_!]!^,{#T#o-^~!SO_~~!VTOr!Srs!fs#O!S#O#P!k#P~!S~!kOZ~~!nPO~!S~!tiqr$cst$ctu$cuv$cvw$cwx$cz{$c{|$c}!O$c!O!P$c!P!Q$c!Q![$c![!]$c!^!_$c!_!`$c!`!a$c!a!b$c!b!c$c!c!}$c#Q#R$c#R#S$c#S#T$c#T#o$c#p#q$c#r#s$c~$hiV~qr$cst$ctu$cuv$cvw$cwx$cz{$c{|$c}!O$c!O!P$c!P!Q$c!Q![$c![!]$c!^!_$c!_!`$c!`!a$c!a!b$c!b!c$c!c!}$c#Q#R$c#R#S$c#S#T$c#T#o$c#p#q$c#r#s$c~&[PT~!]!^&_~&bRO!]&_!]!^&k!^~&_~&nTOy&_yz&}z!]&_!]!^&k!^~&_~'SOQ~~'XOS~~'[Q!Q!R'b!R![)_~'gUY~!O!P'y!Q![)_!g!h(j#R#S)s#X#Y(j#l#m)y~(ORY~!Q![(X!g!h(j#X#Y(j~(^SY~!Q![(X!g!h(j#R#S)X#X#Y(j~(mR{|(v}!O(v!Q![(|~(yP!Q![(|~)RQY~!Q![(|#R#S(v~)[P!Q![(X~)dTY~!O!P'y!Q![)_!g!h(j#R#S)s#X#Y(j~)vP!Q![)_~)|R!Q![*V!c!i*V#T#Z*V~*[VY~!O!P*q!Q![*V!c!i*V!r!s+n#R#S)y#T#Z*V#d#e+n~*vTY~!Q![+V!c!i+V!r!s+n#T#Z+V#d#e+n~+[UY~!Q![+V!c!i+V!r!s+n#R#S,o#T#Z+V#d#e+n~+qT{|,Q}!O,Q!Q![,^!c!i,^#T#Z,^~,TR!Q![,^!c!i,^#T#Z,^~,cSY~!Q![,^!c!i,^#R#S,Q#T#Z,^~,rR!Q![+V!c!i+V#T#Z+V~-OP!]!^-R~-WQP~OY-RZ~-R~-ciX~qr-^st-^tu-^uv-^vw-^wx-^z{-^{|-^}!O-^!O!P-^!P!Q-^!Q![-^![!]-^!^!_-^!_!`-^!`!a-^!a!b-^!b!c-^!c!}-^#Q#R-^#R#S-^#S#T-^#T#o-^#p#q-^#r#s-^",
  tokenizers: [0],
  topRules: {"Module":[0,3]},
  specialized: [{term: 9, get: value => spec_Keyword[value] || -1}],
  tokenPrec: 0
});

const wastLanguage = /*@__PURE__*/_codemirror_language__WEBPACK_IMPORTED_MODULE_2__.LRLanguage.define({
    parser: /*@__PURE__*/parser.configure({
        props: [
            /*@__PURE__*/_codemirror_language__WEBPACK_IMPORTED_MODULE_2__.indentNodeProp.add({
                App: /*@__PURE__*/(0,_codemirror_language__WEBPACK_IMPORTED_MODULE_2__.delimitedIndent)({ closing: ")", align: false })
            }),
            /*@__PURE__*/_codemirror_language__WEBPACK_IMPORTED_MODULE_2__.foldNodeProp.add({
                App: _codemirror_language__WEBPACK_IMPORTED_MODULE_2__.foldInside,
                BlockComment(tree) { return { from: tree.from + 2, to: tree.to - 2 }; }
            }),
            /*@__PURE__*/(0,_lezer_highlight__WEBPACK_IMPORTED_MODULE_0__.styleTags)({
                Keyword: _lezer_highlight__WEBPACK_IMPORTED_MODULE_0__.tags.keyword,
                Type: _lezer_highlight__WEBPACK_IMPORTED_MODULE_0__.tags.typeName,
                Number: _lezer_highlight__WEBPACK_IMPORTED_MODULE_0__.tags.number,
                String: _lezer_highlight__WEBPACK_IMPORTED_MODULE_0__.tags.string,
                Identifier: _lezer_highlight__WEBPACK_IMPORTED_MODULE_0__.tags.variableName,
                LineComment: _lezer_highlight__WEBPACK_IMPORTED_MODULE_0__.tags.lineComment,
                BlockComment: _lezer_highlight__WEBPACK_IMPORTED_MODULE_0__.tags.blockComment,
                "( )": _lezer_highlight__WEBPACK_IMPORTED_MODULE_0__.tags.paren
            })
        ]
    }),
    languageData: {
        commentTokens: { line: ";;", block: { open: "(;", close: ";)" } },
        closeBrackets: { brackets: ["(", '"'] }
    }
});
function wast() {
    return new _codemirror_language__WEBPACK_IMPORTED_MODULE_2__.LanguageSupport(wastLanguage);
}




/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm9kZV9tb2R1bGVzX2NvZGVtaXJyb3JfbGFuZy13YXN0X2Rpc3RfaW5kZXhfanMuYTUwOGNkZDY4MTEyOTY3ZmY4MzcuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBOEg7QUFDM0U7QUFDZDs7QUFFckM7QUFDQSxzQkFBc0I7QUFDdEIsNEJBQTRCLDJEQUFvQjtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixHQUFHLEdBQUcsR0FBRyxpQkFBaUIsSUFBSSxzQkFBc0Isb0ZBQW9GLEdBQUcsSUFBSSw4REFBOEQsc0VBQXNFLEdBQUcsSUFBSSw4REFBOEQsa0ZBQWtGLGlKQUFpSixJQUFJLHVQQUF1UCxJQUFJLHdKQUF3SixHQUFHLElBQUksOERBQThEO0FBQzdpQztBQUNBLGFBQWEsZUFBZTtBQUM1QixpQkFBaUIsaURBQWlEO0FBQ2xFO0FBQ0EsQ0FBQzs7QUFFRCxrQ0FBa0MsbUVBQWlCO0FBQ25EO0FBQ0E7QUFDQSx5QkFBeUIsb0VBQWtCO0FBQzNDLGtDQUFrQyxxRUFBZSxHQUFHLDRCQUE0QjtBQUNoRixhQUFhO0FBQ2IseUJBQXlCLGtFQUFnQjtBQUN6QyxxQkFBcUIsNERBQVU7QUFDL0IscUNBQXFDLFNBQVM7QUFDOUMsYUFBYTtBQUNiLHlCQUF5QiwyREFBUztBQUNsQyx5QkFBeUIsMERBQVk7QUFDckMsc0JBQXNCLDJEQUFhO0FBQ25DLHdCQUF3Qix5REFBVztBQUNuQyx3QkFBd0IseURBQVc7QUFDbkMsNEJBQTRCLCtEQUFpQjtBQUM3Qyw2QkFBNkIsOERBQWdCO0FBQzdDLDhCQUE4QiwrREFBaUI7QUFDL0MsdUJBQXVCLHdEQUFVO0FBQ2pDLGFBQWE7QUFDYjtBQUNBLEtBQUs7QUFDTDtBQUNBLHlCQUF5QixTQUFTLFlBQVksU0FBUyxZQUFZLE1BQU07QUFDekUseUJBQXlCO0FBQ3pCO0FBQ0EsQ0FBQztBQUNEO0FBQ0EsZUFBZSxpRUFBZTtBQUM5Qjs7QUFFOEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AanVweXRlcmxhYi9hcHBsaWNhdGlvbi10b3AvLi4vLi4vbm9kZV9tb2R1bGVzL0Bjb2RlbWlycm9yL2xhbmctd2FzdC9kaXN0L2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IExSTGFuZ3VhZ2UsIGluZGVudE5vZGVQcm9wLCBkZWxpbWl0ZWRJbmRlbnQsIGZvbGROb2RlUHJvcCwgZm9sZEluc2lkZSwgTGFuZ3VhZ2VTdXBwb3J0IH0gZnJvbSAnQGNvZGVtaXJyb3IvbGFuZ3VhZ2UnO1xuaW1wb3J0IHsgc3R5bGVUYWdzLCB0YWdzIH0gZnJvbSAnQGxlemVyL2hpZ2hsaWdodCc7XG5pbXBvcnQgeyBMUlBhcnNlciB9IGZyb20gJ0BsZXplci9scic7XG5cbi8vIFRoaXMgZmlsZSB3YXMgZ2VuZXJhdGVkIGJ5IGxlemVyLWdlbmVyYXRvci4gWW91IHByb2JhYmx5IHNob3VsZG4ndCBlZGl0IGl0LlxuY29uc3Qgc3BlY19LZXl3b3JkID0ge19fcHJvdG9fXzpudWxsLGFueXJlZjozNCwgZGF0YXJlZjozNCwgZXFyZWY6MzQsIGV4dGVybnJlZjozNCwgaTMxcmVmOjM0LCBmdW5jcmVmOjM0LCBpODozNCwgaTE2OjM0LCBpMzI6MzQsIGk2NDozNCwgZjMyOjM0LCBmNjQ6MzR9O1xuY29uc3QgcGFyc2VyID0gLypAX19QVVJFX18qL0xSUGFyc2VyLmRlc2VyaWFsaXplKHtcbiAgdmVyc2lvbjogMTQsXG4gIHN0YXRlczogXCIhXlFdUVBPT09xUVBPJyNDYk9PUU8nI0NkJyNDZE9PUU8nI0NsJyNDbE9PUU8nI0NoJyNDaFFdUVBPT09PUU8sNTh8LDU4fE94UVBPLDU4fE9PUU8tRTZmLUU2Zk9PUU8xRy5oMUcuaFwiLFxuICBzdGF0ZURhdGE6IFwiIVB+T19PU1BPU1FPU35PVFBPVlJPWFJPWVJPWlJPYVFPfk9TVU9+UF1PU1hPflBdT1wiLFxuICBnb3RvOiBcInhhUFBQUFBQYlBiUFBQaFBQUHJYUk9QVFZRVE9RVlBUV1RWWFNPUFRWXCIsXG4gIG5vZGVOYW1lczogXCLimqAgTGluZUNvbW1lbnQgQmxvY2tDb21tZW50IE1vZHVsZSApICggQXBwIElkZW50aWZpZXIgVHlwZSBLZXl3b3JkIE51bWJlciBTdHJpbmdcIixcbiAgbWF4VGVybTogMTcsXG4gIG5vZGVQcm9wczogW1xuICAgIFtcIm9wZW5lZEJ5XCIsIDQsXCIoXCJdLFxuICAgIFtcImNsb3NlZEJ5XCIsIDUsXCIpXCJdLFxuICAgIFtcImdyb3VwXCIsIC02LDYsNyw4LDksMTAsMTEsXCJFeHByZXNzaW9uXCJdXG4gIF0sXG4gIHNraXBwZWROb2RlczogWzAsMSwyXSxcbiAgcmVwZWF0Tm9kZUNvdW50OiAxLFxuICB0b2tlbkRhdGE6IFwiL1F+Ul5YWX1ZWn1dXn1wcX1ycyFTdHUhcXh5JlZ5eidTe3wnWH0hTydYIVEhUidiIVIhWylfIV0hXix7I1Qjby1efiFTT19+fiFWVE9yIVNycyFmcyNPIVMjTyNQIWsjUH4hU34ha09afn4hblBPfiFTfiF0aXFyJGNzdCRjdHUkY3V2JGN2dyRjd3gkY3p7JGN7fCRjfSFPJGMhTyFQJGMhUCFRJGMhUSFbJGMhWyFdJGMhXiFfJGMhXyFgJGMhYCFhJGMhYSFiJGMhYiFjJGMhYyF9JGMjUSNSJGMjUiNTJGMjUyNUJGMjVCNvJGMjcCNxJGMjciNzJGN+JGhpVn5xciRjc3QkY3R1JGN1diRjdnckY3d4JGN6eyRje3wkY30hTyRjIU8hUCRjIVAhUSRjIVEhWyRjIVshXSRjIV4hXyRjIV8hYCRjIWAhYSRjIWEhYiRjIWIhYyRjIWMhfSRjI1EjUiRjI1IjUyRjI1MjVCRjI1QjbyRjI3AjcSRjI3IjcyRjfiZbUFR+IV0hXiZffiZiUk8hXSZfIV0hXiZrIV5+Jl9+Jm5UT3kmX3l6Jn16IV0mXyFdIV4mayFefiZffidTT1F+fidYT1N+fidbUSFRIVInYiFSIVspX34nZ1VZfiFPIVAneSFRIVspXyFnIWgoaiNSI1MpcyNYI1koaiNsI20peX4oT1JZfiFRIVsoWCFnIWgoaiNYI1koan4oXlNZfiFRIVsoWCFnIWgoaiNSI1MpWCNYI1koan4obVJ7fCh2fSFPKHYhUSFbKHx+KHlQIVEhWyh8filSUVl+IVEhWyh8I1IjUyh2filbUCFRIVsoWH4pZFRZfiFPIVAneSFRIVspXyFnIWgoaiNSI1MpcyNYI1koan4pdlAhUSFbKV9+KXxSIVEhWypWIWMhaSpWI1QjWipWfipbVll+IU8hUCpxIVEhWypWIWMhaSpWIXIhcytuI1IjUyl5I1QjWipWI2QjZStufip2VFl+IVEhWytWIWMhaStWIXIhcytuI1QjWitWI2QjZStufitbVVl+IVEhWytWIWMhaStWIXIhcytuI1IjUyxvI1QjWitWI2QjZStufitxVHt8LFF9IU8sUSFRIVssXiFjIWksXiNUI1osXn4sVFIhUSFbLF4hYyFpLF4jVCNaLF5+LGNTWX4hUSFbLF4hYyFpLF4jUiNTLFEjVCNaLF5+LHJSIVEhWytWIWMhaStWI1QjWitWfi1PUCFdIV4tUn4tV1FQfk9ZLVJafi1Sfi1jaVh+cXItXnN0LV50dS1edXYtXnZ3LV53eC1eenstXnt8LV59IU8tXiFPIVAtXiFQIVEtXiFRIVstXiFbIV0tXiFeIV8tXiFfIWAtXiFgIWEtXiFhIWItXiFiIWMtXiFjIX0tXiNRI1ItXiNSI1MtXiNTI1QtXiNUI28tXiNwI3EtXiNyI3MtXlwiLFxuICB0b2tlbml6ZXJzOiBbMF0sXG4gIHRvcFJ1bGVzOiB7XCJNb2R1bGVcIjpbMCwzXX0sXG4gIHNwZWNpYWxpemVkOiBbe3Rlcm06IDksIGdldDogdmFsdWUgPT4gc3BlY19LZXl3b3JkW3ZhbHVlXSB8fCAtMX1dLFxuICB0b2tlblByZWM6IDBcbn0pO1xuXG5jb25zdCB3YXN0TGFuZ3VhZ2UgPSAvKkBfX1BVUkVfXyovTFJMYW5ndWFnZS5kZWZpbmUoe1xuICAgIHBhcnNlcjogLypAX19QVVJFX18qL3BhcnNlci5jb25maWd1cmUoe1xuICAgICAgICBwcm9wczogW1xuICAgICAgICAgICAgLypAX19QVVJFX18qL2luZGVudE5vZGVQcm9wLmFkZCh7XG4gICAgICAgICAgICAgICAgQXBwOiAvKkBfX1BVUkVfXyovZGVsaW1pdGVkSW5kZW50KHsgY2xvc2luZzogXCIpXCIsIGFsaWduOiBmYWxzZSB9KVxuICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAvKkBfX1BVUkVfXyovZm9sZE5vZGVQcm9wLmFkZCh7XG4gICAgICAgICAgICAgICAgQXBwOiBmb2xkSW5zaWRlLFxuICAgICAgICAgICAgICAgIEJsb2NrQ29tbWVudCh0cmVlKSB7IHJldHVybiB7IGZyb206IHRyZWUuZnJvbSArIDIsIHRvOiB0cmVlLnRvIC0gMiB9OyB9XG4gICAgICAgICAgICB9KSxcbiAgICAgICAgICAgIC8qQF9fUFVSRV9fKi9zdHlsZVRhZ3Moe1xuICAgICAgICAgICAgICAgIEtleXdvcmQ6IHRhZ3Mua2V5d29yZCxcbiAgICAgICAgICAgICAgICBUeXBlOiB0YWdzLnR5cGVOYW1lLFxuICAgICAgICAgICAgICAgIE51bWJlcjogdGFncy5udW1iZXIsXG4gICAgICAgICAgICAgICAgU3RyaW5nOiB0YWdzLnN0cmluZyxcbiAgICAgICAgICAgICAgICBJZGVudGlmaWVyOiB0YWdzLnZhcmlhYmxlTmFtZSxcbiAgICAgICAgICAgICAgICBMaW5lQ29tbWVudDogdGFncy5saW5lQ29tbWVudCxcbiAgICAgICAgICAgICAgICBCbG9ja0NvbW1lbnQ6IHRhZ3MuYmxvY2tDb21tZW50LFxuICAgICAgICAgICAgICAgIFwiKCApXCI6IHRhZ3MucGFyZW5cbiAgICAgICAgICAgIH0pXG4gICAgICAgIF1cbiAgICB9KSxcbiAgICBsYW5ndWFnZURhdGE6IHtcbiAgICAgICAgY29tbWVudFRva2VuczogeyBsaW5lOiBcIjs7XCIsIGJsb2NrOiB7IG9wZW46IFwiKDtcIiwgY2xvc2U6IFwiOylcIiB9IH0sXG4gICAgICAgIGNsb3NlQnJhY2tldHM6IHsgYnJhY2tldHM6IFtcIihcIiwgJ1wiJ10gfVxuICAgIH1cbn0pO1xuZnVuY3Rpb24gd2FzdCgpIHtcbiAgICByZXR1cm4gbmV3IExhbmd1YWdlU3VwcG9ydCh3YXN0TGFuZ3VhZ2UpO1xufVxuXG5leHBvcnQgeyB3YXN0LCB3YXN0TGFuZ3VhZ2UgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==