"use strict";
(self["webpackChunk_jupyterlab_application_top"] = self["webpackChunk_jupyterlab_application_top"] || []).push([["node_modules_codemirror_legacy-modes_mode_protobuf_js"],{

/***/ "../../node_modules/@codemirror/legacy-modes/mode/protobuf.js":
/*!********************************************************************!*\
  !*** ../../node_modules/@codemirror/legacy-modes/mode/protobuf.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "protobuf": () => (/* binding */ protobuf)
/* harmony export */ });
function wordRegexp(words) {
  return new RegExp("^((" + words.join(")|(") + "))\\b", "i");
};

var keywordArray = [
  "package", "message", "import", "syntax",
  "required", "optional", "repeated", "reserved", "default", "extensions", "packed",
  "bool", "bytes", "double", "enum", "float", "string",
  "int32", "int64", "uint32", "uint64", "sint32", "sint64", "fixed32", "fixed64", "sfixed32", "sfixed64",
  "option", "service", "rpc", "returns"
];
var keywords = wordRegexp(keywordArray);

var identifiers = new RegExp("^[_A-Za-z\xa1-\uffff][_A-Za-z0-9\xa1-\uffff]*");

function tokenBase(stream) {
  // whitespaces
  if (stream.eatSpace()) return null;

  // Handle one line Comments
  if (stream.match("//")) {
    stream.skipToEnd();
    return "comment";
  }

  // Handle Number Literals
  if (stream.match(/^[0-9\.+-]/, false)) {
    if (stream.match(/^[+-]?0x[0-9a-fA-F]+/))
      return "number";
    if (stream.match(/^[+-]?\d*\.\d+([EeDd][+-]?\d+)?/))
      return "number";
    if (stream.match(/^[+-]?\d+([EeDd][+-]?\d+)?/))
      return "number";
  }

  // Handle Strings
  if (stream.match(/^"([^"]|(""))*"/)) { return "string"; }
  if (stream.match(/^'([^']|(''))*'/)) { return "string"; }

  // Handle words
  if (stream.match(keywords)) { return "keyword"; }
  if (stream.match(identifiers)) { return "variable"; } ;

  // Handle non-detected items
  stream.next();
  return null;
};

const protobuf = {
  token: tokenBase,
  languageData: {
    autocomplete: keywordArray
  }
}


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm9kZV9tb2R1bGVzX2NvZGVtaXJyb3JfbGVnYWN5LW1vZGVzX21vZGVfcHJvdG9idWZfanMuZmM0YjZhNzQyZGNlMGIyYmFmZGYuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLHlDQUF5QztBQUN6Qyx5Q0FBeUM7O0FBRXpDO0FBQ0EsZ0NBQWdDO0FBQ2hDLG1DQUFtQzs7QUFFbkM7QUFDQTtBQUNBO0FBQ0E7O0FBRU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGp1cHl0ZXJsYWIvYXBwbGljYXRpb24tdG9wLy4uLy4uL25vZGVfbW9kdWxlcy9AY29kZW1pcnJvci9sZWdhY3ktbW9kZXMvbW9kZS9wcm90b2J1Zi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiB3b3JkUmVnZXhwKHdvcmRzKSB7XG4gIHJldHVybiBuZXcgUmVnRXhwKFwiXigoXCIgKyB3b3Jkcy5qb2luKFwiKXwoXCIpICsgXCIpKVxcXFxiXCIsIFwiaVwiKTtcbn07XG5cbnZhciBrZXl3b3JkQXJyYXkgPSBbXG4gIFwicGFja2FnZVwiLCBcIm1lc3NhZ2VcIiwgXCJpbXBvcnRcIiwgXCJzeW50YXhcIixcbiAgXCJyZXF1aXJlZFwiLCBcIm9wdGlvbmFsXCIsIFwicmVwZWF0ZWRcIiwgXCJyZXNlcnZlZFwiLCBcImRlZmF1bHRcIiwgXCJleHRlbnNpb25zXCIsIFwicGFja2VkXCIsXG4gIFwiYm9vbFwiLCBcImJ5dGVzXCIsIFwiZG91YmxlXCIsIFwiZW51bVwiLCBcImZsb2F0XCIsIFwic3RyaW5nXCIsXG4gIFwiaW50MzJcIiwgXCJpbnQ2NFwiLCBcInVpbnQzMlwiLCBcInVpbnQ2NFwiLCBcInNpbnQzMlwiLCBcInNpbnQ2NFwiLCBcImZpeGVkMzJcIiwgXCJmaXhlZDY0XCIsIFwic2ZpeGVkMzJcIiwgXCJzZml4ZWQ2NFwiLFxuICBcIm9wdGlvblwiLCBcInNlcnZpY2VcIiwgXCJycGNcIiwgXCJyZXR1cm5zXCJcbl07XG52YXIga2V5d29yZHMgPSB3b3JkUmVnZXhwKGtleXdvcmRBcnJheSk7XG5cbnZhciBpZGVudGlmaWVycyA9IG5ldyBSZWdFeHAoXCJeW19BLVphLXpcXHhhMS1cXHVmZmZmXVtfQS1aYS16MC05XFx4YTEtXFx1ZmZmZl0qXCIpO1xuXG5mdW5jdGlvbiB0b2tlbkJhc2Uoc3RyZWFtKSB7XG4gIC8vIHdoaXRlc3BhY2VzXG4gIGlmIChzdHJlYW0uZWF0U3BhY2UoKSkgcmV0dXJuIG51bGw7XG5cbiAgLy8gSGFuZGxlIG9uZSBsaW5lIENvbW1lbnRzXG4gIGlmIChzdHJlYW0ubWF0Y2goXCIvL1wiKSkge1xuICAgIHN0cmVhbS5za2lwVG9FbmQoKTtcbiAgICByZXR1cm4gXCJjb21tZW50XCI7XG4gIH1cblxuICAvLyBIYW5kbGUgTnVtYmVyIExpdGVyYWxzXG4gIGlmIChzdHJlYW0ubWF0Y2goL15bMC05XFwuKy1dLywgZmFsc2UpKSB7XG4gICAgaWYgKHN0cmVhbS5tYXRjaCgvXlsrLV0/MHhbMC05YS1mQS1GXSsvKSlcbiAgICAgIHJldHVybiBcIm51bWJlclwiO1xuICAgIGlmIChzdHJlYW0ubWF0Y2goL15bKy1dP1xcZCpcXC5cXGQrKFtFZURkXVsrLV0/XFxkKyk/LykpXG4gICAgICByZXR1cm4gXCJudW1iZXJcIjtcbiAgICBpZiAoc3RyZWFtLm1hdGNoKC9eWystXT9cXGQrKFtFZURkXVsrLV0/XFxkKyk/LykpXG4gICAgICByZXR1cm4gXCJudW1iZXJcIjtcbiAgfVxuXG4gIC8vIEhhbmRsZSBTdHJpbmdzXG4gIGlmIChzdHJlYW0ubWF0Y2goL15cIihbXlwiXXwoXCJcIikpKlwiLykpIHsgcmV0dXJuIFwic3RyaW5nXCI7IH1cbiAgaWYgKHN0cmVhbS5tYXRjaCgvXicoW14nXXwoJycpKSonLykpIHsgcmV0dXJuIFwic3RyaW5nXCI7IH1cblxuICAvLyBIYW5kbGUgd29yZHNcbiAgaWYgKHN0cmVhbS5tYXRjaChrZXl3b3JkcykpIHsgcmV0dXJuIFwia2V5d29yZFwiOyB9XG4gIGlmIChzdHJlYW0ubWF0Y2goaWRlbnRpZmllcnMpKSB7IHJldHVybiBcInZhcmlhYmxlXCI7IH0gO1xuXG4gIC8vIEhhbmRsZSBub24tZGV0ZWN0ZWQgaXRlbXNcbiAgc3RyZWFtLm5leHQoKTtcbiAgcmV0dXJuIG51bGw7XG59O1xuXG5leHBvcnQgY29uc3QgcHJvdG9idWYgPSB7XG4gIHRva2VuOiB0b2tlbkJhc2UsXG4gIGxhbmd1YWdlRGF0YToge1xuICAgIGF1dG9jb21wbGV0ZToga2V5d29yZEFycmF5XG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==