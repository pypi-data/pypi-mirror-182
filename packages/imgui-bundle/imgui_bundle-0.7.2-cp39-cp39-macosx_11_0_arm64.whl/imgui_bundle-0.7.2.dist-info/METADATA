Metadata-Version: 2.1
Name: imgui-bundle
Version: 0.7.2
Summary: ImGui Bundle: easily create ImGui applications in Python and C++. Batteries included!
Home-page: https://github.com/pthom/imgui_bundle
Author: Pascal Thomet
Author-email: pthomet@gmail.com
Requires-Python: >=3.6
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: numpy (>=1.15)
Requires-Dist: munch (>=2.0.0)
Requires-Dist: glfw (>2.5)
Requires-Dist: PyOpenGL (>=3.0)
Requires-Dist: PyGLM (>=2.5.0)
Provides-Extra: test
Requires-Dist: pytest ; extra == 'test'

![CppLib](https://github.com/pthom/imgui_bundle/workflows/CppLib/badge.svg)
![Pip](https://github.com/pthom/imgui_bundle/workflows/Pip/badge.svg)
![Wheels](https://github.com/pthom/imgui_bundle/workflows/Wheels/badge.svg)


# ImGui Bundle
[ImGui Bundle](https://github.com/pthom/imgui_bundle) is a bundle for [Dear ImGui](https://github.com/ocornut/imgui.git), including various powerful libraries from its ecosystem.

It is aimed at application developers, researchers, and beginners who want to quickly get started. 

It enables to easily create ImGui applications in C++ and Python, under Windows, macOS, and Linux.

#### Test it in 1 minute with python

`````bash
pip install imgui-bundle
pip install opencv-python
imgui_bundle_demo
`````

<img src="https://traineq.org/imgui_bundle_doc/demo_bundle8.gif">

#### Transparent port between C++ and Python
The python bindings were autogenerated from the original C++ code, so that they are easier to keep up to date, and the python API closely matches the C++ api, making it possible to easily port code between Python and C++.

<table>
<tr>
    <td> <img src="https://traineq.org/imgui_bundle_doc/heart.gif"> </td>
    <td>  
      <b>Python</b><br>
      <img src="https://traineq.org/imgui_bundle_doc/heart_code2.png" width="350"><br>
      <b>C++</b><br>
      <img src="https://traineq.org/imgui_bundle_doc/heart_code_cpp2.png" width="350"><br>
    </td> 
</tr>
</table>


# Batteries included
ImGui Bundle includes:
* [imgui](https://github.com/ocornut/imgui.git) : Dear ImGui: Bloat-free Graphical User interface for C++ with minimal dependencies 
* [implot](https://github.com/epezent/implot): Immediate Mode Plotting
* [Hello ImGui](https://github.com/pthom/hello_imgui.git): cross-platform Gui apps with the simplicity of a "Hello World" app 
* [ImGuizmo](https://github.com/CedricGuillemet/ImGuizmo.git): Immediate mode 3D gizmo for scene editing and other controls based on Dear Imgui 
* [ImGuiColorTextEdit](https://github.com/BalazsJako/ImGuiColorTextEdit): Colorizing text editor for ImGui
* [imgui-node-editor](https://github.com/thedmd/imgui-node-editor): Node Editor built using Dear ImGui 
* [imgui-knobs](https://github.com/altschuler/imgui-knobs): Knobs widgets for ImGui
* [ImFileDialog](https://github.com/pthom/ImFileDialog.git): A file dialog library for Dear ImGui  
* [portable-file-dialogs](https://github.com/samhocevar/portable-file-dialogs)  Portable GUI dialogs library (C++11, single-header)
* [imgui_md](https://github.com/mekhontsev/imgui_md.git): Markdown renderer for Dear ImGui using MD4C parser
* [imspinner](https://github.com/dalerank/imspinner): Set of nice spinners for imgui 
* [imgui_toggle](https://github.com/cmdwtf/imgui_toggle): A toggle switch widget for Dear ImGui. [Homepage](https://cmd.wtf/projects#imgui-toggle)
* [ImmVision](https://github.com/pthom/immvision.git): immediate image debugger and insights 
* [imgui_tex_inspect](https://github.com/andyborrell/imgui_tex_inspect): A texture inspector tool for Dear ImGui 

## Philosophy
* Closely mirrors the original API of ImGui and other libraries
* Original code documentation is meticulously kept inside the python stubs. See for example the documentation for:
    * [imgui](https://github.com/pthom/imgui_bundle/blob/main/bindings/imgui_bundle/imgui/__init__.pyi)
    * [implot](https://github.com/pthom/imgui_bundle/blob/main/bindings/imgui_bundle/implot.pyi)
    * [hello imgui](https://github.com/pthom/imgui_bundle/blob/main/bindings/imgui_bundle/hello_imgui.pyi)
* Fully typed bindings, so that code completion works like a charm


# Usage with Python

## Installation and demo

### Install from pypi

````bash
pip install imgui-bundle
# in order to run the immvision module, install opencv-python or opencv-contrib-python
pip install opencv-contrib-python
````

### or install from source:
````
git clone https://github.com/pthom/imgui_bundle.git
cd imgui_bundle 
git submodule update --init --recursive
pip install -v .
pip install opencv-contrib-python
````

### Demo

````bash
# imgui_bundle_demo will run the full demo shown on this page. 
# It also acts as a manual for ImGui Bundle with lots of examples and related code source.
imgui_bundle_demo 
````

The source for the demos can be found inside [bindings/imgui_bundle/demos_python](bindings/imgui_bundle/demos_python).

# Usage with C++: get started in 5 minutes

Read the instructions inside [_example_integration](_example_integration).


# Quick application development features

You can develop standard ImGui application the standard way with ImGui Bundle. 

However, it also comes with HelloImGui, which provides:

* DPI aware application (window size, font loading and scaling, etc)
* Power Save mode: reduce FPS when application is idle
* [Theme tweaking](https://www.youtube.com/watch?v=Hhartw0cUjg)
* Window geometry utilities (autosize, restore window position)
* Assets embedding on all platforms
* Auto initialization of third parties modules (implot, imgui-node-editor, markdown, etc)
* Easy integration in a C++ project (see [_example_integration](_example_integration))


# ImGui Backend

ImGui Bundle uses [Hello ImGui](https://github.com/pthom/hello_imgui), which is configured to use GLFW + OpenGL3.
As an alternative, [SDL support can be enabled](https://github.com/pthom/imgui_bundle/blob/main/CMakeLists.txt#L46).

You can also use any backend, by providing your own integration code (see ImGui examples).
