# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dividend_protection.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import date_pb2 as date__pb2
import enums_pb2 as enums__pb2
import output_pb2 as output__pb2
from google.protobuf import wrappers_pb2 as google_dot_protobuf_dot_wrappers__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x19\x64ividend_protection.proto\x12\x06\x62\x61nchi\x1a\ndate.proto\x1a\x0b\x65nums.proto\x1a\x0coutput.proto\x1a\x1egoogle/protobuf/wrappers.proto\"\xf3\x03\n\x1b\x44ividendProtectionThreshold\x12\x1e\n\x08\x65nd_date\x18\x01 \x01(\x0b\x32\x0c.banchi.Date\x12\x36\n\x04type\x18\x02 \x01(\x0e\x32(.banchi.DividendProtectionThreshold.Type\x12\x11\n\tthreshold\x18\x03 \x01(\x01\x12-\n\x07trigger\x18\x04 \x01(\x0b\x32\x1c.google.protobuf.DoubleValue\x12M\n\x10period_frequency\x18\x05 \x01(\x0e\x32\x33.banchi.DividendProtectionThreshold.PeriodFrequency\"\xcd\x01\n\x0fPeriodFrequency\x12\x15\n\x11\x46INANCIAL_QUARTER\x10\x00\x12\x12\n\x0e\x46INANCIAL_YEAR\x10\x01\x12\x14\n\x10\x43\x41LENDAR_QUARTER\x10\x02\x12\x11\n\rCALENDAR_YEAR\x10\x03\x12\x13\n\x0f\x41NNUAL_FROM_END\x10\x06\x12\x17\n\x13SEMIANNUAL_FROM_END\x10\x07\x12\x16\n\x12QUARTERLY_FROM_END\x10\x08\x12\x14\n\x10MONTHLY_FROM_END\x10\t\x12\n\n\x06SINGLE\x10\x0c\"\x1b\n\x04Type\x12\x08\n\x04\x43\x41SH\x10\x00\x12\t\n\x05YIELD\x10\x01\"\x81\x08\n\x12\x44ividendProtection\x12-\n\x04type\x18\x01 \x01(\x0e\x32\x1f.banchi.DividendProtection.Type\x12\x1e\n\x08\x65nd_date\x18\x03 \x01(\x0b\x32\x0c.banchi.Date\x12L\n\x14protection_frequency\x18\x04 \x01(\x0e\x32..banchi.DividendProtection.ProtectionFrequency\x12\x30\n\x1aprotection_generating_date\x18\x05 \x01(\x0b\x32\x0c.banchi.Date\x12\x46\n\x11\x61\x64justment_factor\x18\x06 \x01(\x0e\x32+.banchi.DividendProtection.AdjustmentFactor\x12\x37\n\nthresholds\x18\x08 \x03(\x0b\x32#.banchi.DividendProtectionThreshold\x12L\n\x14\x61\x64justment_direction\x18\n \x01(\x0e\x32..banchi.DividendProtection.AdjustmentDirection\x12\x18\n\x10\x61veraging_period\x18\x0b \x01(\x05\x12S\n\x1d\x61veraging_reference_date_type\x18\x0c \x01(\x0e\x32,.banchi.DividendProtection.ReferenceDateType\x12#\n\x1b\x61veraging_period_end_offset\x18\r \x01(\x05\x12\x42\n\x19\x61veraging_price_reference\x18\x0f \x01(\x0e\x32\x1f.banchi.SharePriceReferenceType\x12\x18\n\x10\x63\x61sh_passthrough\x18\x0e \x01(\x01\"%\n\x04Type\x12\x08\n\x04NONE\x10\x00\x12\t\n\x05RATIO\x10\x01\x12\x08\n\x04\x43\x41SH\x10\x02\"]\n\x13ProtectionFrequency\x12\x0e\n\nON_EX_DATE\x10\x00\x12\n\n\x06\x41NNUAL\x10\x01\x12\x0e\n\nSEMIANNUAL\x10\x02\x12\r\n\tQUARTERLY\x10\x03\x12\x0b\n\x07MONTHLY\x10\x04\"O\n\x10\x41\x64justmentFactor\x12\x0c\n\x08STANDARD\x10\x00\x12\x16\n\x12\x44\x45NOMINATOR_EX_DIV\x10\x01\x12\x15\n\x11NUMERATOR_CUM_DIV\x10\x02\"8\n\x13\x41\x64justmentDirection\x12\x06\n\x02UP\x10\x00\x12\x08\n\x04\x44OWN\x10\x01\x12\x0f\n\x0bUP_AND_DOWN\x10\x02\"D\n\x11ReferenceDateType\x12\x0b\n\x07\x45X_DATE\x10\x00\x12\x0f\n\x0bRECORD_DATE\x10\x01\x12\x11\n\rDECLARED_DATE\x10\x02J\x04\x08\x07\x10\x08\"\xfd\x01\n\x1bProjectedDividendProtection\x12%\n\x0fprotection_date\x18\x01 \x01(\x0b\x32\x0c.banchi.Date\x12,\n\x16threshold_period_start\x18\x03 \x01(\x0b\x32\x0c.banchi.Date\x12*\n\x14threshold_period_end\x18\x04 \x01(\x0b\x32\x0c.banchi.Date\x12\x17\n\x0fshare_reference\x18\x05 \x01(\x01\x12\x11\n\tthreshold\x18\x06 \x01(\x01\x12\x14\n\x0c\x64ividend_sum\x18\t \x01(\x01\x12\r\n\x05ratio\x18\x0b \x01(\x01\x12\x0c\n\x04\x63\x61sh\x18\x0c \x01(\x01\"y\n!OutputProjectedDividendProtection\x12\x32\n\x05value\x18\x01 \x03(\x0b\x32#.banchi.ProjectedDividendProtection\x12 \n\x04info\x18\x02 \x01(\x0b\x32\x12.banchi.OutputInfob\x06proto3')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'dividend_protection_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _DIVIDENDPROTECTIONTHRESHOLD._serialized_start=109
  _DIVIDENDPROTECTIONTHRESHOLD._serialized_end=608
  _DIVIDENDPROTECTIONTHRESHOLD_PERIODFREQUENCY._serialized_start=374
  _DIVIDENDPROTECTIONTHRESHOLD_PERIODFREQUENCY._serialized_end=579
  _DIVIDENDPROTECTIONTHRESHOLD_TYPE._serialized_start=581
  _DIVIDENDPROTECTIONTHRESHOLD_TYPE._serialized_end=608
  _DIVIDENDPROTECTION._serialized_start=611
  _DIVIDENDPROTECTION._serialized_end=1636
  _DIVIDENDPROTECTION_TYPE._serialized_start=1289
  _DIVIDENDPROTECTION_TYPE._serialized_end=1326
  _DIVIDENDPROTECTION_PROTECTIONFREQUENCY._serialized_start=1328
  _DIVIDENDPROTECTION_PROTECTIONFREQUENCY._serialized_end=1421
  _DIVIDENDPROTECTION_ADJUSTMENTFACTOR._serialized_start=1423
  _DIVIDENDPROTECTION_ADJUSTMENTFACTOR._serialized_end=1502
  _DIVIDENDPROTECTION_ADJUSTMENTDIRECTION._serialized_start=1504
  _DIVIDENDPROTECTION_ADJUSTMENTDIRECTION._serialized_end=1560
  _DIVIDENDPROTECTION_REFERENCEDATETYPE._serialized_start=1562
  _DIVIDENDPROTECTION_REFERENCEDATETYPE._serialized_end=1630
  _PROJECTEDDIVIDENDPROTECTION._serialized_start=1639
  _PROJECTEDDIVIDENDPROTECTION._serialized_end=1892
  _OUTPUTPROJECTEDDIVIDENDPROTECTION._serialized_start=1894
  _OUTPUTPROJECTEDDIVIDENDPROTECTION._serialized_end=2015
# @@protoc_insertion_point(module_scope)
