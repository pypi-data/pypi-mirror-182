# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: conversion.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import enums_pb2 as enums__pb2
import trigger_pb2 as trigger__pb2
import date_pb2 as date__pb2
from google.protobuf import wrappers_pb2 as google_dot_protobuf_dot_wrappers__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x10\x63onversion.proto\x12\x06\x62\x61nchi\x1a\x0b\x65nums.proto\x1a\rtrigger.proto\x1a\ndate.proto\x1a\x1egoogle/protobuf/wrappers.proto\"\x8b\x03\n\x0b\x43oCoTrigger\x12\r\n\x05level\x18\x01 \x01(\x01\x12\"\n\x04type\x18\x03 \x01(\x0e\x32\x14.banchi.Trigger.Type\x12\x33\n\x0blevel_basis\x18\x04 \x01(\x0e\x32\x1e.banchi.CoCoTrigger.LevelBasis\x12\x35\n\x0egrace_required\x18\x06 \x01(\x0e\x32\x1d.banchi.Trigger.GraceRequired\x12\x1c\n\x14\x64\x61ys_in_grace_period\x18\x07 \x01(\x05\x12\x14\n\x0cgrace_period\x18\x08 \x01(\x05\x12\x30\n\x16grace_period_days_type\x18\t \x01(\x0e\x32\x10.banchi.DaysType\x12\x1a\n\x12grace_period_delay\x18\x0c \x01(\x05\x12\x36\n\x1cgrace_period_delay_days_type\x18\r \x01(\x0e\x32\x10.banchi.DaysType\"#\n\nLevelBasis\x12\x07\n\x03PAR\x10\x00\x12\x0c\n\x08\x41\x43\x43RETED\x10\x01\"v\n\nCoCoPeriod\x12 \n\nfirst_date\x18\x01 \x01(\x0b\x32\x0c.banchi.Date\x12 \n\nfinal_date\x18\x02 \x01(\x0b\x32\x0c.banchi.Date\x12$\n\x07trigger\x18\x04 \x01(\x0b\x32\x13.banchi.CoCoTrigger\"\xeb\x02\n\x14\x43ontingentConversion\x12$\n\x08schedule\x18\x01 \x03(\x0b\x32\x12.banchi.CoCoPeriod\x12?\n\x17trigger_check_frequency\x18\x02 \x01(\x0e\x32\x1e.banchi.Trigger.CheckFrequency\x12\x33\n\x1dtrigger_check_generating_date\x18\x03 \x01(\x0b\x32\x0c.banchi.Date\x12\x46\n\x1dtrigger_share_price_reference\x18\x06 \x01(\x0e\x32\x1f.banchi.SharePriceReferenceType\x12\x39\n\x14trigger_fx_reference\x18\x07 \x01(\x0e\x32\x1b.banchi.FXRateReferenceType\x12\x34\n\x0eparity_trigger\x18\n \x01(\x0b\x32\x1c.google.protobuf.DoubleValue\"\x88\x01\n\x14\x43onversionValueEntry\x12$\n\x0e\x65\x66\x66\x65\x63tive_from\x18\x01 \x01(\x0b\x32\x0c.banchi.Date\x12\r\n\x05value\x18\x02 \x01(\x01\x12\x1a\n\x12lower_strike_value\x18\x03 \x01(\x01\x12\x11\n\tconfirmed\x18\x05 \x01(\x08\x12\x0c\n\x04note\x18\x06 \x01(\t\"\xe2\x02\n\x1d\x43onversionSettlementAveraging\x12\x17\n\x0f\x63\x61sh_percentage\x18\x01 \x01(\x01\x12R\n\x14\x63\x61sh_reference_value\x18\x02 \x01(\x0e\x32\x34.banchi.ConversionSettlementAveraging.ReferenceValue\x12\x0e\n\x06period\x18\x03 \x01(\x05\x12\x15\n\rperiod_begins\x18\x04 \x01(\x05\x12>\n\x15share_price_reference\x18\x06 \x01(\x0e\x32\x1f.banchi.SharePriceReferenceType\x12\x31\n\x0c\x66x_reference\x18\x07 \x01(\x0e\x32\x1b.banchi.FXRateReferenceType\":\n\x0eReferenceValue\x12\x07\n\x03PAR\x10\x00\x12\n\n\x06PARITY\x10\x01\x12\x13\n\x0f\x41\x43\x43RETED_AMOUNT\x10\x02\"\xfc\x05\n\nConversion\x12\x45\n\x15\x63onversion_value_type\x18\x01 \x01(\x0e\x32&.banchi.Conversion.ConversionValueType\x12 \n\x18initial_conversion_value\x18\x02 \x01(\x01\x12\"\n\x1ainitial_lower_strike_value\x18\t \x01(\x01\x12\x42\n\x1cprevailing_conversion_values\x18\n \x03(\x0b\x32\x1c.banchi.ConversionValueEntry\x12.\n\x08\x65xercise\x18\x03 \x01(\x0e\x32\x1c.banchi.ExerciseScheduleType\x12)\n\x13\x66irst_exercise_date\x18\x04 \x01(\x0b\x32\x0c.banchi.Date\x12)\n\x13\x66inal_exercise_date\x18\x05 \x01(\x0b\x32\x0c.banchi.Date\x12+\n\x05\x63o_co\x18\x08 \x01(\x0b\x32\x1c.banchi.ContingentConversion\x12\x43\n\x14settlement_averaging\x18\x0b \x01(\x0b\x32%.banchi.ConversionSettlementAveraging\x12\x19\n\x11keep_final_coupon\x18\r \x01(\x08\x12\x19\n\x11is_cross_currency\x18\x0e \x01(\x08\x12\x15\n\rfixed_fx_rate\x18\x0f \x01(\x01\x12\x36\n\x0e\x66ixed_fx_basis\x18\x10 \x01(\x0e\x32\x1e.banchi.ContractualFXRateBasis\x12\x1f\n\x17\x63\x61sh_paid_on_conversion\x18\x14 \x01(\x01\x12\x45\n\x1bpeps_early_conversion_ratio\x18( \x01(\x0e\x32 .banchi.PEPSEarlyConversionRatio\"8\n\x13\x43onversionValueType\x12\x0b\n\x07PREMIUM\x10\x00\x12\t\n\x05PRICE\x10\x01\x12\t\n\x05RATIO\x10\x02*=\n\x18PEPSEarlyConversionRatio\x12\x0b\n\x07MINIMUM\x10\x00\x12\x14\n\x10SAME_AS_MATURITY\x10\x01\x62\x06proto3')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'conversion_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _PEPSEARLYCONVERSIONRATIO._serialized_start=2247
  _PEPSEARLYCONVERSIONRATIO._serialized_end=2308
  _COCOTRIGGER._serialized_start=101
  _COCOTRIGGER._serialized_end=496
  _COCOTRIGGER_LEVELBASIS._serialized_start=461
  _COCOTRIGGER_LEVELBASIS._serialized_end=496
  _COCOPERIOD._serialized_start=498
  _COCOPERIOD._serialized_end=616
  _CONTINGENTCONVERSION._serialized_start=619
  _CONTINGENTCONVERSION._serialized_end=982
  _CONVERSIONVALUEENTRY._serialized_start=985
  _CONVERSIONVALUEENTRY._serialized_end=1121
  _CONVERSIONSETTLEMENTAVERAGING._serialized_start=1124
  _CONVERSIONSETTLEMENTAVERAGING._serialized_end=1478
  _CONVERSIONSETTLEMENTAVERAGING_REFERENCEVALUE._serialized_start=1420
  _CONVERSIONSETTLEMENTAVERAGING_REFERENCEVALUE._serialized_end=1478
  _CONVERSION._serialized_start=1481
  _CONVERSION._serialized_end=2245
  _CONVERSION_CONVERSIONVALUETYPE._serialized_start=2189
  _CONVERSION_CONVERSIONVALUETYPE._serialized_end=2245
# @@protoc_insertion_point(module_scope)
