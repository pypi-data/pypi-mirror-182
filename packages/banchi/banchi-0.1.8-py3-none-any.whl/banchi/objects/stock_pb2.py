# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: stock.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import date_pb2 as date__pb2
import currency_pb2 as currency__pb2
import object_info_pb2 as object__info__pb2
import ticker_pb2 as ticker__pb2
import market_pb2 as market__pb2
import calendar_pb2 as calendar__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0bstock.proto\x12\x06\x62\x61nchi\x1a\ndate.proto\x1a\x0e\x63urrency.proto\x1a\x11object_info.proto\x1a\x0cticker.proto\x1a\x0cmarket.proto\x1a\x0e\x63\x61lendar.proto\"<\n\x0c\x43\x61shDividend\x12\x1d\n\x07\x65x_date\x18\x01 \x01(\x0b\x32\x0c.banchi.Date\x12\r\n\x05value\x18\x04 \x01(\x01\"D\n\x14ProportionalDividend\x12\x1d\n\x07\x65x_date\x18\x01 \x01(\x0b\x32\x0c.banchi.Date\x12\r\n\x05value\x18\x04 \x01(\x01\"E\n\x12\x44ividendYieldEntry\x12 \n\nstart_date\x18\x01 \x01(\x0b\x32\x0c.banchi.Date\x12\r\n\x05yield\x18\x02 \x01(\x01\"\x93\x02\n\tDividends\x12$\n\x04type\x18\x01 \x01(\x0e\x32\x16.banchi.Dividends.Type\x12\x12\n\nflat_yield\x18\x02 \x01(\x01\x12,\n\x0e\x63\x61sh_dividends\x18\x03 \x03(\x0b\x32\x14.banchi.CashDividend\x12<\n\x16proportional_dividends\x18\x04 \x03(\x0b\x32\x1c.banchi.ProportionalDividend\x12\x33\n\x0f\x64ividend_yields\x18\x05 \x03(\x0b\x32\x1a.banchi.DividendYieldEntry\"+\n\x04Type\x12\x13\n\x0f\x46LAT_CONTINUOUS\x10\x00\x12\x0e\n\nSTRUCTURED\x10\x01\"\xc5\x01\n\tStockInfo\x12\x0e\n\x06symbol\x18\x01 \x01(\t\x12\x1e\n\x06region\x18\x04 \x01(\x0b\x32\x0e.banchi.Region\x12\x1e\n\x06sector\x18\x05 \x01(\x0b\x32\x0e.banchi.Sector\x12\x35\n\nadditional\x18\x0f \x03(\x0b\x32!.banchi.StockInfo.AdditionalEntry\x1a\x31\n\x0f\x41\x64\x64itionalEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x87\x02\n\x13StockTimeSeriesData\x12(\n\x0bopen_prices\x18\x01 \x01(\x0b\x32\x13.banchi.DailyTicker\x12(\n\x0bhigh_prices\x18\x02 \x01(\x0b\x32\x13.banchi.DailyTicker\x12\'\n\nlow_prices\x18\x03 \x01(\x0b\x32\x13.banchi.DailyTicker\x12)\n\x0c\x63lose_prices\x18\x04 \x01(\x0b\x32\x13.banchi.DailyTicker\x12$\n\x07volumes\x18\x05 \x01(\x0b\x32\x13.banchi.DailyTicker\x12\"\n\x05vwaps\x18\x06 \x01(\x0b\x32\x13.banchi.DailyTicker\"\xb4\x02\n\x05Stock\x12\"\n\x06object\x18\r \x01(\x0b\x32\x12.banchi.ObjectInfo\x12\x12\n\nspot_price\x18\x02 \x01(\x01\x12\x17\n\x0fvolatility_flat\x18\x03 \x01(\x01\x12$\n\tdividends\x18\x04 \x01(\x0b\x32\x11.banchi.Dividends\x12\x13\n\x0b\x62orrow_cost\x18\x05 \x01(\x01\x12\"\n\x08\x63urrency\x18\x08 \x01(\x0b\x32\x10.banchi.Currency\x12\"\n\x08\x63\x61lendar\x18\x0e \x01(\x0b\x32\x10.banchi.Calendar\x12\x30\n\x0btime_series\x18\x0f \x01(\x0b\x32\x1b.banchi.StockTimeSeriesData\x12\x1f\n\x04info\x18\x33 \x01(\x0b\x32\x11.banchi.StockInfoJ\x04\x08\x01\x10\x02\x62\x06proto3')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'stock_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _STOCKINFO_ADDITIONALENTRY._options = None
  _STOCKINFO_ADDITIONALENTRY._serialized_options = b'8\001'
  _CASHDIVIDEND._serialized_start=114
  _CASHDIVIDEND._serialized_end=174
  _PROPORTIONALDIVIDEND._serialized_start=176
  _PROPORTIONALDIVIDEND._serialized_end=244
  _DIVIDENDYIELDENTRY._serialized_start=246
  _DIVIDENDYIELDENTRY._serialized_end=315
  _DIVIDENDS._serialized_start=318
  _DIVIDENDS._serialized_end=593
  _DIVIDENDS_TYPE._serialized_start=550
  _DIVIDENDS_TYPE._serialized_end=593
  _STOCKINFO._serialized_start=596
  _STOCKINFO._serialized_end=793
  _STOCKINFO_ADDITIONALENTRY._serialized_start=744
  _STOCKINFO_ADDITIONALENTRY._serialized_end=793
  _STOCKTIMESERIESDATA._serialized_start=796
  _STOCKTIMESERIESDATA._serialized_end=1059
  _STOCK._serialized_start=1062
  _STOCK._serialized_end=1370
# @@protoc_insertion_point(module_scope)
