# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: convertible.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import date_pb2 as date__pb2
import output_pb2 as output__pb2
import cashflows_pb2 as cashflows__pb2
import yield_curve_pb2 as yield__curve__pb2
import stock_pb2 as stock__pb2
import bond_pb2 as bond__pb2
import currency_pb2 as currency__pb2
import interest_rate_index_pb2 as interest__rate__index__pb2
import model_parameters_pb2 as model__parameters__pb2
import object_info_pb2 as object__info__pb2
import credit_data_pb2 as credit__data__pb2
import fx_rate_pb2 as fx__rate__pb2
import conversion_pb2 as conversion__pb2
import convertible_call_schedule_pb2 as convertible__call__schedule__pb2
import put_schedule_pb2 as put__schedule__pb2
import dividend_protection_pb2 as dividend__protection__pb2
import make_whole_pb2 as make__whole__pb2
import market_pb2 as market__pb2
import calendar_pb2 as calendar__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x11\x63onvertible.proto\x12\x06\x62\x61nchi\x1a\ndate.proto\x1a\x0coutput.proto\x1a\x0f\x63\x61shflows.proto\x1a\x11yield_curve.proto\x1a\x0bstock.proto\x1a\nbond.proto\x1a\x0e\x63urrency.proto\x1a\x19interest_rate_index.proto\x1a\x16model_parameters.proto\x1a\x11object_info.proto\x1a\x11\x63redit_data.proto\x1a\rfx_rate.proto\x1a\x10\x63onversion.proto\x1a\x1f\x63onvertible_call_schedule.proto\x1a\x12put_schedule.proto\x1a\x19\x64ividend_protection.proto\x1a\x10make_whole.proto\x1a\x0cmarket.proto\x1a\x0e\x63\x61lendar.proto\"\x92\x03\n\x0b\x43onvertible\x12&\n\nconversion\x18\x02 \x01(\x0b\x32\x12.banchi.Conversion\x12\x31\n\x10\x63onvertible_type\x18\x03 \x01(\x0e\x32\x17.banchi.ConvertibleType\x12!\n\x04\x62ond\x18\x05 \x01(\x0b\x32\x13.banchi.BondDetails\x12.\n\x05\x63\x61lls\x18\x07 \x01(\x0b\x32\x1f.banchi.ConvertibleCallSchedule\x12!\n\x04puts\x18\x08 \x01(\x0b\x32\x13.banchi.PutSchedule\x12\"\n\x08\x63urrency\x18\t \x01(\x0b\x32\x10.banchi.Currency\x12\x37\n\x13\x64ividend_protection\x18\x0b \x01(\x0b\x32\x1a.banchi.DividendProtection\x12%\n\nmake_whole\x18\x0c \x01(\x0b\x32\x11.banchi.MakeWhole\x12(\n\x12\x66inancial_year_end\x18\x14 \x01(\x0b\x32\x0c.banchi.DateJ\x04\x08\x01\x10\x02\"\xf2\x06\n\x12\x43onvertibleOutputs\x12\"\n\x04theo\x18\x01 \x01(\x0b\x32\x14.banchi.OutputDouble\x12)\n\x0b\x64irty_price\x18\x02 \x01(\x0b\x32\x14.banchi.OutputDouble\x12)\n\x0b\x63lean_price\x18\x03 \x01(\x0b\x32\x14.banchi.OutputDouble\x12(\n\ntheo_price\x18\x04 \x01(\x0b\x32\x14.banchi.OutputDouble\x12%\n\x07\x61\x63\x63rued\x18\x05 \x01(\x0b\x32\x14.banchi.OutputDouble\x12$\n\x06parity\x18\x07 \x01(\x0b\x32\x14.banchi.OutputDouble\x12.\n\x10prevailing_ratio\x18\x08 \x01(\x0b\x32\x14.banchi.OutputDouble\x12#\n\x05\x64\x65lta\x18\n \x01(\x0b\x32\x14.banchi.OutputDouble\x12*\n\x0cparity_delta\x18\x0b \x01(\x0b\x32\x14.banchi.OutputDouble\x12#\n\x05gamma\x18\x0c \x01(\x0b\x32\x14.banchi.OutputDouble\x12*\n\x0cparity_gamma\x18\r \x01(\x0b\x32\x14.banchi.OutputDouble\x12#\n\x05theta\x18\x0e \x01(\x0b\x32\x14.banchi.OutputDouble\x12(\n\ncash_today\x18\x17 \x01(\x0b\x32\x14.banchi.OutputDouble\x12-\n\x11\x63onvertible_today\x18\x18 \x01(\x0b\x32\x12.banchi.OutputBool\x12*\n\x0e\x63\x61llable_today\x18\x19 \x01(\x0b\x32\x12.banchi.OutputBool\x12\x34\n\x16ratio_adjustment_today\x18\x1d \x01(\x0b\x32\x14.banchi.OutputDouble\x12(\n\nplain_bond\x18( \x01(\x0b\x32\x14.banchi.OutputDouble\x12=\n\x13projected_cashflows\x18) \x01(\x0b\x32 .banchi.OutputProjectedCashflows\x12P\n\x1dprojected_dividend_protection\x18\x32 \x01(\x0b\x32).banchi.OutputProjectedDividendProtection\"\xbb\x02\n\x0f\x43onvertibleInfo\x12\x0e\n\x06symbol\x18\x01 \x01(\t\x12\x1e\n\x06region\x18\x04 \x01(\x0b\x32\x0e.banchi.Region\x12\x1e\n\x06sector\x18\x05 \x01(\x0b\x32\x0e.banchi.Sector\x12\x13\n\x0boutstanding\x18\x06 \x01(\x01\x12\x44\n\x1a\x63onversion_settlement_type\x18\t \x01(\x0e\x32 .banchi.ConversionSettlementType\x12\r\n\x05notes\x18\x0e \x01(\t\x12;\n\nadditional\x18\x0f \x03(\x0b\x32\'.banchi.ConvertibleInfo.AdditionalEntry\x1a\x31\n\x0f\x41\x64\x64itionalEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xc0\x05\n\x0f\x43onvertibleData\x12\"\n\x06object\x18\r \x01(\x0b\x32\x12.banchi.ObjectInfo\x12$\n\x0evaluation_date\x18\x02 \x01(\x0b\x32\x0c.banchi.Date\x12\'\n\ninstrument\x18\x03 \x01(\x0b\x32\x13.banchi.Convertible\x12\x1c\n\x05stock\x18\x04 \x01(\x0b\x32\r.banchi.Stock\x12\x36\n\x1ainstrument_risk_free_curve\x18\x05 \x01(\x0b\x32\x12.banchi.YieldCurve\x12\x32\n\x16instrument_credit_data\x18\x06 \x01(\x0b\x32\x12.banchi.CreditData\x12\x1f\n\x07\x66x_rate\x18\x07 \x01(\x0b\x32\x0e.banchi.FXRate\x12\x1c\n\x14\x66x_stock_correlation\x18\x08 \x01(\x01\x12-\n\x0cmarket_price\x18\t \x01(\x0b\x32\x17.banchi.BondMarketPrice\x12\x31\n\x10model_parameters\x18\n \x01(\x0b\x32\x17.banchi.ModelParameters\x12\x36\n\x1aunderlying_risk_free_curve\x18\x0c \x01(\x0b\x32\x12.banchi.YieldCurve\x12-\n\x13instrument_calendar\x18\x0e \x01(\x0b\x32\x10.banchi.Calendar\x12+\n\x07outputs\x18\x0f \x01(\x0b\x32\x1a.banchi.ConvertibleOutputs\x12\x31\n\x0e\x66loating_index\x18\x12 \x01(\x0b\x32\x19.banchi.InterestRateIndex\x12\x15\n\rrecovery_rate\x18\x14 \x01(\x01\x12%\n\x04info\x18\x33 \x01(\x0b\x32\x17.banchi.ConvertibleInfoJ\x04\x08\x01\x10\x02J\x04\x08\x32\x10\x33\"<\n\x12\x43onvertibleCalcSet\x12&\n\x05\x63\x61lcs\x18\x01 \x03(\x0b\x32\x17.banchi.ConvertibleData*1\n\x0f\x43onvertibleType\x12\x14\n\x10\x43ONVERTIBLE_BOND\x10\x00\x12\x08\n\x04PEPS\x10\x02*A\n\x18\x43onversionSettlementType\x12\x0e\n\nALL_SHARES\x10\x00\x12\x0c\n\x08\x41LL_CASH\x10\x01\x12\x07\n\x03NET\x10\x02\x62\x06proto3')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'convertible_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _CONVERTIBLEINFO_ADDITIONALENTRY._options = None
  _CONVERTIBLEINFO_ADDITIONALENTRY._serialized_options = b'8\001'
  _CONVERTIBLETYPE._serialized_start=2759
  _CONVERTIBLETYPE._serialized_end=2808
  _CONVERSIONSETTLEMENTTYPE._serialized_start=2810
  _CONVERSIONSETTLEMENTTYPE._serialized_end=2875
  _CONVERTIBLE._serialized_start=383
  _CONVERTIBLE._serialized_end=785
  _CONVERTIBLEOUTPUTS._serialized_start=788
  _CONVERTIBLEOUTPUTS._serialized_end=1670
  _CONVERTIBLEINFO._serialized_start=1673
  _CONVERTIBLEINFO._serialized_end=1988
  _CONVERTIBLEINFO_ADDITIONALENTRY._serialized_start=1939
  _CONVERTIBLEINFO_ADDITIONALENTRY._serialized_end=1988
  _CONVERTIBLEDATA._serialized_start=1991
  _CONVERTIBLEDATA._serialized_end=2695
  _CONVERTIBLECALCSET._serialized_start=2697
  _CONVERTIBLECALCSET._serialized_end=2757
# @@protoc_insertion_point(module_scope)
