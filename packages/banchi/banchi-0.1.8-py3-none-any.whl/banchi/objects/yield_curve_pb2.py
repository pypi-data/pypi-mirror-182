# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: yield_curve.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import date_pb2 as date__pb2
import offset_pb2 as offset__pb2
import enums_pb2 as enums__pb2
import output_pb2 as output__pb2
import object_info_pb2 as object__info__pb2
import calendar_pb2 as calendar__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x11yield_curve.proto\x12\x06\x62\x61nchi\x1a\ndate.proto\x1a\x0coffset.proto\x1a\x0b\x65nums.proto\x1a\x0coutput.proto\x1a\x11object_info.proto\x1a\x0e\x63\x61lendar.proto\">\n\x0e\x43urveSwapEntry\x12\x1e\n\x06offset\x18\x01 \x01(\x0b\x32\x0e.banchi.Offset\x12\x0c\n\x04rate\x18\x02 \x01(\x01\">\n\x0e\x43urveCashEntry\x12\x1e\n\x06offset\x18\x01 \x01(\x0b\x32\x0e.banchi.Offset\x12\x0c\n\x04rate\x18\x02 \x01(\x01\";\n\nCurveEntry\x12\x1e\n\x06offset\x18\x01 \x01(\x0b\x32\x0e.banchi.Offset\x12\r\n\x05value\x18\x02 \x01(\x01\"\x91\x05\n\nYieldCurve\x12\"\n\x06object\x18\r \x01(\x0b\x32\x12.banchi.ObjectInfo\x12\x0c\n\x04name\x18\x02 \x01(\t\x12$\n\x0ereference_date\x18\x03 \x01(\x0b\x32\x0c.banchi.Date\x12%\n\x04type\x18\x04 \x01(\x0e\x32\x17.banchi.YieldCurve.Type\x12\x11\n\tflat_rate\x18\x05 \x01(\x01\x12#\n\tday_count\x18\x06 \x01(\x0e\x32\x10.banchi.DayCount\x12(\n\x0b\x63ompounding\x18\x07 \x01(\x0e\x32\x13.banchi.Compounding\x12!\n\x05\x63urve\x18\n \x03(\x0b\x32\x12.banchi.CurveEntry\x12\x18\n\x10settlement_delay\x18\x0b \x01(\x05\x12\"\n\x08\x63\x61lendar\x18\x0c \x01(\x0b\x32\x10.banchi.Calendar\x12*\n\ncash_rates\x18\x0e \x03(\x0b\x32\x16.banchi.CurveCashEntry\x12*\n\nswap_rates\x18\x11 \x03(\x0b\x32\x16.banchi.CurveSwapEntry\x12-\n\x13\x63\x61sh_rate_day_count\x18\x14 \x01(\x0e\x32\x10.banchi.DayCount\x12-\n\x13swap_rate_day_count\x18\x15 \x01(\x0e\x32\x10.banchi.DayCount\x12\x38\n\x16swap_payment_frequency\x18\x16 \x01(\x0e\x32\x18.banchi.PaymentFrequency\"K\n\x04Type\x12\r\n\tFLAT_RATE\x10\x00\x12\x0e\n\nZERO_RATES\x10\x01\x12\x14\n\x10\x44ISCOUNT_FACTORS\x10\x02\x12\x0e\n\nSWAP_CURVE\x10\x03J\x04\x08\x01\x10\x02\"Q\n\x0bOutputCurve\x12 \n\x05value\x18\x01 \x03(\x0b\x32\x11.banchi.DateValue\x12 \n\x04info\x18\x02 \x01(\x0b\x32\x12.banchi.OutputInfo\"\x97\x01\n\x11YieldCurveOutputs\x12-\n\x10\x64iscount_factors\x18\x01 \x01(\x0b\x32\x13.banchi.OutputCurve\x12\'\n\nzero_rates\x18\x03 \x01(\x0b\x32\x13.banchi.OutputCurve\x12*\n\rforward_rates\x18\x05 \x01(\x0b\x32\x13.banchi.OutputCurve\"\xda\x01\n\x0eYieldCurveCalc\x12\"\n\x06object\x18\x01 \x01(\x0b\x32\x12.banchi.ObjectInfo\x12\'\n\x0binput_curve\x18\x02 \x01(\x0b\x32\x12.banchi.YieldCurve\x12+\n\x15output_reference_date\x18\x03 \x01(\x0b\x32\x0c.banchi.Date\x12\"\n\x0c\x63ustom_dates\x18\x04 \x03(\x0b\x32\x0c.banchi.Date\x12*\n\x07outputs\x18\x0f \x01(\x0b\x32\x19.banchi.YieldCurveOutputs\":\n\x11YieldCurveCalcSet\x12%\n\x05\x63\x61lcs\x18\x01 \x03(\x0b\x32\x16.banchi.YieldCurveCalcb\x06proto3')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'yield_curve_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _CURVESWAPENTRY._serialized_start=117
  _CURVESWAPENTRY._serialized_end=179
  _CURVECASHENTRY._serialized_start=181
  _CURVECASHENTRY._serialized_end=243
  _CURVEENTRY._serialized_start=245
  _CURVEENTRY._serialized_end=304
  _YIELDCURVE._serialized_start=307
  _YIELDCURVE._serialized_end=964
  _YIELDCURVE_TYPE._serialized_start=883
  _YIELDCURVE_TYPE._serialized_end=958
  _OUTPUTCURVE._serialized_start=966
  _OUTPUTCURVE._serialized_end=1047
  _YIELDCURVEOUTPUTS._serialized_start=1050
  _YIELDCURVEOUTPUTS._serialized_end=1201
  _YIELDCURVECALC._serialized_start=1204
  _YIELDCURVECALC._serialized_end=1422
  _YIELDCURVECALCSET._serialized_start=1424
  _YIELDCURVECALCSET._serialized_end=1482
# @@protoc_insertion_point(module_scope)
