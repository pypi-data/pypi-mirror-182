"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _RecordingStorage:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _RecordingStorageEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_RecordingStorage.ValueType], builtins.type):  # noqa: F821
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    RECORDING_STORAGE_S3_UNSPECIFIED: _RecordingStorage.ValueType  # 0

class RecordingStorage(_RecordingStorage, metaclass=_RecordingStorageEnumTypeWrapper): ...

RECORDING_STORAGE_S3_UNSPECIFIED: RecordingStorage.ValueType  # 0
global___RecordingStorage = RecordingStorage

class Recording(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CALL_TYPE_FIELD_NUMBER: builtins.int
    CALL_ID_FIELD_NUMBER: builtins.int
    S3_FILE_URL_FIELD_NUMBER: builtins.int
    START_TIME_FIELD_NUMBER: builtins.int
    STOP_TIME_FIELD_NUMBER: builtins.int
    call_type: builtins.str
    call_id: builtins.str
    s3_file_url: builtins.str
    start_time: builtins.str
    stop_time: builtins.str
    def __init__(
        self,
        *,
        call_type: builtins.str = ...,
        call_id: builtins.str = ...,
        s3_file_url: builtins.str = ...,
        start_time: builtins.str = ...,
        stop_time: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["call_id", b"call_id", "call_type", b"call_type", "s3_file_url", b"s3_file_url", "start_time", b"start_time", "stop_time", b"stop_time"]) -> None: ...

global___Recording = Recording

class File(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TYPE_FIELD_NUMBER: builtins.int
    COMPOSITE_FIELD_NUMBER: builtins.int
    USER_ID_FIELD_NUMBER: builtins.int
    URL_FIELD_NUMBER: builtins.int
    type: builtins.str
    composite: builtins.bool
    user_id: builtins.str
    url: builtins.str
    def __init__(
        self,
        *,
        type: builtins.str = ...,
        composite: builtins.bool = ...,
        user_id: builtins.str = ...,
        url: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["composite", b"composite", "type", b"type", "url", b"url", "user_id", b"user_id"]) -> None: ...

global___File = File

class RecordBroadcast(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    COMPOSITE_FIELD_NUMBER: builtins.int
    FILES_FIELD_NUMBER: builtins.int
    composite: builtins.bool
    """If true merge all audio and video, if false split them."""
    @property
    def files(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___File]:
        """List of recorded files."""
    def __init__(
        self,
        *,
        composite: builtins.bool = ...,
        files: collections.abc.Iterable[global___File] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["composite", b"composite", "files", b"files"]) -> None: ...

global___RecordBroadcast = RecordBroadcast

class RecordingStorageOptions(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STORAGE_FIELD_NUMBER: builtins.int
    ACCESS_KEY_FIELD_NUMBER: builtins.int
    SECRET_KEY_FIELD_NUMBER: builtins.int
    BUCKET_NAME_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    PATH_FIELD_NUMBER: builtins.int
    storage: global___RecordingStorage.ValueType
    access_key: builtins.str
    secret_key: builtins.str
    bucket_name: builtins.str
    region: builtins.str
    path: builtins.str
    def __init__(
        self,
        *,
        storage: global___RecordingStorage.ValueType = ...,
        access_key: builtins.str = ...,
        secret_key: builtins.str = ...,
        bucket_name: builtins.str = ...,
        region: builtins.str = ...,
        path: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["access_key", b"access_key", "bucket_name", b"bucket_name", "path", b"path", "region", b"region", "secret_key", b"secret_key", "storage", b"storage"]) -> None: ...

global___RecordingStorageOptions = RecordingStorageOptions
