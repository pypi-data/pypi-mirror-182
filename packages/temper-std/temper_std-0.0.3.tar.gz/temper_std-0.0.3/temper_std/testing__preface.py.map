{ "version": 3, "file": "OUTPUT_ROOT/temper-std/py/temper_std/testing__preface.py", "sources": [ "std/testing.temper.md" ], "sourcesContent": [ "```temper ;lit\nprivate var passing: Boolean = true;\nprivate var messages = new ListBuilder\u003cString\u003e();\n\n@extension(\u0022::test\u0022)\nexport let test(name: String, body: fn (): Void) {\n  passing = true;\n  messages = new ListBuilder\u003cString\u003e();\n  // TODO exception handling?\n  body();\n  if(passing) {\n    print(\u0022\u0024{name}: Passed\u0022);\n  } else {\n    print(\u0022\u0024{name}: Failed \u0024{messages.join(\u0022\\n\u0022) { (it: String): String;; it }}\u0022);\n  }\n}\n\nexport interface TestFixtureBase {\n\n}\n\nexport let assert(success: Boolean, message: fn (): String) {\n  if(!success) {\n    passing = false;\n    messages.add(message());\n  }\n}\n```\n" ], "names": [ "return" ], "mappings": "AAAAA,SAAA;AAAA,SAAAA" }