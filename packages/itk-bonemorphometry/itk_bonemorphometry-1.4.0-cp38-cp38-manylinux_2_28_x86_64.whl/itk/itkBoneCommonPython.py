# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _BoneMorphometryPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkBoneCommonPython
else:
    import _itkBoneCommonPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkBoneCommonPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkBoneCommonPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.itkImageSourceCommonPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.vnl_vector_refPython
import itk.itkCovariantVectorPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkImageRegionPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSimpleDataObjectDecoratorPython
import itk.itkRGBAPixelPython
import itk.itkArrayPython
import itk.itkRGBPixelPython
import itk.itkImagePython
import itk.itkSymmetricSecondRankTensorPython
class vectoritkImageVF53(collections.abc.MutableSequence):
    r"""Proxy of C++ std::vector< itkImageVF53_Pointer > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    iterator = _swig_new_instance_method(_itkBoneCommonPython.vectoritkImageVF53_iterator)
    def __iter__(self):
        return self.iterator()
    __nonzero__ = _swig_new_instance_method(_itkBoneCommonPython.vectoritkImageVF53___nonzero__)
    __bool__ = _swig_new_instance_method(_itkBoneCommonPython.vectoritkImageVF53___bool__)
    __len__ = _swig_new_instance_method(_itkBoneCommonPython.vectoritkImageVF53___len__)
    __getslice__ = _swig_new_instance_method(_itkBoneCommonPython.vectoritkImageVF53___getslice__)
    __setslice__ = _swig_new_instance_method(_itkBoneCommonPython.vectoritkImageVF53___setslice__)
    __delslice__ = _swig_new_instance_method(_itkBoneCommonPython.vectoritkImageVF53___delslice__)
    __delitem__ = _swig_new_instance_method(_itkBoneCommonPython.vectoritkImageVF53___delitem__)
    __getitem__ = _swig_new_instance_method(_itkBoneCommonPython.vectoritkImageVF53___getitem__)
    __setitem__ = _swig_new_instance_method(_itkBoneCommonPython.vectoritkImageVF53___setitem__)
    pop = _swig_new_instance_method(_itkBoneCommonPython.vectoritkImageVF53_pop)
    append = _swig_new_instance_method(_itkBoneCommonPython.vectoritkImageVF53_append)
    empty = _swig_new_instance_method(_itkBoneCommonPython.vectoritkImageVF53_empty)
    size = _swig_new_instance_method(_itkBoneCommonPython.vectoritkImageVF53_size)
    swap = _swig_new_instance_method(_itkBoneCommonPython.vectoritkImageVF53_swap)
    begin = _swig_new_instance_method(_itkBoneCommonPython.vectoritkImageVF53_begin)
    end = _swig_new_instance_method(_itkBoneCommonPython.vectoritkImageVF53_end)
    rbegin = _swig_new_instance_method(_itkBoneCommonPython.vectoritkImageVF53_rbegin)
    rend = _swig_new_instance_method(_itkBoneCommonPython.vectoritkImageVF53_rend)
    clear = _swig_new_instance_method(_itkBoneCommonPython.vectoritkImageVF53_clear)
    get_allocator = _swig_new_instance_method(_itkBoneCommonPython.vectoritkImageVF53_get_allocator)
    pop_back = _swig_new_instance_method(_itkBoneCommonPython.vectoritkImageVF53_pop_back)
    erase = _swig_new_instance_method(_itkBoneCommonPython.vectoritkImageVF53_erase)

    def __init__(self, *args):
        r"""
        __init__(self) -> vectoritkImageVF53
        __init__(self, other) -> vectoritkImageVF53

        Parameters
        ----------
        other: std::vector< itkImageVF53_Pointer > const &

        __init__(self, size) -> vectoritkImageVF53

        Parameters
        ----------
        size: std::vector< itkImageVF53_Pointer >::size_type

        __init__(self, size, value) -> vectoritkImageVF53

        Parameters
        ----------
        size: std::vector< itkImageVF53_Pointer >::size_type
        value: std::vector< itkImageVF53_Pointer >::value_type const &

        """
        _itkBoneCommonPython.vectoritkImageVF53_swiginit(self, _itkBoneCommonPython.new_vectoritkImageVF53(*args))
    push_back = _swig_new_instance_method(_itkBoneCommonPython.vectoritkImageVF53_push_back)
    front = _swig_new_instance_method(_itkBoneCommonPython.vectoritkImageVF53_front)
    back = _swig_new_instance_method(_itkBoneCommonPython.vectoritkImageVF53_back)
    assign = _swig_new_instance_method(_itkBoneCommonPython.vectoritkImageVF53_assign)
    resize = _swig_new_instance_method(_itkBoneCommonPython.vectoritkImageVF53_resize)
    insert = _swig_new_instance_method(_itkBoneCommonPython.vectoritkImageVF53_insert)
    reserve = _swig_new_instance_method(_itkBoneCommonPython.vectoritkImageVF53_reserve)
    capacity = _swig_new_instance_method(_itkBoneCommonPython.vectoritkImageVF53_capacity)
    __swig_destroy__ = _itkBoneCommonPython.delete_vectoritkImageVF53

# Register vectoritkImageVF53 in _itkBoneCommonPython:
_itkBoneCommonPython.vectoritkImageVF53_swigregister(vectoritkImageVF53)


def itkImageFileWriterIVF53_New():
    return itkImageFileWriterIVF53.New()

class itkImageFileWriterIVF53(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkImageFileWriterIVF53 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBoneCommonPython.itkImageFileWriterIVF53___New_orig__)
    Clone = _swig_new_instance_method(_itkBoneCommonPython.itkImageFileWriterIVF53_Clone)
    SetInput = _swig_new_instance_method(_itkBoneCommonPython.itkImageFileWriterIVF53_SetInput)
    GetInput = _swig_new_instance_method(_itkBoneCommonPython.itkImageFileWriterIVF53_GetInput)
    SetFileName = _swig_new_instance_method(_itkBoneCommonPython.itkImageFileWriterIVF53_SetFileName)
    GetFileName = _swig_new_instance_method(_itkBoneCommonPython.itkImageFileWriterIVF53_GetFileName)
    SetImageIO = _swig_new_instance_method(_itkBoneCommonPython.itkImageFileWriterIVF53_SetImageIO)
    GetModifiableImageIO = _swig_new_instance_method(_itkBoneCommonPython.itkImageFileWriterIVF53_GetModifiableImageIO)
    GetImageIO = _swig_new_instance_method(_itkBoneCommonPython.itkImageFileWriterIVF53_GetImageIO)
    Write = _swig_new_instance_method(_itkBoneCommonPython.itkImageFileWriterIVF53_Write)
    SetIORegion = _swig_new_instance_method(_itkBoneCommonPython.itkImageFileWriterIVF53_SetIORegion)
    GetIORegion = _swig_new_instance_method(_itkBoneCommonPython.itkImageFileWriterIVF53_GetIORegion)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkBoneCommonPython.itkImageFileWriterIVF53_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkBoneCommonPython.itkImageFileWriterIVF53_GetNumberOfStreamDivisions)
    SetUseCompression = _swig_new_instance_method(_itkBoneCommonPython.itkImageFileWriterIVF53_SetUseCompression)
    GetUseCompression = _swig_new_instance_method(_itkBoneCommonPython.itkImageFileWriterIVF53_GetUseCompression)
    UseCompressionOn = _swig_new_instance_method(_itkBoneCommonPython.itkImageFileWriterIVF53_UseCompressionOn)
    UseCompressionOff = _swig_new_instance_method(_itkBoneCommonPython.itkImageFileWriterIVF53_UseCompressionOff)
    SetCompressionLevel = _swig_new_instance_method(_itkBoneCommonPython.itkImageFileWriterIVF53_SetCompressionLevel)
    GetCompressionLevel = _swig_new_instance_method(_itkBoneCommonPython.itkImageFileWriterIVF53_GetCompressionLevel)
    SetUseInputMetaDataDictionary = _swig_new_instance_method(_itkBoneCommonPython.itkImageFileWriterIVF53_SetUseInputMetaDataDictionary)
    GetUseInputMetaDataDictionary = _swig_new_instance_method(_itkBoneCommonPython.itkImageFileWriterIVF53_GetUseInputMetaDataDictionary)
    UseInputMetaDataDictionaryOn = _swig_new_instance_method(_itkBoneCommonPython.itkImageFileWriterIVF53_UseInputMetaDataDictionaryOn)
    UseInputMetaDataDictionaryOff = _swig_new_instance_method(_itkBoneCommonPython.itkImageFileWriterIVF53_UseInputMetaDataDictionaryOff)
    __swig_destroy__ = _itkBoneCommonPython.delete_itkImageFileWriterIVF53
    cast = _swig_new_static_method(_itkBoneCommonPython.itkImageFileWriterIVF53_cast)

    def New(*args, **kargs):
        """New() -> itkImageFileWriterIVF53

        Create a new object of the class itkImageFileWriterIVF53 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileWriterIVF53.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileWriterIVF53.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileWriterIVF53.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileWriterIVF53 in _itkBoneCommonPython:
_itkBoneCommonPython.itkImageFileWriterIVF53_swigregister(itkImageFileWriterIVF53)
itkImageFileWriterIVF53___New_orig__ = _itkBoneCommonPython.itkImageFileWriterIVF53___New_orig__
itkImageFileWriterIVF53_cast = _itkBoneCommonPython.itkImageFileWriterIVF53_cast

class itkImageIOBase(itk.ITKCommonBasePython.itkLightProcessObject):
    r"""Proxy of C++ itkImageIOBase class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetFileName = _swig_new_instance_method(_itkBoneCommonPython.itkImageIOBase_SetFileName)
    GetFileName = _swig_new_instance_method(_itkBoneCommonPython.itkImageIOBase_GetFileName)
    SetNumberOfDimensions = _swig_new_instance_method(_itkBoneCommonPython.itkImageIOBase_SetNumberOfDimensions)
    GetNumberOfDimensions = _swig_new_instance_method(_itkBoneCommonPython.itkImageIOBase_GetNumberOfDimensions)
    SetDimensions = _swig_new_instance_method(_itkBoneCommonPython.itkImageIOBase_SetDimensions)
    GetDimensions = _swig_new_instance_method(_itkBoneCommonPython.itkImageIOBase_GetDimensions)
    SetOrigin = _swig_new_instance_method(_itkBoneCommonPython.itkImageIOBase_SetOrigin)
    GetOrigin = _swig_new_instance_method(_itkBoneCommonPython.itkImageIOBase_GetOrigin)
    SetSpacing = _swig_new_instance_method(_itkBoneCommonPython.itkImageIOBase_SetSpacing)
    GetSpacing = _swig_new_instance_method(_itkBoneCommonPython.itkImageIOBase_GetSpacing)
    SetDirection = _swig_new_instance_method(_itkBoneCommonPython.itkImageIOBase_SetDirection)
    GetDirection = _swig_new_instance_method(_itkBoneCommonPython.itkImageIOBase_GetDirection)
    GetDefaultDirection = _swig_new_instance_method(_itkBoneCommonPython.itkImageIOBase_GetDefaultDirection)
    SetIORegion = _swig_new_instance_method(_itkBoneCommonPython.itkImageIOBase_SetIORegion)
    GetIORegion = _swig_new_instance_method(_itkBoneCommonPython.itkImageIOBase_GetIORegion)
    SetPixelType = _swig_new_instance_method(_itkBoneCommonPython.itkImageIOBase_SetPixelType)
    GetPixelType = _swig_new_instance_method(_itkBoneCommonPython.itkImageIOBase_GetPixelType)
    SetComponentType = _swig_new_instance_method(_itkBoneCommonPython.itkImageIOBase_SetComponentType)
    GetComponentType = _swig_new_instance_method(_itkBoneCommonPython.itkImageIOBase_GetComponentType)
    GetComponentTypeInfo = _swig_new_instance_method(_itkBoneCommonPython.itkImageIOBase_GetComponentTypeInfo)
    SetNumberOfComponents = _swig_new_instance_method(_itkBoneCommonPython.itkImageIOBase_SetNumberOfComponents)
    GetNumberOfComponents = _swig_new_instance_method(_itkBoneCommonPython.itkImageIOBase_GetNumberOfComponents)
    SetUseCompression = _swig_new_instance_method(_itkBoneCommonPython.itkImageIOBase_SetUseCompression)
    GetUseCompression = _swig_new_instance_method(_itkBoneCommonPython.itkImageIOBase_GetUseCompression)
    UseCompressionOn = _swig_new_instance_method(_itkBoneCommonPython.itkImageIOBase_UseCompressionOn)
    UseCompressionOff = _swig_new_instance_method(_itkBoneCommonPython.itkImageIOBase_UseCompressionOff)
    SetCompressionLevel = _swig_new_instance_method(_itkBoneCommonPython.itkImageIOBase_SetCompressionLevel)
    GetCompressionLevel = _swig_new_instance_method(_itkBoneCommonPython.itkImageIOBase_GetCompressionLevel)
    SetCompressor = _swig_new_instance_method(_itkBoneCommonPython.itkImageIOBase_SetCompressor)
    GetCompressor = _swig_new_instance_method(_itkBoneCommonPython.itkImageIOBase_GetCompressor)
    SetUseStreamedReading = _swig_new_instance_method(_itkBoneCommonPython.itkImageIOBase_SetUseStreamedReading)
    GetUseStreamedReading = _swig_new_instance_method(_itkBoneCommonPython.itkImageIOBase_GetUseStreamedReading)
    UseStreamedReadingOn = _swig_new_instance_method(_itkBoneCommonPython.itkImageIOBase_UseStreamedReadingOn)
    UseStreamedReadingOff = _swig_new_instance_method(_itkBoneCommonPython.itkImageIOBase_UseStreamedReadingOff)
    SetUseStreamedWriting = _swig_new_instance_method(_itkBoneCommonPython.itkImageIOBase_SetUseStreamedWriting)
    GetUseStreamedWriting = _swig_new_instance_method(_itkBoneCommonPython.itkImageIOBase_GetUseStreamedWriting)
    UseStreamedWritingOn = _swig_new_instance_method(_itkBoneCommonPython.itkImageIOBase_UseStreamedWritingOn)
    UseStreamedWritingOff = _swig_new_instance_method(_itkBoneCommonPython.itkImageIOBase_UseStreamedWritingOff)
    SetExpandRGBPalette = _swig_new_instance_method(_itkBoneCommonPython.itkImageIOBase_SetExpandRGBPalette)
    GetExpandRGBPalette = _swig_new_instance_method(_itkBoneCommonPython.itkImageIOBase_GetExpandRGBPalette)
    ExpandRGBPaletteOn = _swig_new_instance_method(_itkBoneCommonPython.itkImageIOBase_ExpandRGBPaletteOn)
    ExpandRGBPaletteOff = _swig_new_instance_method(_itkBoneCommonPython.itkImageIOBase_ExpandRGBPaletteOff)
    SetWritePalette = _swig_new_instance_method(_itkBoneCommonPython.itkImageIOBase_SetWritePalette)
    GetWritePalette = _swig_new_instance_method(_itkBoneCommonPython.itkImageIOBase_GetWritePalette)
    WritePaletteOn = _swig_new_instance_method(_itkBoneCommonPython.itkImageIOBase_WritePaletteOn)
    WritePaletteOff = _swig_new_instance_method(_itkBoneCommonPython.itkImageIOBase_WritePaletteOff)
    GetIsReadAsScalarPlusPalette = _swig_new_instance_method(_itkBoneCommonPython.itkImageIOBase_GetIsReadAsScalarPlusPalette)
    GetComponentTypeAsString = _swig_new_static_method(_itkBoneCommonPython.itkImageIOBase_GetComponentTypeAsString)
    GetComponentTypeFromString = _swig_new_static_method(_itkBoneCommonPython.itkImageIOBase_GetComponentTypeFromString)
    GetPixelTypeAsString = _swig_new_static_method(_itkBoneCommonPython.itkImageIOBase_GetPixelTypeAsString)
    GetPixelTypeFromString = _swig_new_static_method(_itkBoneCommonPython.itkImageIOBase_GetPixelTypeFromString)
    SetFileType = _swig_new_instance_method(_itkBoneCommonPython.itkImageIOBase_SetFileType)
    GetFileType = _swig_new_instance_method(_itkBoneCommonPython.itkImageIOBase_GetFileType)
    SetFileTypeToASCII = _swig_new_instance_method(_itkBoneCommonPython.itkImageIOBase_SetFileTypeToASCII)
    SetFileTypeToBinary = _swig_new_instance_method(_itkBoneCommonPython.itkImageIOBase_SetFileTypeToBinary)
    SetByteOrder = _swig_new_instance_method(_itkBoneCommonPython.itkImageIOBase_SetByteOrder)
    GetByteOrder = _swig_new_instance_method(_itkBoneCommonPython.itkImageIOBase_GetByteOrder)
    SetByteOrderToBigEndian = _swig_new_instance_method(_itkBoneCommonPython.itkImageIOBase_SetByteOrderToBigEndian)
    SetByteOrderToLittleEndian = _swig_new_instance_method(_itkBoneCommonPython.itkImageIOBase_SetByteOrderToLittleEndian)
    GetFileTypeAsString = _swig_new_instance_method(_itkBoneCommonPython.itkImageIOBase_GetFileTypeAsString)
    GetByteOrderAsString = _swig_new_instance_method(_itkBoneCommonPython.itkImageIOBase_GetByteOrderAsString)
    GetPixelStride = _swig_new_instance_method(_itkBoneCommonPython.itkImageIOBase_GetPixelStride)
    GetImageSizeInPixels = _swig_new_instance_method(_itkBoneCommonPython.itkImageIOBase_GetImageSizeInPixels)
    GetImageSizeInBytes = _swig_new_instance_method(_itkBoneCommonPython.itkImageIOBase_GetImageSizeInBytes)
    GetImageSizeInComponents = _swig_new_instance_method(_itkBoneCommonPython.itkImageIOBase_GetImageSizeInComponents)
    GetComponentSize = _swig_new_instance_method(_itkBoneCommonPython.itkImageIOBase_GetComponentSize)
    CanReadFile = _swig_new_instance_method(_itkBoneCommonPython.itkImageIOBase_CanReadFile)
    CanStreamRead = _swig_new_instance_method(_itkBoneCommonPython.itkImageIOBase_CanStreamRead)
    ReadImageInformation = _swig_new_instance_method(_itkBoneCommonPython.itkImageIOBase_ReadImageInformation)
    Read = _swig_new_instance_method(_itkBoneCommonPython.itkImageIOBase_Read)
    CanWriteFile = _swig_new_instance_method(_itkBoneCommonPython.itkImageIOBase_CanWriteFile)
    CanStreamWrite = _swig_new_instance_method(_itkBoneCommonPython.itkImageIOBase_CanStreamWrite)
    WriteImageInformation = _swig_new_instance_method(_itkBoneCommonPython.itkImageIOBase_WriteImageInformation)
    Write = _swig_new_instance_method(_itkBoneCommonPython.itkImageIOBase_Write)
    SupportsDimension = _swig_new_instance_method(_itkBoneCommonPython.itkImageIOBase_SupportsDimension)
    GenerateStreamableReadRegionFromRequestedRegion = _swig_new_instance_method(_itkBoneCommonPython.itkImageIOBase_GenerateStreamableReadRegionFromRequestedRegion)
    GetActualNumberOfSplitsForWriting = _swig_new_instance_method(_itkBoneCommonPython.itkImageIOBase_GetActualNumberOfSplitsForWriting)
    GetSplitRegionForWriting = _swig_new_instance_method(_itkBoneCommonPython.itkImageIOBase_GetSplitRegionForWriting)
    GetSupportedReadExtensions = _swig_new_instance_method(_itkBoneCommonPython.itkImageIOBase_GetSupportedReadExtensions)
    GetSupportedWriteExtensions = _swig_new_instance_method(_itkBoneCommonPython.itkImageIOBase_GetSupportedWriteExtensions)

# Register itkImageIOBase in _itkBoneCommonPython:
_itkBoneCommonPython.itkImageIOBase_swigregister(itkImageIOBase)
itkImageIOBase_GetComponentTypeAsString = _itkBoneCommonPython.itkImageIOBase_GetComponentTypeAsString
itkImageIOBase_GetComponentTypeFromString = _itkBoneCommonPython.itkImageIOBase_GetComponentTypeFromString
itkImageIOBase_GetPixelTypeAsString = _itkBoneCommonPython.itkImageIOBase_GetPixelTypeAsString
itkImageIOBase_GetPixelTypeFromString = _itkBoneCommonPython.itkImageIOBase_GetPixelTypeFromString

class itkImageSourceIVF53(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkImageSourceIVF53 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetOutput = _swig_new_instance_method(_itkBoneCommonPython.itkImageSourceIVF53_GetOutput)
    GraftOutput = _swig_new_instance_method(_itkBoneCommonPython.itkImageSourceIVF53_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_itkBoneCommonPython.itkImageSourceIVF53_GraftNthOutput)
    MakeOutput = _swig_new_instance_method(_itkBoneCommonPython.itkImageSourceIVF53_MakeOutput)
    __swig_destroy__ = _itkBoneCommonPython.delete_itkImageSourceIVF53
    cast = _swig_new_static_method(_itkBoneCommonPython.itkImageSourceIVF53_cast)

# Register itkImageSourceIVF53 in _itkBoneCommonPython:
_itkBoneCommonPython.itkImageSourceIVF53_swigregister(itkImageSourceIVF53)
itkImageSourceIVF53_cast = _itkBoneCommonPython.itkImageSourceIVF53_cast


def itkImageVF53_New():
    return itkImageVF53.New()

class itkImageVF53(itk.itkImagePython.itkImageBase3):
    r"""Proxy of C++ itkImageVF53 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBoneCommonPython.itkImageVF53___New_orig__)
    Clone = _swig_new_instance_method(_itkBoneCommonPython.itkImageVF53_Clone)
    Allocate = _swig_new_instance_method(_itkBoneCommonPython.itkImageVF53_Allocate)
    FillBuffer = _swig_new_instance_method(_itkBoneCommonPython.itkImageVF53_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkBoneCommonPython.itkImageVF53_SetPixel)
    GetPixel = _swig_new_instance_method(_itkBoneCommonPython.itkImageVF53_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkBoneCommonPython.itkImageVF53_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkBoneCommonPython.itkImageVF53_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkBoneCommonPython.itkImageVF53_SetPixelContainer)
    Graft = _swig_new_instance_method(_itkBoneCommonPython.itkImageVF53_Graft)
    GetPixelAccessor = _swig_new_instance_method(_itkBoneCommonPython.itkImageVF53_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkBoneCommonPython.itkImageVF53_GetNeighborhoodAccessor)
    __swig_destroy__ = _itkBoneCommonPython.delete_itkImageVF53
    cast = _swig_new_static_method(_itkBoneCommonPython.itkImageVF53_cast)

    def __array__(self, dtype=None):
        import itk
        import numpy as np
        array = itk.array_from_image(self)
        return np.asarray(array, dtype=dtype)


    def New(*args, **kargs):
        """New() -> itkImageVF53

        Create a new object of the class itkImageVF53 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageVF53.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageVF53.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageVF53.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageVF53 in _itkBoneCommonPython:
_itkBoneCommonPython.itkImageVF53_swigregister(itkImageVF53)
itkImageVF53___New_orig__ = _itkBoneCommonPython.itkImageVF53___New_orig__
itkImageVF53_cast = _itkBoneCommonPython.itkImageVF53_cast


def itkImageFileReaderIVF53_New():
    return itkImageFileReaderIVF53.New()

class itkImageFileReaderIVF53(itkImageSourceIVF53):
    r"""Proxy of C++ itkImageFileReaderIVF53 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBoneCommonPython.itkImageFileReaderIVF53___New_orig__)
    Clone = _swig_new_instance_method(_itkBoneCommonPython.itkImageFileReaderIVF53_Clone)
    SetFileNameInput = _swig_new_instance_method(_itkBoneCommonPython.itkImageFileReaderIVF53_SetFileNameInput)
    SetFileName = _swig_new_instance_method(_itkBoneCommonPython.itkImageFileReaderIVF53_SetFileName)
    GetFileNameInput = _swig_new_instance_method(_itkBoneCommonPython.itkImageFileReaderIVF53_GetFileNameInput)
    GetFileName = _swig_new_instance_method(_itkBoneCommonPython.itkImageFileReaderIVF53_GetFileName)
    SetImageIO = _swig_new_instance_method(_itkBoneCommonPython.itkImageFileReaderIVF53_SetImageIO)
    GetModifiableImageIO = _swig_new_instance_method(_itkBoneCommonPython.itkImageFileReaderIVF53_GetModifiableImageIO)
    GetImageIO = _swig_new_instance_method(_itkBoneCommonPython.itkImageFileReaderIVF53_GetImageIO)
    SetUseStreaming = _swig_new_instance_method(_itkBoneCommonPython.itkImageFileReaderIVF53_SetUseStreaming)
    GetUseStreaming = _swig_new_instance_method(_itkBoneCommonPython.itkImageFileReaderIVF53_GetUseStreaming)
    UseStreamingOn = _swig_new_instance_method(_itkBoneCommonPython.itkImageFileReaderIVF53_UseStreamingOn)
    UseStreamingOff = _swig_new_instance_method(_itkBoneCommonPython.itkImageFileReaderIVF53_UseStreamingOff)
    __swig_destroy__ = _itkBoneCommonPython.delete_itkImageFileReaderIVF53
    cast = _swig_new_static_method(_itkBoneCommonPython.itkImageFileReaderIVF53_cast)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderIVF53

        Create a new object of the class itkImageFileReaderIVF53 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderIVF53.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderIVF53.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderIVF53.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderIVF53 in _itkBoneCommonPython:
_itkBoneCommonPython.itkImageFileReaderIVF53_swigregister(itkImageFileReaderIVF53)
itkImageFileReaderIVF53___New_orig__ = _itkBoneCommonPython.itkImageFileReaderIVF53___New_orig__
itkImageFileReaderIVF53_cast = _itkBoneCommonPython.itkImageFileReaderIVF53_cast


from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def image_file_reader(*args,  file_name_input=..., file_name: str=..., image_io=..., use_streaming: bool=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for ImageFileReader"""
    import itk

    kwarg_typehints = { 'file_name_input':file_name_input,'file_name':file_name,'image_io':image_io,'use_streaming':use_streaming }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)

    instance = itk.ImageFileReader.New(*args, **kwargs)
    return instance.__internal_call__()

def image_file_reader_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.BoneMorphometry.ImageFileReader
    image_file_reader.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    image_file_reader.__doc__ = filter_object.__doc__

from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def image_file_writer(*args,  file_name: str=..., image_io=..., io_region=..., number_of_stream_divisions: int=..., use_compression: bool=..., compression_level: int=..., use_input_meta_data_dictionary: bool=...,**kwargs):
    """Functional interface for ImageFileWriter"""
    import itk

    kwarg_typehints = { 'file_name':file_name,'image_io':image_io,'io_region':io_region,'number_of_stream_divisions':number_of_stream_divisions,'use_compression':use_compression,'compression_level':compression_level,'use_input_meta_data_dictionary':use_input_meta_data_dictionary }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)

    instance = itk.ImageFileWriter.New(*args, **kwargs)
    return instance.__internal_call__()

def image_file_writer_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.BoneMorphometry.ImageFileWriter
    image_file_writer.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    image_file_writer.__doc__ = filter_object.__doc__

from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def image_source(*args, **kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for ImageSource"""
    import itk

    kwarg_typehints = {  }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)

    instance = itk.ImageSource.New(*args, **kwargs)
    return instance.__internal_call__()

def image_source_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.BoneMorphometry.ImageSource
    image_source.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    image_source.__doc__ = filter_object.__doc__




