# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _BoneMorphometryPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkBoneMorphometryFeaturesImageFilterPython
else:
    import _itkBoneMorphometryFeaturesImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkBoneMorphometryFeaturesImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkBoneMorphometryFeaturesImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.pyBasePython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkPointPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.vnl_matrixPython
import itk.vnl_vector_refPython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkImageToImageFilterCommonPython
import itk.itkBoneCommonPython
import itk.itkSimpleDataObjectDecoratorPython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkArrayPython
import itk.itkImageSourceCommonPython
import itk.itkImagePython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkImageToImageFilterBPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageSourcePython

def itkBoneMorphometryFeaturesImageFilterID3VIF3_New():
    return itkBoneMorphometryFeaturesImageFilterID3VIF3.New()

class itkBoneMorphometryFeaturesImageFilterID3VIF3(itk.itkImageToImageFilterBPython.itkImageToImageFilterID3VIF3):
    r"""Proxy of C++ itkBoneMorphometryFeaturesImageFilterID3VIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterID3VIF3___New_orig__)
    Clone = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterID3VIF3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterID3VIF3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterID3VIF3_GetMaskImage)
    SetThreshold = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterID3VIF3_SetThreshold)
    GetThreshold = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterID3VIF3_GetThreshold)
    SetNeighborhoodRadius = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterID3VIF3_SetNeighborhoodRadius)
    GetNeighborhoodRadius = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterID3VIF3_GetNeighborhoodRadius)
    InputPixelDimensionCheck = _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterID3VIF3_InputPixelDimensionCheck
    
    __swig_destroy__ = _itkBoneMorphometryFeaturesImageFilterPython.delete_itkBoneMorphometryFeaturesImageFilterID3VIF3
    cast = _swig_new_static_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterID3VIF3_cast)

    def New(*args, **kargs):
        """New() -> itkBoneMorphometryFeaturesImageFilterID3VIF3

        Create a new object of the class itkBoneMorphometryFeaturesImageFilterID3VIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBoneMorphometryFeaturesImageFilterID3VIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBoneMorphometryFeaturesImageFilterID3VIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBoneMorphometryFeaturesImageFilterID3VIF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBoneMorphometryFeaturesImageFilterID3VIF3 in _itkBoneMorphometryFeaturesImageFilterPython:
_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterID3VIF3_swigregister(itkBoneMorphometryFeaturesImageFilterID3VIF3)
itkBoneMorphometryFeaturesImageFilterID3VIF3___New_orig__ = _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterID3VIF3___New_orig__
itkBoneMorphometryFeaturesImageFilterID3VIF3_cast = _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterID3VIF3_cast


def itkBoneMorphometryFeaturesImageFilterIF3VIF3_New():
    return itkBoneMorphometryFeaturesImageFilterIF3VIF3.New()

class itkBoneMorphometryFeaturesImageFilterIF3VIF3(itk.itkImageToImageFilterBPython.itkImageToImageFilterIF3VIF3):
    r"""Proxy of C++ itkBoneMorphometryFeaturesImageFilterIF3VIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIF3VIF3___New_orig__)
    Clone = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIF3VIF3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIF3VIF3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIF3VIF3_GetMaskImage)
    SetThreshold = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIF3VIF3_SetThreshold)
    GetThreshold = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIF3VIF3_GetThreshold)
    SetNeighborhoodRadius = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIF3VIF3_SetNeighborhoodRadius)
    GetNeighborhoodRadius = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIF3VIF3_GetNeighborhoodRadius)
    InputPixelDimensionCheck = _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIF3VIF3_InputPixelDimensionCheck
    
    __swig_destroy__ = _itkBoneMorphometryFeaturesImageFilterPython.delete_itkBoneMorphometryFeaturesImageFilterIF3VIF3
    cast = _swig_new_static_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIF3VIF3_cast)

    def New(*args, **kargs):
        """New() -> itkBoneMorphometryFeaturesImageFilterIF3VIF3

        Create a new object of the class itkBoneMorphometryFeaturesImageFilterIF3VIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBoneMorphometryFeaturesImageFilterIF3VIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBoneMorphometryFeaturesImageFilterIF3VIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBoneMorphometryFeaturesImageFilterIF3VIF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBoneMorphometryFeaturesImageFilterIF3VIF3 in _itkBoneMorphometryFeaturesImageFilterPython:
_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIF3VIF3_swigregister(itkBoneMorphometryFeaturesImageFilterIF3VIF3)
itkBoneMorphometryFeaturesImageFilterIF3VIF3___New_orig__ = _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIF3VIF3___New_orig__
itkBoneMorphometryFeaturesImageFilterIF3VIF3_cast = _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIF3VIF3_cast


def itkBoneMorphometryFeaturesImageFilterISS3VIF3_New():
    return itkBoneMorphometryFeaturesImageFilterISS3VIF3.New()

class itkBoneMorphometryFeaturesImageFilterISS3VIF3(itk.itkImageToImageFilterBPython.itkImageToImageFilterISS3VIF3):
    r"""Proxy of C++ itkBoneMorphometryFeaturesImageFilterISS3VIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterISS3VIF3___New_orig__)
    Clone = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterISS3VIF3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterISS3VIF3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterISS3VIF3_GetMaskImage)
    SetThreshold = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterISS3VIF3_SetThreshold)
    GetThreshold = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterISS3VIF3_GetThreshold)
    SetNeighborhoodRadius = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterISS3VIF3_SetNeighborhoodRadius)
    GetNeighborhoodRadius = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterISS3VIF3_GetNeighborhoodRadius)
    InputPixelDimensionCheck = _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterISS3VIF3_InputPixelDimensionCheck
    
    __swig_destroy__ = _itkBoneMorphometryFeaturesImageFilterPython.delete_itkBoneMorphometryFeaturesImageFilterISS3VIF3
    cast = _swig_new_static_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterISS3VIF3_cast)

    def New(*args, **kargs):
        """New() -> itkBoneMorphometryFeaturesImageFilterISS3VIF3

        Create a new object of the class itkBoneMorphometryFeaturesImageFilterISS3VIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBoneMorphometryFeaturesImageFilterISS3VIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBoneMorphometryFeaturesImageFilterISS3VIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBoneMorphometryFeaturesImageFilterISS3VIF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBoneMorphometryFeaturesImageFilterISS3VIF3 in _itkBoneMorphometryFeaturesImageFilterPython:
_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterISS3VIF3_swigregister(itkBoneMorphometryFeaturesImageFilterISS3VIF3)
itkBoneMorphometryFeaturesImageFilterISS3VIF3___New_orig__ = _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterISS3VIF3___New_orig__
itkBoneMorphometryFeaturesImageFilterISS3VIF3_cast = _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterISS3VIF3_cast


def itkBoneMorphometryFeaturesImageFilterIUC3VIF3_New():
    return itkBoneMorphometryFeaturesImageFilterIUC3VIF3.New()

class itkBoneMorphometryFeaturesImageFilterIUC3VIF3(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIF3):
    r"""Proxy of C++ itkBoneMorphometryFeaturesImageFilterIUC3VIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUC3VIF3___New_orig__)
    Clone = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUC3VIF3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUC3VIF3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUC3VIF3_GetMaskImage)
    SetThreshold = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUC3VIF3_SetThreshold)
    GetThreshold = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUC3VIF3_GetThreshold)
    SetNeighborhoodRadius = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUC3VIF3_SetNeighborhoodRadius)
    GetNeighborhoodRadius = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUC3VIF3_GetNeighborhoodRadius)
    InputPixelDimensionCheck = _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUC3VIF3_InputPixelDimensionCheck
    
    __swig_destroy__ = _itkBoneMorphometryFeaturesImageFilterPython.delete_itkBoneMorphometryFeaturesImageFilterIUC3VIF3
    cast = _swig_new_static_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUC3VIF3_cast)

    def New(*args, **kargs):
        """New() -> itkBoneMorphometryFeaturesImageFilterIUC3VIF3

        Create a new object of the class itkBoneMorphometryFeaturesImageFilterIUC3VIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBoneMorphometryFeaturesImageFilterIUC3VIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBoneMorphometryFeaturesImageFilterIUC3VIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBoneMorphometryFeaturesImageFilterIUC3VIF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBoneMorphometryFeaturesImageFilterIUC3VIF3 in _itkBoneMorphometryFeaturesImageFilterPython:
_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUC3VIF3_swigregister(itkBoneMorphometryFeaturesImageFilterIUC3VIF3)
itkBoneMorphometryFeaturesImageFilterIUC3VIF3___New_orig__ = _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUC3VIF3___New_orig__
itkBoneMorphometryFeaturesImageFilterIUC3VIF3_cast = _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUC3VIF3_cast


def itkBoneMorphometryFeaturesImageFilterIUS3VIF3_New():
    return itkBoneMorphometryFeaturesImageFilterIUS3VIF3.New()

class itkBoneMorphometryFeaturesImageFilterIUS3VIF3(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIF3):
    r"""Proxy of C++ itkBoneMorphometryFeaturesImageFilterIUS3VIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUS3VIF3___New_orig__)
    Clone = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUS3VIF3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUS3VIF3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUS3VIF3_GetMaskImage)
    SetThreshold = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUS3VIF3_SetThreshold)
    GetThreshold = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUS3VIF3_GetThreshold)
    SetNeighborhoodRadius = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUS3VIF3_SetNeighborhoodRadius)
    GetNeighborhoodRadius = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUS3VIF3_GetNeighborhoodRadius)
    InputPixelDimensionCheck = _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUS3VIF3_InputPixelDimensionCheck
    
    __swig_destroy__ = _itkBoneMorphometryFeaturesImageFilterPython.delete_itkBoneMorphometryFeaturesImageFilterIUS3VIF3
    cast = _swig_new_static_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUS3VIF3_cast)

    def New(*args, **kargs):
        """New() -> itkBoneMorphometryFeaturesImageFilterIUS3VIF3

        Create a new object of the class itkBoneMorphometryFeaturesImageFilterIUS3VIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBoneMorphometryFeaturesImageFilterIUS3VIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBoneMorphometryFeaturesImageFilterIUS3VIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBoneMorphometryFeaturesImageFilterIUS3VIF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBoneMorphometryFeaturesImageFilterIUS3VIF3 in _itkBoneMorphometryFeaturesImageFilterPython:
_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUS3VIF3_swigregister(itkBoneMorphometryFeaturesImageFilterIUS3VIF3)
itkBoneMorphometryFeaturesImageFilterIUS3VIF3___New_orig__ = _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUS3VIF3___New_orig__
itkBoneMorphometryFeaturesImageFilterIUS3VIF3_cast = _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUS3VIF3_cast

class itkImageToImageFilterID3IVF53(itk.itkBoneCommonPython.itkImageSourceIVF53):
    r"""Proxy of C++ itkImageToImageFilterID3IVF53 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterID3IVF53_SetInput)
    GetInput = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterID3IVF53_GetInput)
    PushBackInput = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterID3IVF53_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterID3IVF53_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterID3IVF53_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterID3IVF53_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterID3IVF53_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterID3IVF53_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterID3IVF53_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterID3IVF53_GetDirectionTolerance)
    __swig_destroy__ = _itkBoneMorphometryFeaturesImageFilterPython.delete_itkImageToImageFilterID3IVF53
    cast = _swig_new_static_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterID3IVF53_cast)

# Register itkImageToImageFilterID3IVF53 in _itkBoneMorphometryFeaturesImageFilterPython:
_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterID3IVF53_swigregister(itkImageToImageFilterID3IVF53)
itkImageToImageFilterID3IVF53_cast = _itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterID3IVF53_cast

class itkImageToImageFilterIF3IVF53(itk.itkBoneCommonPython.itkImageSourceIVF53):
    r"""Proxy of C++ itkImageToImageFilterIF3IVF53 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIF3IVF53_SetInput)
    GetInput = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIF3IVF53_GetInput)
    PushBackInput = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIF3IVF53_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIF3IVF53_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIF3IVF53_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIF3IVF53_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIF3IVF53_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIF3IVF53_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIF3IVF53_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIF3IVF53_GetDirectionTolerance)
    __swig_destroy__ = _itkBoneMorphometryFeaturesImageFilterPython.delete_itkImageToImageFilterIF3IVF53
    cast = _swig_new_static_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIF3IVF53_cast)

# Register itkImageToImageFilterIF3IVF53 in _itkBoneMorphometryFeaturesImageFilterPython:
_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIF3IVF53_swigregister(itkImageToImageFilterIF3IVF53)
itkImageToImageFilterIF3IVF53_cast = _itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIF3IVF53_cast

class itkImageToImageFilterISS3IVF53(itk.itkBoneCommonPython.itkImageSourceIVF53):
    r"""Proxy of C++ itkImageToImageFilterISS3IVF53 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterISS3IVF53_SetInput)
    GetInput = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterISS3IVF53_GetInput)
    PushBackInput = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterISS3IVF53_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterISS3IVF53_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterISS3IVF53_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterISS3IVF53_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterISS3IVF53_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterISS3IVF53_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterISS3IVF53_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterISS3IVF53_GetDirectionTolerance)
    __swig_destroy__ = _itkBoneMorphometryFeaturesImageFilterPython.delete_itkImageToImageFilterISS3IVF53
    cast = _swig_new_static_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterISS3IVF53_cast)

# Register itkImageToImageFilterISS3IVF53 in _itkBoneMorphometryFeaturesImageFilterPython:
_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterISS3IVF53_swigregister(itkImageToImageFilterISS3IVF53)
itkImageToImageFilterISS3IVF53_cast = _itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterISS3IVF53_cast

class itkImageToImageFilterIUC3IVF53(itk.itkBoneCommonPython.itkImageSourceIVF53):
    r"""Proxy of C++ itkImageToImageFilterIUC3IVF53 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIUC3IVF53_SetInput)
    GetInput = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIUC3IVF53_GetInput)
    PushBackInput = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIUC3IVF53_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIUC3IVF53_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIUC3IVF53_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIUC3IVF53_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIUC3IVF53_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIUC3IVF53_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIUC3IVF53_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIUC3IVF53_GetDirectionTolerance)
    __swig_destroy__ = _itkBoneMorphometryFeaturesImageFilterPython.delete_itkImageToImageFilterIUC3IVF53
    cast = _swig_new_static_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIUC3IVF53_cast)

# Register itkImageToImageFilterIUC3IVF53 in _itkBoneMorphometryFeaturesImageFilterPython:
_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIUC3IVF53_swigregister(itkImageToImageFilterIUC3IVF53)
itkImageToImageFilterIUC3IVF53_cast = _itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIUC3IVF53_cast

class itkImageToImageFilterIUS3IVF53(itk.itkBoneCommonPython.itkImageSourceIVF53):
    r"""Proxy of C++ itkImageToImageFilterIUS3IVF53 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIUS3IVF53_SetInput)
    GetInput = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIUS3IVF53_GetInput)
    PushBackInput = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIUS3IVF53_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIUS3IVF53_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIUS3IVF53_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIUS3IVF53_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIUS3IVF53_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIUS3IVF53_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIUS3IVF53_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIUS3IVF53_GetDirectionTolerance)
    __swig_destroy__ = _itkBoneMorphometryFeaturesImageFilterPython.delete_itkImageToImageFilterIUS3IVF53
    cast = _swig_new_static_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIUS3IVF53_cast)

# Register itkImageToImageFilterIUS3IVF53 in _itkBoneMorphometryFeaturesImageFilterPython:
_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIUS3IVF53_swigregister(itkImageToImageFilterIUS3IVF53)
itkImageToImageFilterIUS3IVF53_cast = _itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIUS3IVF53_cast


def itkBoneMorphometryFeaturesImageFilterID3IVF53_New():
    return itkBoneMorphometryFeaturesImageFilterID3IVF53.New()

class itkBoneMorphometryFeaturesImageFilterID3IVF53(itkImageToImageFilterID3IVF53):
    r"""Proxy of C++ itkBoneMorphometryFeaturesImageFilterID3IVF53 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterID3IVF53___New_orig__)
    Clone = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterID3IVF53_Clone)
    SetMaskImage = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterID3IVF53_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterID3IVF53_GetMaskImage)
    SetThreshold = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterID3IVF53_SetThreshold)
    GetThreshold = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterID3IVF53_GetThreshold)
    SetNeighborhoodRadius = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterID3IVF53_SetNeighborhoodRadius)
    GetNeighborhoodRadius = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterID3IVF53_GetNeighborhoodRadius)
    InputPixelDimensionCheck = _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterID3IVF53_InputPixelDimensionCheck
    
    __swig_destroy__ = _itkBoneMorphometryFeaturesImageFilterPython.delete_itkBoneMorphometryFeaturesImageFilterID3IVF53
    cast = _swig_new_static_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterID3IVF53_cast)

    def New(*args, **kargs):
        """New() -> itkBoneMorphometryFeaturesImageFilterID3IVF53

        Create a new object of the class itkBoneMorphometryFeaturesImageFilterID3IVF53 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBoneMorphometryFeaturesImageFilterID3IVF53.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBoneMorphometryFeaturesImageFilterID3IVF53.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBoneMorphometryFeaturesImageFilterID3IVF53.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBoneMorphometryFeaturesImageFilterID3IVF53 in _itkBoneMorphometryFeaturesImageFilterPython:
_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterID3IVF53_swigregister(itkBoneMorphometryFeaturesImageFilterID3IVF53)
itkBoneMorphometryFeaturesImageFilterID3IVF53___New_orig__ = _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterID3IVF53___New_orig__
itkBoneMorphometryFeaturesImageFilterID3IVF53_cast = _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterID3IVF53_cast


def itkBoneMorphometryFeaturesImageFilterIF3IVF53_New():
    return itkBoneMorphometryFeaturesImageFilterIF3IVF53.New()

class itkBoneMorphometryFeaturesImageFilterIF3IVF53(itkImageToImageFilterIF3IVF53):
    r"""Proxy of C++ itkBoneMorphometryFeaturesImageFilterIF3IVF53 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIF3IVF53___New_orig__)
    Clone = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIF3IVF53_Clone)
    SetMaskImage = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIF3IVF53_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIF3IVF53_GetMaskImage)
    SetThreshold = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIF3IVF53_SetThreshold)
    GetThreshold = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIF3IVF53_GetThreshold)
    SetNeighborhoodRadius = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIF3IVF53_SetNeighborhoodRadius)
    GetNeighborhoodRadius = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIF3IVF53_GetNeighborhoodRadius)
    InputPixelDimensionCheck = _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIF3IVF53_InputPixelDimensionCheck
    
    __swig_destroy__ = _itkBoneMorphometryFeaturesImageFilterPython.delete_itkBoneMorphometryFeaturesImageFilterIF3IVF53
    cast = _swig_new_static_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIF3IVF53_cast)

    def New(*args, **kargs):
        """New() -> itkBoneMorphometryFeaturesImageFilterIF3IVF53

        Create a new object of the class itkBoneMorphometryFeaturesImageFilterIF3IVF53 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBoneMorphometryFeaturesImageFilterIF3IVF53.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBoneMorphometryFeaturesImageFilterIF3IVF53.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBoneMorphometryFeaturesImageFilterIF3IVF53.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBoneMorphometryFeaturesImageFilterIF3IVF53 in _itkBoneMorphometryFeaturesImageFilterPython:
_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIF3IVF53_swigregister(itkBoneMorphometryFeaturesImageFilterIF3IVF53)
itkBoneMorphometryFeaturesImageFilterIF3IVF53___New_orig__ = _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIF3IVF53___New_orig__
itkBoneMorphometryFeaturesImageFilterIF3IVF53_cast = _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIF3IVF53_cast


def itkBoneMorphometryFeaturesImageFilterISS3IVF53_New():
    return itkBoneMorphometryFeaturesImageFilterISS3IVF53.New()

class itkBoneMorphometryFeaturesImageFilterISS3IVF53(itkImageToImageFilterISS3IVF53):
    r"""Proxy of C++ itkBoneMorphometryFeaturesImageFilterISS3IVF53 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterISS3IVF53___New_orig__)
    Clone = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterISS3IVF53_Clone)
    SetMaskImage = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterISS3IVF53_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterISS3IVF53_GetMaskImage)
    SetThreshold = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterISS3IVF53_SetThreshold)
    GetThreshold = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterISS3IVF53_GetThreshold)
    SetNeighborhoodRadius = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterISS3IVF53_SetNeighborhoodRadius)
    GetNeighborhoodRadius = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterISS3IVF53_GetNeighborhoodRadius)
    InputPixelDimensionCheck = _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterISS3IVF53_InputPixelDimensionCheck
    
    __swig_destroy__ = _itkBoneMorphometryFeaturesImageFilterPython.delete_itkBoneMorphometryFeaturesImageFilterISS3IVF53
    cast = _swig_new_static_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterISS3IVF53_cast)

    def New(*args, **kargs):
        """New() -> itkBoneMorphometryFeaturesImageFilterISS3IVF53

        Create a new object of the class itkBoneMorphometryFeaturesImageFilterISS3IVF53 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBoneMorphometryFeaturesImageFilterISS3IVF53.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBoneMorphometryFeaturesImageFilterISS3IVF53.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBoneMorphometryFeaturesImageFilterISS3IVF53.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBoneMorphometryFeaturesImageFilterISS3IVF53 in _itkBoneMorphometryFeaturesImageFilterPython:
_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterISS3IVF53_swigregister(itkBoneMorphometryFeaturesImageFilterISS3IVF53)
itkBoneMorphometryFeaturesImageFilterISS3IVF53___New_orig__ = _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterISS3IVF53___New_orig__
itkBoneMorphometryFeaturesImageFilterISS3IVF53_cast = _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterISS3IVF53_cast


def itkBoneMorphometryFeaturesImageFilterIUC3IVF53_New():
    return itkBoneMorphometryFeaturesImageFilterIUC3IVF53.New()

class itkBoneMorphometryFeaturesImageFilterIUC3IVF53(itkImageToImageFilterIUC3IVF53):
    r"""Proxy of C++ itkBoneMorphometryFeaturesImageFilterIUC3IVF53 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUC3IVF53___New_orig__)
    Clone = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUC3IVF53_Clone)
    SetMaskImage = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUC3IVF53_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUC3IVF53_GetMaskImage)
    SetThreshold = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUC3IVF53_SetThreshold)
    GetThreshold = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUC3IVF53_GetThreshold)
    SetNeighborhoodRadius = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUC3IVF53_SetNeighborhoodRadius)
    GetNeighborhoodRadius = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUC3IVF53_GetNeighborhoodRadius)
    InputPixelDimensionCheck = _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUC3IVF53_InputPixelDimensionCheck
    
    __swig_destroy__ = _itkBoneMorphometryFeaturesImageFilterPython.delete_itkBoneMorphometryFeaturesImageFilterIUC3IVF53
    cast = _swig_new_static_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUC3IVF53_cast)

    def New(*args, **kargs):
        """New() -> itkBoneMorphometryFeaturesImageFilterIUC3IVF53

        Create a new object of the class itkBoneMorphometryFeaturesImageFilterIUC3IVF53 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBoneMorphometryFeaturesImageFilterIUC3IVF53.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBoneMorphometryFeaturesImageFilterIUC3IVF53.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBoneMorphometryFeaturesImageFilterIUC3IVF53.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBoneMorphometryFeaturesImageFilterIUC3IVF53 in _itkBoneMorphometryFeaturesImageFilterPython:
_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUC3IVF53_swigregister(itkBoneMorphometryFeaturesImageFilterIUC3IVF53)
itkBoneMorphometryFeaturesImageFilterIUC3IVF53___New_orig__ = _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUC3IVF53___New_orig__
itkBoneMorphometryFeaturesImageFilterIUC3IVF53_cast = _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUC3IVF53_cast


def itkBoneMorphometryFeaturesImageFilterIUS3IVF53_New():
    return itkBoneMorphometryFeaturesImageFilterIUS3IVF53.New()

class itkBoneMorphometryFeaturesImageFilterIUS3IVF53(itkImageToImageFilterIUS3IVF53):
    r"""Proxy of C++ itkBoneMorphometryFeaturesImageFilterIUS3IVF53 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUS3IVF53___New_orig__)
    Clone = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUS3IVF53_Clone)
    SetMaskImage = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUS3IVF53_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUS3IVF53_GetMaskImage)
    SetThreshold = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUS3IVF53_SetThreshold)
    GetThreshold = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUS3IVF53_GetThreshold)
    SetNeighborhoodRadius = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUS3IVF53_SetNeighborhoodRadius)
    GetNeighborhoodRadius = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUS3IVF53_GetNeighborhoodRadius)
    InputPixelDimensionCheck = _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUS3IVF53_InputPixelDimensionCheck
    
    __swig_destroy__ = _itkBoneMorphometryFeaturesImageFilterPython.delete_itkBoneMorphometryFeaturesImageFilterIUS3IVF53
    cast = _swig_new_static_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUS3IVF53_cast)

    def New(*args, **kargs):
        """New() -> itkBoneMorphometryFeaturesImageFilterIUS3IVF53

        Create a new object of the class itkBoneMorphometryFeaturesImageFilterIUS3IVF53 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBoneMorphometryFeaturesImageFilterIUS3IVF53.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBoneMorphometryFeaturesImageFilterIUS3IVF53.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBoneMorphometryFeaturesImageFilterIUS3IVF53.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBoneMorphometryFeaturesImageFilterIUS3IVF53 in _itkBoneMorphometryFeaturesImageFilterPython:
_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUS3IVF53_swigregister(itkBoneMorphometryFeaturesImageFilterIUS3IVF53)
itkBoneMorphometryFeaturesImageFilterIUS3IVF53___New_orig__ = _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUS3IVF53___New_orig__
itkBoneMorphometryFeaturesImageFilterIUS3IVF53_cast = _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUS3IVF53_cast


from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def image_to_image_filter(*args: itkt.ImageLike, **kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for ImageToImageFilter"""
    import itk

    kwarg_typehints = {  }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)

    instance = itk.ImageToImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def image_to_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.BoneMorphometry.ImageToImageFilter
    image_to_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    image_to_image_filter.__doc__ = filter_object.__doc__

from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def bone_morphometry_features_image_filter(*args: itkt.ImageLike,  mask_image: itkt.Image=..., threshold: float=..., neighborhood_radius: Sequence[int]=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for BoneMorphometryFeaturesImageFilter"""
    import itk

    kwarg_typehints = { 'mask_image':mask_image,'threshold':threshold,'neighborhood_radius':neighborhood_radius }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)

    instance = itk.BoneMorphometryFeaturesImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def bone_morphometry_features_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.BoneMorphometry.BoneMorphometryFeaturesImageFilter
    bone_morphometry_features_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    bone_morphometry_features_image_filter.__doc__ = filter_object.__doc__




