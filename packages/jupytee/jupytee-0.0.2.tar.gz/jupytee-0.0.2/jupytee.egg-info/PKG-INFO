Metadata-Version: 2.1
Name: jupytee
Version: 0.0.2
Summary: Magics for using GPT-like models inside Jupyter.
Author: Fernando Pérez
Author-email: fernando.perez@berkeley.edu
License: BSD 3-Clause License
Keywords: ipython,jupyter,GPT-3,OpenAI
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: BSD License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE

# jupytee - magics for using GPT-like models inside Jupyter

[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/fperez/jupytee/HEAD?labpath=examples%2Fjupytee-demo.ipynb)

A small, experimental playground with Jupyter magics to use OpenAI's GPT-3 models inside Jupyter environments.

This isn't even alpha software - it's just a quick and dirty prototype.  But it works, if you have the python `openai` package installed and the environment variable `OPENAI_API_KEY` defined with your personal API key as [per the docs](https://beta.openai.com/account/api-keys).

Yes, the name is a silly play on the pronunciation of GPT and Jupyter.

## Installation

`pip install jupytee`


## Usage

To load the extension, use

`%load_ext jupytee`

The package provides a few core magics, `%chat`, `%pic` and `%code` (along with some extra helpers), that wrap your interactions around the [OpenAI Python API](https://beta.openai.com/docs/api-reference/introduction). They target the main entry points of the API: text completion, image generation and code completion, respectively. 

You can see them in action in the notebook contained in the `examples` directory (which you can run immediately by clicking on the Binder button above).

Briefly, these are some examples of how you can use them. A simple question (note the extra space before `?`, needed b/c IPython's help will otherwise trigger by accident):

```
%chat What is 100F in Celsius ?
```

You can control the sampling temperature with `-T`:

```
%chat -T 1 --raw Write an uplifting short poem
```

Markdown (with math) work:

```
%%chat
Produce the LaTeX form of Maxwell's equations.
```

For `pic`, you can control image size and the number of images returned:

```
%pic -s m -n 2 an astronaut knitting
```

When generating code, you can iteratively refine the answer by referring to the `CODE` special word (in all CAPS):

`%code A function to add two numbers.`

and then:

`%code Update CODE to have a docstring explaining its use.`


## License

BSD 3-Clause.

BSD 3-Clause License

Copyright (c) 2022, Fernando Pérez

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

1. Redistributions of source code must retain the above copyright notice, this
   list of conditions and the following disclaimer.

2. Redistributions in binary form must reproduce the above copyright notice,
   this list of conditions and the following disclaimer in the documentation
   and/or other materials provided with the distribution.

3. Neither the name of the copyright holder nor the names of its
   contributors may be used to endorse or promote products derived from
   this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
