{
  "version": 3,
  "sources": ["../../../../client/django-formset/IncompleteSelect.ts"],
  "sourcesContent": ["\nexport abstract class IncompleteSelect {\n\tprivate readonly endpoint?: string;\n\tprivate readonly fieldName?: string;\n\tprotected isIncomplete: boolean;\n\tprotected readonly fieldGroup: Element;\n\n\tconstructor(element: HTMLSelectElement) {\n\t\tconst fieldGroup = element.closest('django-field-group');\n\t\tconst form = element.form;\n\t\tconst formset = element.closest('django-formset');\n\t\tif (!fieldGroup || !form || !formset)\n\t\t\tthrow new Error(\"Attempt to initialize <django-selectize> outside <django-formset>\");\n\t\tthis.fieldGroup = fieldGroup;\n\t\tthis.isIncomplete = element.hasAttribute('incomplete');\n\t\tif (this.isIncomplete) {\n\t\t\t// select fields marked as \"uncomplete\" will fetch additional data from their backend\n\t\t\tconst formName = form.getAttribute('name') ?? '__default__';\n\t\t\tthis.endpoint = formset.getAttribute('endpoint') ?? '';\n\t\t\tthis.fieldName = `${formName}.${element.getAttribute('name')}`;\n\t\t}\n\t\tform.addEventListener('reset', event => this.formResetted(event));\n\t\tform.addEventListener('submitted', event => this.formSubmitted(event));\n\t}\n\n\tprotected abstract formResetted(event: Event) : void;\n\n\tprotected abstract formSubmitted(event: Event) : void;\n\n\tprotected touch = () => {\n\t\tthis.fieldGroup.classList.remove('dj-untouched');\n\t\tthis.fieldGroup.classList.remove('dj-validated');\n\t\tthis.fieldGroup.classList.add('dj-touched');\n\t}\n\n\tprotected async loadOptions(query: string, successCallback: Function) {\n\t\tconst headers = new Headers();\n\t\theaders.append('Accept', 'application/json');\n\t\tconst url = `${this.endpoint}?field=${this.fieldName}&${query}`;\n\t\tconst response = await fetch(url, {\n\t\t\tmethod: 'GET',\n\t\t\theaders: headers,\n\t\t});\n\t\tif (response.status === 200) {\n\t\t\tconst data = await response.json();\n\t\t\tif (typeof data.incomplete === 'boolean') {\n\t\t\t\tthis.isIncomplete = data.incomplete;\n\t\t\t}\n\t\t\tsuccessCallback(data.options);\n\t\t} else {\n\t\t\tconsole.error(`Failed to fetch from ${url} (status=${response.status})`);\n\t\t}\n\t}\n}\n"],
  "mappings": "AACO,IAAeA,EAAf,KAAgC,CAMtC,YAAYC,EAA4B,CAsBxC,KAAU,MAAQ,IAAM,CACvB,KAAK,WAAW,UAAU,OAAO,cAAc,EAC/C,KAAK,WAAW,UAAU,OAAO,cAAc,EAC/C,KAAK,WAAW,UAAU,IAAI,YAAY,CAC3C,EAzBC,IAAMC,EAAaD,EAAQ,QAAQ,oBAAoB,EACjDE,EAAOF,EAAQ,KACfG,EAAUH,EAAQ,QAAQ,gBAAgB,EAChD,GAAI,CAACC,GAAc,CAACC,GAAQ,CAACC,EAC5B,MAAM,IAAI,MAAM,mEAAmE,EAGpF,GAFA,KAAK,WAAaF,EAClB,KAAK,aAAeD,EAAQ,aAAa,YAAY,EACjD,KAAK,aAAc,CAEtB,IAAMI,EAAWF,EAAK,aAAa,MAAM,GAAK,cAC9C,KAAK,SAAWC,EAAQ,aAAa,UAAU,GAAK,GACpD,KAAK,UAAY,GAAGC,KAAYJ,EAAQ,aAAa,MAAM,GAC5D,CACAE,EAAK,iBAAiB,QAASG,GAAS,KAAK,aAAaA,CAAK,CAAC,EAChEH,EAAK,iBAAiB,YAAaG,GAAS,KAAK,cAAcA,CAAK,CAAC,CACtE,CAYA,MAAgB,YAAYC,EAAeC,EAA2B,CACrE,IAAMC,EAAU,IAAI,QACpBA,EAAQ,OAAO,SAAU,kBAAkB,EAC3C,IAAMC,EAAM,GAAG,KAAK,kBAAkB,KAAK,aAAaH,IAClDI,EAAW,MAAM,MAAMD,EAAK,CACjC,OAAQ,MACR,QAASD,CACV,CAAC,EACD,GAAIE,EAAS,SAAW,IAAK,CAC5B,IAAMC,EAAO,MAAMD,EAAS,KAAK,EAC7B,OAAOC,EAAK,YAAe,YAC9B,KAAK,aAAeA,EAAK,YAE1BJ,EAAgBI,EAAK,OAAO,CAC7B,MACC,QAAQ,MAAM,wBAAwBF,aAAeC,EAAS,SAAS,CAEzE,CACD",
  "names": ["IncompleteSelect", "element", "fieldGroup", "form", "formset", "formName", "event", "query", "successCallback", "headers", "url", "response", "data"]
}
