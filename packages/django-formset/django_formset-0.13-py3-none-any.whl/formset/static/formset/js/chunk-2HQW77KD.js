var d=class{constructor(e){this.touch=()=>{this.fieldGroup.classList.remove("dj-untouched"),this.fieldGroup.classList.remove("dj-validated"),this.fieldGroup.classList.add("dj-touched")};let i=e.closest("django-field-group"),o=e.form,s=e.closest("django-formset");if(!i||!o||!s)throw new Error("Attempt to initialize <django-selectize> outside <django-formset>");if(this.fieldGroup=i,this.isIncomplete=e.hasAttribute("incomplete"),this.isIncomplete){let t=o.getAttribute("name")??"__default__";this.endpoint=s.getAttribute("endpoint")??"",this.fieldName=`${t}.${e.getAttribute("name")}`}o.addEventListener("reset",t=>this.formResetted(t)),o.addEventListener("submitted",t=>this.formSubmitted(t))}async loadOptions(e,i){let o=new Headers;o.append("Accept","application/json");let s=`${this.endpoint}?field=${this.fieldName}&${e}`,t=await fetch(s,{method:"GET",headers:o});if(t.status===200){let r=await t.json();typeof r.incomplete=="boolean"&&(this.isIncomplete=r.incomplete),i(r.options)}else console.error(`Failed to fetch from ${s} (status=${t.status})`)}};export{d as a};
//# sourceMappingURL=chunk-2HQW77KD.js.map
