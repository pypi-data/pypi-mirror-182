"""Generated from lda_xc_teter93.mpl."""

import jax
import jax.numpy as jnp
from jax.numpy import array as array
from jax.numpy import int32 as int32
from jax.numpy import nan as nan
from typing import Callable


def pol(r0, r1, params, p):
  t2 = r0 + r1
  t3 = 0.1e1 / t2
  t4 = (r0 - r1) * t3
  t5 = 0.1e1 + t4
  t7 = p.zeta_threshold ** (0.1e1 / 0.3e1)
  t8 = t7 * p.zeta_threshold
  t9 = t5 ** (0.1e1 / 0.3e1)
  t11 = jnp.where(t5 <= p.zeta_threshold, t8, t9 * t5)
  t12 = 0.1e1 - t4
  t14 = t12 ** (0.1e1 / 0.3e1)
  t16 = jnp.where(t12 <= p.zeta_threshold, t8, t14 * t12)
  t18 = 2 ** (0.1e1 / 0.3e1)
  t22 = (t11 + t16 - 0.2e1) / (0.2e1 * t18 - 0.2e1)
  t26 = 3 ** (0.1e1 / 0.3e1)
  t28 = 0.1e1 / jnp.pi
  t29 = t28 ** (0.1e1 / 0.3e1)
  t30 = 4 ** (0.1e1 / 0.3e1)
  t31 = t30 ** 2
  t33 = t2 ** (0.1e1 / 0.3e1)
  t34 = 0.1e1 / t33
  t40 = t26 ** 2
  t42 = t29 ** 2
  t44 = t33 ** 2
  t46 = t42 * t30 / t44
  res = -(0.4581652932831429e0 + 0.119086804055547e0 * t22 + (0.2217058676663745e1 + 0.6157402568883345e0 * t22) * t26 * t29 * t31 * t34 / 0.4e1 + (0.7405551735357053e0 + 0.1574201515892867e0 * t22) * t40 * t46 / 0.4e1 + 0.3e1 / 0.4e1 * (0.1968227878617998e-1 + 0.3532336663397157e-2 * t22) * t28 * t3) / (0.25e0 * t26 * t29 * t31 * t34 + (0.4504130959426697e1 + 0.2673612973836267e0 * t22) * t40 * t46 / 0.4e1 + 0.3e1 / 0.4e1 * (0.1110667363742916e1 + 0.2052004607777787e0 * t22) * t28 * t3 + 0.3e1 / 0.16e2 * (0.2359291751427506e-1 + 0.4200005045691381e-2 * t22) * t26 * t29 * t28 * t31 / t33 / t2)
  return res

def unpol(r0, params, p):
  t2 = p.zeta_threshold ** (0.1e1 / 0.3e1)
  t4 = jnp.where(0.1e1 <= p.zeta_threshold, t2 * p.zeta_threshold, 1)
  t7 = 2 ** (0.1e1 / 0.3e1)
  t11 = (0.2e1 * t4 - 0.2e1) / (0.2e1 * t7 - 0.2e1)
  t15 = 3 ** (0.1e1 / 0.3e1)
  t17 = 0.1e1 / jnp.pi
  t18 = t17 ** (0.1e1 / 0.3e1)
  t19 = 4 ** (0.1e1 / 0.3e1)
  t20 = t19 ** 2
  t22 = r0 ** (0.1e1 / 0.3e1)
  t23 = 0.1e1 / t22
  t29 = t15 ** 2
  t31 = t18 ** 2
  t33 = t22 ** 2
  t35 = t31 * t19 / t33
  t41 = 0.1e1 / r0
  res = -(0.4581652932831429e0 + 0.119086804055547e0 * t11 + (0.2217058676663745e1 + 0.6157402568883345e0 * t11) * t15 * t18 * t20 * t23 / 0.4e1 + (0.7405551735357053e0 + 0.1574201515892867e0 * t11) * t29 * t35 / 0.4e1 + 0.3e1 / 0.4e1 * (0.1968227878617998e-1 + 0.3532336663397157e-2 * t11) * t17 * t41) / (0.25e0 * t15 * t18 * t20 * t23 + (0.4504130959426697e1 + 0.2673612973836267e0 * t11) * t29 * t35 / 0.4e1 + 0.3e1 / 0.4e1 * (0.1110667363742916e1 + 0.2052004607777787e0 * t11) * t17 * t41 + 0.3e1 / 0.16e2 * (0.2359291751427506e-1 + 0.4200005045691381e-2 * t11) * t15 * t18 * t17 * t20 / t22 / r0)
  return res